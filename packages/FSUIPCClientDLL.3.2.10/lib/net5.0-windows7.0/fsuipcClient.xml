<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fsuipcClient</name>
    </assembly>
    <members>
        <member name="T:FSUIPC.FSRunwayDesignator">
            <summary>
            Designator for FS Runways (left, right etc)
            </summary>
        </member>
        <member name="F:FSUIPC.FSRunwayDesignator.none">
            <summary>
            This is the only runway with this number
            </summary>
        </member>
        <member name="F:FSUIPC.FSRunwayDesignator.left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:FSUIPC.FSRunwayDesignator.right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:FSUIPC.FSRunwayDesignator.centre">
            <summary>
            Centre
            </summary>
        </member>
        <member name="F:FSUIPC.FSRunwayDesignator.water">
            <summary>
            Water runway
            </summary>
        </member>
        <member name="T:FSUIPC.FsRunwayID">
            <summary>
            Represents a runway identifier for flight sim
            </summary>
        </member>
        <member name="F:FSUIPC.FsRunwayID.Number">
            <summary>
            The number of the runway. 1-36, or one of 37=N, 38=NE, 39=E, 40=SE, 41=S, 42=SW, 43=W, 44=NW
            </summary>
        </member>
        <member name="F:FSUIPC.FsRunwayID.Designator">
            <summary>
            The designator for this runway if there are multiple runways with this number.  Otherwise this is set to 'none'.
            </summary>
        </member>
        <member name="M:FSUIPC.FsRunwayID.ToString">
            <summary>
            A string representing the runway as text.  If the runway numnber is 0 then this returns a zero-lenth string.
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayID.ReciprocalRunwayID">
            <summary>
            Returns the Runway ID at the opposte end of this runway
            </summary>
        </member>
        <member name="T:FSUIPC.AIPlaneInfo">
            <summary>
            A class holding information about an AI traffic plane.<para>This class cannot be instantiated.  You can only obtain instances of AIPlaneInfo from the active AITrafficServices object.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.AIPlaneInfo.ToString">
            <summary>
            Gets a string containing the plane's ATCid, departure and arrival airports
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.DepartureAirportInfo">
            <summary>
            The FsAirport object from the AirportsDatabase which is the departure aiport for this plane.<para>This will only be filled in if the AirportsDatabase has been loaded.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.ArrivalAirportInfo">
            <summary>
            The FsAirport object from the AirportsDatabase which is the arrival aiport for this plane.<para>This will only be filled in if the AirportsDatabase has been loaded.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.RunwayAssignedInfo">
            <summary>
            The FsRunway object from the AirportsDatabase to which this plane is assigned<para>This will only be filled in if the AirportsDatabase has been loaded and the plane has been assigned a runway.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.GateInfo">
            <summary>
            The FsGate object from the AirportsDatabase to which this plane is assigned<para>This will only be filled in if the AirportsDatabase has been loaded and the plane has been assigned a gate.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.IsAtGate">
            <summary>
            True if the plane is currently at its assigned Gate.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.IsOnRunway">
            <summary>
            True if the plane is currently on its assigned Runway.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.IsOnGround">
            <summary>
            Tells you if this plane is on the ground (true) or airborne (false)
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.TailNumber">
            <summary>
            The tail number for this plane.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the tail number to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Airline">
            <summary>
            The Airline for this plane.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the airline to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.FlightNumber">
            <summary>
            The flight number for this plane if one is assigned.  For GA aircraft this is the same as the tail number.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the flight number to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AircraftType">
            <summary>
            The aircraft type (manufacturer) for this plane.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the aircraft type to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AircraftModel">
            <summary>
            The model of this plane.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the aircraft model to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AircraftTitle">
            <summary>
            The title of this plane from the config file.  Note that this is blank unless you call the GetExtendedPlaneIdentifiers() method on this plane, or you have set the aircraft title to update automatically using AITrafficServices.UpdateExtendedPlaneIdentifiers().
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AltitudeDifferenceFeet">
            <summary>
            The difference between this AI plane and the player in Feet.  Positive values are higher than the player, negative values are lower than the player. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AltitudeDifferenceMetres">
            <summary>
            The difference between this AI plane and the player in Metres.  Positive values are higher than the player, negative values are lower than the player. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.DistanceFeet">
            <summary>
            The distance between this AI plane and the player in Feet. This value is always positive. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.DistanceNM">
            <summary>
            The distance between this AI plane and the player in Nautical Miles. This value is always positive.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.DistanceMetres">
            <summary>
            The distance between this AI plane and the player in Metres. This value is always positive.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.BearingToMagnetic">
            <summary>
            The bearing to this AI plane from the player in degrees magnetic. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.BearingTo">
            <summary>
            The bearing to this AI plane from the player in degrees TRUE. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.BearingFrom">
            <summary>
            The bearing from this AI plane to the player in degrees TRUE. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.BearingFromMag">
            <summary>
            The bearing from this AI plane to the player in degrees MAGNETIC. 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.ID">
            <summary>
            The ID as specified in the TCAS table in FSUIPC.  Negative values are FS AI aircraft.  Positive values are third-party injected aircraft.  Possibly.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Location">
            <summary>
            The location of this plane
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AltitudeFeet">
            <summary>
            The altitude of this plane in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.AltitudeMetres">
            <summary>
            The altitude of this plane in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Heading">
            <summary>
            The TRUE heading of this plane (Not magnetic heading).  Usual FSUIPC format: 360 degrees == 65536
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.HeadingDegrees">
            <summary>
            The heading of this plane in degrees TRUE.  
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.HeadingDegreesMag">
            <summary>
            The heading of this plane in degrees MAGNETIC.  
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.GroundSpeed">
            <summary>
            The ground speed of this plane in Knots.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.VirticalSpeedFeet">
            <summary>
            The virtical speed of this plane in Feet per Minute
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.VirticalSpeedMetres">
            <summary>
            The virtical speed of this plane in Metres per Minute
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.ATCIdentifier">
            <summary>
            ATC identifer for this plane.  By default this is Airline + Flight Number or Tail number.<para> For Tail number, if more than 14 chars you get the *LAST* 14.  Airline name is truncated to allow whole flight number to be included</para><para>This can be changed by an option in the FSUIPC.ini file.  See the FSUIPC programmers guide for details.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.State">
            <summary>
            The current state of this plane (e.g. taking off, en route etc)
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Com1">
            <summary>
            The current Com 1 frequency tuned in this plane.  This is in the traditional raw FSUIPC BCD format (0Xaabb as in 1aa.bb)<para>NOTE that since FSUIPC 3.60, in FS2004 this is set to 0x9999 whilst the aircraft is in SLEW mode rather than normal flight mode.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Com1String">
            <summary>
            A string representing the current Com 1 frequency tuned in this plane.<para>NOTE that since FSUIPC 3.60, in FS2004 this is set to 0x9999 whilst the aircraft is in SLEW mode rather than normal flight mode.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Key">
            <summary>
             This is the flight identifier Key (usually negative, as in 0xFFFFxxxx) which can be used to identify the flight in the Traffic file. It is not guaranteed to be unique except in one traffic File. <para></para>[Note: this is not available in FSX!] 
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.File">
            <summary>
             This is a file Id, to distinguish between multiple traffic files. The default FS2004 Traffic File has an Id of 14. <para></para>[Note: this is not available in FSX!]
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.PitchDegrees">
            <summary>
            The pitch of the plane in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Pitch">
            <summary>
            The pitch of the plane in raw FSUIPC units (degrees * 65536 / 360)
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.BankDegrees">
            <summary>
            The bank of the plane in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.Bank">
            <summary>
            The bank of the plane in raw FSUIPC units (degrees * 65536 / 360)
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.DepartureICAO">
            <summary>
            ICAO code of the departure airport of this plane
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.ArrivalICAO">
            <summary>
            ICAO code of the destination airport of the plane
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.RunwayAssigned">
            <summary>
            The assigned runway for this plane. Number will be 0 if not assigned for take-off or landing.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.GateName">
            <summary>
            FSX ONLY! This is a numeric representation of the gate name, when one is assigned. Otherwise it is zero.<para>See offset D040 in the FSUIPC4 Offsets Status PDF (in the FSUIPC SDK) for what the values mean.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.GateNumber">
            <summary>
            FSX ONLY! This is the gate number, if it is actually numbered.
            </summary>
        </member>
        <member name="P:FSUIPC.AIPlaneInfo.GateType">
            <summary>
            FSX ONLY! This is a numeric representation of the gate type, when one is assigned. Otherwise it is zero.<para>See offset D040 in the FSUIPC4 Offsets Status PDF (in the FSUIPC SDK) for what the values mean.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.AIPlaneInfo.GetExtendedPlaneIndentifiers(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Immediately updates the specified extended plane identifier properties for this plane.  This does not wait for the next refresh of the AI traffic. 
            </summary>
            <param name="TailNumber">Set to true to update the TailNumber property of this plane</param>
            <param name="AirlineAndFlightNumber">Set to true to update the Airline and FlightNumber properties of this plane</param>
            <param name="AircraftTypeAndModel">Set to true to update the AircraftType and AircraftModel properties of this plane</param>
            <param name="AircraftTitle">Set to true to update the AircraftTitle property of this plane</param>
        </member>
        <member name="T:FSUIPC.AIPlaneInfoCollection">
            <summary>
            A strongly-types list of AI Planes
            </summary>
        </member>
        <member name="T:FSUIPC.AirportsDatabase">
            <summary>
            A class that reads the files produced by Pete Downson's MakeRunways.exe and provides your application
            with a database of airports with runway, helipad and gate information
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.LoadGates">
            <summary>
            Set to false to prevent loading the gate information from the G5.csv file. Default is true.
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.LoadHelipads">
            <summary>
            Set to false to prevent loading the helipad information from the Helipads.csv file. Default is true.
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.LoadFrequencies">
            <summary>
            Set to false to prevent loading the frequency information from the G5.csv file. Default is true.
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.LoadTaxiways">
            <summary>
            Set to true to enable loading the taxiway information from T5.csv. Default is false.
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.Airports">
            <summary>
            A strongly-types list of FsAirport objects. This list can be queried with LINQ.
            </summary>
        </member>
        <member name="P:FSUIPC.AirportsDatabase.IsLoaded">
            <summary>
            True if the database has been loaded.
            </summary>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.Clear">
            <summary>
            Clears all the airports from the database. Use to free up memory if your application no longer needs the database.
            </summary>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.Load">
            <summary>
            Loads the database by reading the output file from MakeRunways.exe. Looks in the main FlightSim install folder. This is provided
            by FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.Load(System.Collections.Generic.HashSet{System.String})">
            <summary>
            Loads the database by reading the output file from MakeRunways.exe. Looks in the main FlightSim install folder. This is provided
            by FSUIPC.
            </summary>
            <param name="AirportList">A Hashset of strings containing a list of ICAO codes. Only these airports are loaded into the database.</param>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.Load(System.String)">
            <summary>
            Loads the database by reading the output file from MakeRunways.exe. Looks in the folder provided in the parameter.
            </summary>
            <param name="Folder">The full path of the folder where the MakeRunways output files can be found.</param>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.Load(System.String,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Loads the database by reading the output file from MakeRunways.exe. Looks in the folder provided in the parameter.
            </summary>
            <param name="Folder">The full path of the folder where the MakeRunways output files can be found.</param>
            <param name="AirportList">A Hashset of strings containing a list of ICAO codes. Only these airports are loaded into the database.</param>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.SetReferenceLocation">
            <summary>
            Sets the location from where distance and bearing information is calculated. This default overload uses the current player position.
            </summary>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.SetReferenceLocation(FSUIPC.FsAirport)">
            <summary>
            Sets the location from where distance and bearing information is calculated. 
            </summary>
            <param name="Airport">The Airport to use as the reference location.</param>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.SetReferenceLocation(System.String)">
            <summary>
            Sets the location from where distance and bearing information is calculated. 
            </summary>
            <param name="ICAO">The ICAO code of the airport to use as the reference location.</param>
        </member>
        <member name="M:FSUIPC.AirportsDatabase.SetReferenceLocation(FSUIPC.FsLatitude,FSUIPC.FsLongitude,System.Double)">
            <summary>
            Sets the location from where distance and bearing information is calculated. 
            </summary>
            <param name="NewLatitude">The Latitude of the reference location</param>
            <param name="NewLongitude">The Longitude of the reference location</param>
            <param name="MagVar">The Magnetic Variation at the reference location</param>
        </member>
        <member name="T:FSUIPC.FsGatesCollection">
            <summary>
            A strongly-typed list of Gates
            </summary>
        </member>
        <member name="P:FSUIPC.FsGatesCollection.Item(System.String)">
            <summary>
            Gets a single gate  using the gate ID 
            </summary>
            <param name="ID">The GateID - usually the number</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsHelipadsCollection">
            <summary>
            A strongly-typed collection of helipads
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipadsCollection.Item(System.String)">
            <summary>
            Gets a single helipad using the ID
            </summary>
            <param name="ID">The ID of the helipad</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsTaxiwayCollection">
            <summary>
            A strongly-typed collection of taxiways
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwayCollection.Item(System.String)">
            <summary>
            Gets a single taxiway using the ID (Name)
            </summary>
            <param name="ID">The ID (Name) of the taxiway</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsRunwayCollection">
            <summary>
            A strongly-typed list of Runways
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayCollection.Item(System.String)">
            <summary>
            Gets a single runway using the ID. e.g. "09" or "27L"
            </summary>
            <param name="RunwayID">A string containing the ID of the runway</param>
            <returns></returns>
        </member>
        <member name="P:FSUIPC.FsRunwayCollection.Item(FSUIPC.FsRunwayID)">
            <summary>
            Gets a single runway using a runway ID object
            </summary>
            <param name="RunwayID">A FsRunwayID object describing the runway</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsAirportCollection">
            <summary>
            A strongly-typed list of Airports
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirportCollection.Item(System.String)">
            <summary>
            Gets a single airport using the IACO code. Must be in upper case.
            </summary>
            <param name="ICAO">A string containing the ICAO code.</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsAirportCollection.InRangeOfNauticalMiles(System.Double)">
            <summary>
            Gets a new list of airports that are within the specified distance. The list will be ordered by distance with the closest first.
            </summary>
            <param name="DistanceNM">The max distance for an airport to be included in Nautical Miles</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsAirportCollection.InRangeOfKilometres(System.Double)">
            <summary>
            Gets a new list of airports that are within the specified distance. The list will be ordered by distance with the closest first.
            </summary>
            <param name="DistanceKM">The max distance for an airport to be included in Kilometres</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsAirportCollection.WithRunway(System.Predicate{FSUIPC.FsRunway})">
            <summary>
            Gets a new list of airports that have at least one runway which matches the search criteria.
            </summary>
            <param name="RunwayMatch">A delegate or Lambda expression that will test each runway.</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsTaxiwayIntersectionCollection`1">
            <summary>
            A strongly-typed collection of taxiway intersections
            </summary>
        </member>
        <member name="T:FSUIPC.FsILSInfo">
            <summary>
            A class holding information about the ILS facilities for a runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsILSInfo.Frequency">
            <summary>
            The frequency of the ILS beacon
            </summary>
        </member>
        <member name="P:FSUIPC.FsILSInfo.Heading">
            <summary>
            The heading of the ILS beacon
            </summary>
        </member>
        <member name="P:FSUIPC.FsILSInfo.Slope">
            <summary>
            The glideslope of the ILS beacon in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsILSInfo.ID">
            <summary>
            The ID of the ILS beacon
            </summary>
        </member>
        <member name="P:FSUIPC.FsILSInfo.Name">
            <summary>
            The name of the ILS beacon
            </summary>
        </member>
        <member name="T:FSUIPC.FsVASILightInfo">
            <summary>
            A class holding information about the VASI Lights for a runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsVASILightInfo.Type">
            <summary>
            The type of VASI lights
            </summary>
        </member>
        <member name="P:FSUIPC.FsVASILightInfo.BiasX">
            <summary>
            The distance from the centreline of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsVASILightInfo.BiasZ">
            <summary>
            The distance from the threshold of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsVASILightInfo.Spacing">
            <summary>
            The distance between the two rows of lights
            </summary>
        </member>
        <member name="P:FSUIPC.FsVASILightInfo.Pitch">
            <summary>
            The angle of the glideslope 
            </summary>
        </member>
        <member name="T:FSUIPC.FsRunwayLightsInfo">
            <summary>
            A class holding information about the types of lighting available on a runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.Approach">
            <summary>
            The type of approach lights available
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.Edge">
            <summary>
            Brightness of the lights on the edge of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.Centre">
            <summary>
            Brightness of the lights on the centreline of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.CentreRed">
            <summary>
            True if the centre lights of the runway are red
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.HasEndLights">
            <summary>
            Has lights at the end of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.HasREIL">
            <summary>
            Has Runway End Identification Lights installed
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.HasTouchdownLights">
            <summary>
            Has lights marking the touchdown area on the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.StrobeCount">
            <summary>
            The number of approach strobe lights
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.LeftVASI">
            <summary>
            Details about the Left VASI lights
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayLightsInfo.RightVASI">
            <summary>
            Details about the right VASI lights
            </summary>
        </member>
        <member name="T:FSUIPC.FsRunwayPatternInfo">
            <summary>
            A class holding information about the traffic pattern for a runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayPatternInfo.DirectionTakeoff">
            <summary>
            The direction of the traffic pattern (Left/Right) used when taking off
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayPatternInfo.DirectionLanding">
            <summary>
            The direction of the traffic pattern (Left/Right) used when landing
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayPatternInfo.AltitudeMetres">
            <summary>
            The pattern altitude (above mean sea level) in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunwayPatternInfo.AltitudeFeet">
            <summary>
            The pattern altitude (above mean sea level) in Feet
            </summary>
        </member>
        <member name="T:FSUIPC.FsRunway">
            <summary>
            A class holding all the information about a runway
            </summary>
        </member>
        <member name="F:FSUIPC.FsRunway.ID">
            <summary>
            The number of the runway (e.g. 27L)
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.Airport">
            <summary>
            The FsAriport object that this runway belongs to
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.LengthFeet">
            <summary>
            The length of the runway in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.LengthMetres">
            <summary>
            The length of the runway in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.WidthFeet">
            <summary>
            The width of the runway in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.WidthMetres">
            <summary>
            the width of the runway in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.HeadingMagnetic">
            <summary>
            The Magnetic Heading of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.HeadingTrue">
            <summary>
            The True Heading of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.Surface">
            <summary>
            The type of surface the runway has
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ILSInfo">
            <summary>
            Information about the ILS facilities installed for the runway. If no ILS is installed this property is null (Nothing in VB)
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ThresholdLocation">
            <summary>
            The Longitude/Latitude of runway threshold
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ThresholdOffsetFeet">
            <summary>
            The diitance from the threshold to the real start of the runway in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ThresholdOffsetMetres">
            <summary>
            The distance from the threshold to the real start of the runway in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.StartLocation">
            <summary>
            The FlightSim's start location for this runway. Used to position the player for takeoff.
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ClosedForLanding">
            <summary>
            True if this runway is closed to landing traffic
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.ClosedForTakeoff">
            <summary>
            True if this runway is closed to traffic taking off
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.LightsInfo">
            <summary>
            Information about all the lights for this runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.PatternInfo">
            <summary>
            Information about the take-off and landing pattern for this rumway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.Bounds">
            <summary>
            An FsLatLonQuadrilateral defining the Lat/Lon of the four corners of the runway
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.DistanceNauticalMiles">
            <summary>
            The distance to this runway's threshold in Nautical Miles.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.DistanceFeet">
            <summary>
             The distance to this runway's threshold in Feets.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.DistanceMetres">
            <summary>
             The distance to this runway's threshold in Metres.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.BearingToTrue">
            <summary>
            The bearing in degrees TRUE to the threshold of this runway.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.BearingToMagnetic">
            <summary>
            The bearing in degrees MAGNETIC to the threshold of this runway.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.IsPlayerOnRunway">
            <summary>
            True if the player's aircraft is currently on the runway. (Must be on the ground).<para>NOTE: this is only filled in if the reference position has been set to the current player postion</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.AIPlaneOnRunway">
            <summary>
            The AIPlaneInfo of the AI Traffic Plane that is currently on this runway. If no AI Traffic is on this runway then it will be null (Nothing in VB).<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.AITrafficArrivals">
            <summary>
            A list of AIPlaneInfo representing the AI Traffic Planes that are currently assigned to arrive on this runway.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.AITrafficDepartrures">
            <summary>
            A list of AIPlaneInfo representing the AI Traffic Planes that are currently assigned to depart from this runway.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsRunway.TaxiwayIntersections">
            <summary>
            Returns a list of taxiways at this airport that intersect with this runway.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsRunway.ToString">
            <summary>
            Get the a string representation of the Runway ID  e.g. 27L
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsRunway.MoveAircraftHere(System.Boolean)">
            <summary>
            Moves the player's aircraft to this runway
            </summary>
            <param name="LeavePaused">Set to True to leave the FlightSim paused after moving the aircraft.</param>
        </member>
        <member name="M:FSUIPC.FsRunway.#ctor">
            <summary>
            Creates a new instance of FsRunway
            </summary>
        </member>
        <member name="T:FSUIPC.FsGate">
            <summary>
            A class holding all the information about an airport gate
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.ID">
            <summary>
            The ID of the Gate
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.Airport">
            <summary>
            The FsAirport object that this gate belongs to
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.RadiusFeet">
            <summary>
            The radius of the gate area in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.RadiusMetres">
            <summary>
            The radius of the gate area in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.Location">
            <summary>
            The latitude and longitude of the centre of the gate area
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.HeadingMagnetic">
            <summary>
            The MAGNETIC heading of the gate (the direction the aircraft is facing when parked at the gate).
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.HeadingTrue">
            <summary>
            The TRUE heading of the gate (the direction the aircraft is facing when parked at the gate).
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.Type">
            <summary>
            The type of gate
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.Bounds">
            <summary>
            A FsLatLonCircle representing the area covered by this gate 
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.DistanceNauticalMiles">
            <summary>
            The distance to this gate's centre point in Nautical Miles.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.DistanceFeet">
            <summary>
            The distance to this gate's centre point in Feet.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.DistanceMetres">
            <summary>
            The distance to this gate's centre point in Metres.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.BearingToTrue">
            <summary>
            The bearing in degrees TRUE to this gate's centre point.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.BearingToMagnetic">
            <summary>
            The bearing in degrees MAGNETIC to this gate's centre point.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.IsPlayerAtGate">
            <summary>
            True if the player's aircraft is currently in the gate area.<para>NOTE: this is only filled in if the reference position has been set to the current player postion</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.IsAIPlaneAtGate">
            <summary>
            True if the AI Traffic Plane assigned to this gate is currently parked at this gate.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.AIPlaneAssigned">
            <summary>
            The AIPlaneInfo of the AI Traffic Plane that is currently assigned to this gate. If no AI Traffic is on this runway then it will be null (Nothing in VB). Check IsAIPlaneAtGate to see if the plane is currently at the gate or not.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.Airlines">
            <summary>
            A list of Airlines that use this gate.
            </summary>
        </member>
        <member name="P:FSUIPC.FsGate.TaxiwayIntersections">
            <summary>
            Returns a list of taxiways at this airport that intersect with this gate.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsGate.ToString">
            <summary>
            Gets a string representation of this gate. Includes ID and Type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsGate.MoveAircraftHere(System.Boolean)">
            <summary>
            Moves the player's aircraft to this gate
            </summary>
            <param name="LeavePaused">Set to True to leave the FlightSim paused after moving the aircraft.</param>
        </member>
        <member name="M:FSUIPC.FsGate.#ctor">
            <summary>
            Creates a new instance of FsGate
            </summary>
        </member>
        <member name="T:FSUIPC.FsHelipad">
            <summary>
            A calss holding all the information about a helipad
            </summary>
        </member>
        <member name="F:FSUIPC.FsHelipad.ID">
            <summary>
            The ID of the helipad
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Airport">
            <summary>
            The FsAirport object that this gate belongs to
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Location">
            <summary>
            The longitude and latitude of the helipad
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.AltitudeFeet">
            <summary>
            The altitude of the helipad in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.AltitudeMetres">
            <summary>
            The altitude of the helipad in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.HeadingMagnetic">
            <summary>
            The heading of the helipad in degrees MAGNETIC
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.HeadingTrue">
            <summary>
            The heading of the helipad in degrees True
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.LengthFeet">
            <summary>
            The length of the helipad in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.LengthMetres">
            <summary>
            The length of the helipad in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.WidthFeet">
            <summary>
            The width of the helipad in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.WidthMetres">
            <summary>
            The width of the helipad in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Surface">
            <summary>
            The surface type of this helipad
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Bounds">
            <summary>
            An FsLatLonQuadrilateral representing the lat/lon of the four conrners of the helipad
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.DistanceNauticalMiles">
            <summary>
            The distance to this helipad in Nautical Miles.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.DistanceFeet">
            <summary>
            The distance to this helipad in Feet.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.DistanceMetres">
            <summary>
            The distance to this helipad in Metres.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.BearingToTrue">
            <summary>
            The bearing in degrees TRUE to this helipad.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.BearingToMagnetic">
            <summary>
            The bearing in degrees MAGNETIC  to this helipad.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.IsPlayerOnHelipad">
            <summary>
            True if the player's aircraft is currently on the helipad. (Must be on the ground).<para>NOTE: this is only filled in if the reference position has been set to the current player postion</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Type">
            <summary>
            The type of marking for the helipad. e.g. Circle, H, Medical etc
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.Closed">
            <summary>
            True if the helipad is closed to traffic.
            </summary>
        </member>
        <member name="P:FSUIPC.FsHelipad.TaxiwayIntersections">
            <summary>
            Returns a list of taxiways at this airport that intersect with this helipad.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsHelipad.ToString">
            <summary>
            Get the a string representation of the Helipad ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsHelipad.#ctor">
            <summary>
            Creates a new instance of FsHelipad
            </summary>
        </member>
        <member name="M:FSUIPC.FsHelipad.MoveAircraftHere(System.Boolean)">
            <summary>
            Moves the player's aircraft to this helipad
            </summary>
            <param name="LeavePaused">Set to True to leave the FlightSim paused after moving the aircraft.</param>
        </member>
        <member name="T:FSUIPC.FsAirport">
            <summary>
            A class holding all the information about an Airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.ICAO">
            <summary>
            The ICAO code of this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Name">
            <summary>
            The name of this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Country">
            <summary>
            The country this airport is in
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.State">
            <summary>
            The state of the USA this airport is in. This is blank for airports outside the USA.
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.City">
            <summary>
            The name of the city this airports serves
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.SceneryFilePath">
            <summary>
            The path to the scenery (.BGL) file that defines this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.SceneryName">
            <summary>
            The name of the scenery that defines this airport.
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Location">
            <summary>
            The Latitude and Longitude of this airport (usually somehere near the centre).
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.AltitudeFeet">
            <summary>
            The altitiude of this airport in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.AltitudeMetres">
            <summary>
            The altitiude of this airport in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.MagVar">
            <summary>
            The magnetic variation at this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.DistanceNauticalMiles">
            <summary>
            The distance to this airport in Nautical Miles.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.DistanceKilometres">
            <summary>
            The distance to this airport in Kilometres.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.BearingToTrue">
            <summary>
            The bearing in degrees TRUE to this airport.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.BearingToMagnetic">
            <summary>
            The bearing in degrees MAGNETIC to this airport.<para>NOTE: this is only filled in if a reference position has been set</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.AITrafficArrivals">
            <summary>
            A list of AIPlaneInfo representing the AI Traffic Planes that are currently assigned to arrive at this airport.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.AITrafficDepartures">
            <summary>
            A list of AIPlaneInfo representing the AI Traffic Planes that are currently assigned to depart from this airport.<para>NOTE: This is only filled in if the AITraffic information has been refreshed.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Runways">
            <summary>
            A list of all runways at this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Taxiways">
            <summary>
            A list of all taxiways at this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Gates">
            <summary>
            A list of all gates at this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.Helipads">
            <summary>
            A list of all helipads at this airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirport.COMFrequencies">
            <summary>
            A list of all COM Frequencies used at this airport
            </summary>
        </member>
        <member name="M:FSUIPC.FsAirport.ToString">
            <summary>
            Gets a string showing the ICAO code and name of the airport
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsAirport.CalculateTaxiwayIntersections">
            <summary>
            Populates the taxiway intersection data for this Airport. Only works if you have set the AiportsDatabase.LoadTaxiways property to true.
            </summary>
        </member>
        <member name="T:FSUIPC.FsAirportComFrequency">
            <summary>
            A class holding details about a COM frequency used at an airport
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirportComFrequency.Name">
            <summary>
            The name of the ATC position
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirportComFrequency.ComType">
            <summary>
            The type of COMS
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirportComFrequency.Frequency">
            <summary>
            The frequency of the ATC poisition
            </summary>
        </member>
        <member name="M:FSUIPC.FsAirportComFrequency.ToString">
            <summary>
            Gets a string showing the name and frequency
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsTaxiway">
            <summary>
            A class holding information about a Taxiway
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.Name">
            <summary>
            The name of the taxiway (e.g. A1)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.Airport">
            <summary>
            The FsAriport object that this taxiway belongs to
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.StartPoint">
            <summary>
            The start point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.EndPoint">
            <summary>
            The end point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.MinimumWidthMetres">
            <summary>
            The end point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.MinimumWidthFeet">
            <summary>
            The end point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.MaximumWidthMetres">
            <summary>
            The end point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.MaximumWidthFeet">
            <summary>
            The end point of this taxiway (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.IsPlayerOnTaxiway">
            <summary>
            Returns true if the player is within the bounds of this taxiway
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.Segments">
            <summary>
            Returns the individual segments that make up this taxiway
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.TaxiwayIntersections">
            <summary>
            Returns a list of all other taxiways at this airport that intersect with this taxiway.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.RunwayIntersections">
            <summary>
            Returns a list of all runways at this airport that intersect with this taxiway.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.HelipadIntersections">
            <summary>
            Returns a list of all helipads at this airport that intersect with this taxiway.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiway.GateIntersections">
            <summary>
            Returns a list of all parking gates at this airport that intersect with this taxiway.
            <para>Only populated after calling CalculateTaxiwayIntersection() method on the FsAriport object</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsTaxiway.ToString">
            <summary>
            Get the ID (Name) if the Taxiway  e.g. A
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsTaxiway.ContainsPoint(FSUIPC.FsLatLonPoint)">
            <summary>
            Searches the entire taxiway (each segment) to determine if the given point is on the taxiway
            </summary>
            <param name="Point"></param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsTaxiway.#ctor">
            <summary>
            Creates a new instance of an FSTaxiway
            </summary>
        </member>
        <member name="T:FSUIPC.FsTaxiwaySegment">
            <summary>
            A class holding information about a Taxiway Segment
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.Type">
            <summary>
            The type of segment
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.StartPoint">
            <summary>
            The start point of this segment (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.StartWidthMetres">
            <summary>
            The width in metres of this segment at the start point
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.StartWidthFeet">
            <summary>
            The width in feet of this segment at the start point
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.EndPoint">
            <summary>
            The end point of this segment (on the centre line)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.EndWidthMetres">
            <summary>
            The width in metres of this segment at the end point
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.EndWidthFeet">
            <summary>
            The width in feet of this segment at the end point
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.Bounds">
            <summary>
            The bounding rectangle of this segment 
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.IsPlayerOnSegment">
            <summary>
            Returns true if the player is within the bounds of this taxiway segment
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.Next">
            <summary>
            The next segment on this taxiway. Returns null (Nothing in VB.NET) if this is the last segment.
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwaySegment.Previous">
            <summary>
            The previous segment on this taxiway. Returns null (Nothing in VB.NET) if this is the first segment.
            </summary>
        </member>
        <member name="M:FSUIPC.FsTaxiwaySegment.ToString">
            <summary>
            Returns a string representing the type of this segment
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsTaxiwayIntersection`1">
            <summary>
            A class holding information about a Taxiway Segment
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwayIntersection`1.Location">
            <summary>
            The location of the intersection
            </summary>
        </member>
        <member name="P:FSUIPC.FsTaxiwayIntersection`1.Object">
            <summary>
            The object that intersects with the taxiway
            </summary>
        </member>
        <member name="M:FSUIPC.FsTaxiwayIntersection`1.ToString">
            <summary>
            Displays a summary of this Intersection
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsAirportComFrequencyCollection">
            <summary>
            A strongly-typed list of COM Frequency classes
            </summary>
        </member>
        <member name="P:FSUIPC.FsAirportComFrequencyCollection.Item(FSUIPC.FsAirportComType)">
            <summary>
            Gets information about a single COM frequecy using the Type.
            </summary>
            <param name="ComType">The type of com frequency</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.ATCIdentifier">
            <summary>
            Specifies a format for the ATCIdentifer property on AIPlaneInfo objects
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.TailNumber">
            <summary>
            The tail number of the aircraft
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.AirlineAndFlightNumber">
            <summary>
            The airline and flight number (uses tail number for GA planes)
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.AircraftType">
            <summary>
            The type (manufacturer) of the aircraft
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.AircraftTitle">
            <summary>
            The title of the plane from the config file
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.AircraftTypePlusLast3DigitsOfTailNumber">
            <summary>
            The type (manufacturer) of the aircraft followed by last three digits of the tail number
            </summary>
        </member>
        <member name="F:FSUIPC.ATCIdentifier.Model">
            <summary>
            The model of the aircraft
            </summary>
        </member>
        <member name="T:FSUIPC.AITrafficServices">
            <summary>
            A class that provides information about the AI aircraft in Flight Simulator.  This reads the TCAS tables from FSUIPC and presents the information in a .NET friendly collection of AIPlaneInfo classes.<para>This class cannot be instantiated, you must obtain a reference to the active instance via the property on the FSUIPCConnection class.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.AITrafficServices.GroundTraffic">
            <summary>
            A .NET List of AIPlaneInfo objects representing AI traffic on the ground in order of distance from the player.  The closest AI plane is the first in the list.
            </summary>
        </member>
        <member name="P:FSUIPC.AITrafficServices.AirborneTraffic">
            <summary>
            A .NET List of AIPlaneInfo objects representing AI traffic in the air in order of distance from the player.  The closest AI plane is the first in the list.
            </summary>
        </member>
        <member name="P:FSUIPC.AITrafficServices.AllTraffic">
            <summary>
            A .NET List of AIPlaneInfo objects representing all AI traffic in order of distance from the player.  The closest AI plane is the first in the list.
            </summary>
        </member>
        <member name="M:FSUIPC.AITrafficServices.GetPlaneInfoByID(System.Int32)">
            <summary>
            Retrieves a specific AIPlaneInfo object with the specified ID.
            </summary>
            <param name="ID">The ID of the plane to bring back</param>
            <returns>The requested AIPlaneInfo or null (Nothing in VB) is the ID was not found.</returns>
        </member>
        <member name="M:FSUIPC.AITrafficServices.UpdateExtendedPlaneIndentifiers(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <para>Tells the AITrafficServices to retrieve the specified extended plane identifier properties for all planes when updating the AI Traffic Information.</para>
            <para>Getting this data from FSUIPC is very inefficient.  Setting these option could cause long delays when calling RefreshAITrafficInformation() for the first time (possibly over 1 second per plane over WideFS)</para>
            <para>However, subsequent calls will be very fast as this information is only ever retrieved once per plane.  Only new AI traffic entering the system will cause a very slight delay.</para>
            <para>The more extended information you request the longer any delays will be.</para>
            <para>See also: AITrafficServices.OverrideAirborneTrafficINISettings() and OverrideGroundTrafficINISettings()</para>
            </summary>
            <param name="TailNumber">Set to true to update the TailNumber property for all planes</param>
            <param name="AirlineAndFlightNumber">Set to true to update the Airline and FlightNumber properties for all planes</param>
            <param name="AircraftTypeAndModel">Set to true to update the AircraftType and AircraftModel properties for all planes</param>
            <param name="AircraftTitle">Set to true to update the AircraftTitle property for all planes</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.RefreshAITrafficInformation">
            <summary>
            Refreshes the information for ground and air AI traffic
            </summary>
        </member>
        <member name="M:FSUIPC.AITrafficServices.RefreshAITrafficInformation(System.Boolean,System.Boolean)">
            <summary>
            Refreshes the information for ground and air AI traffic as specified
            </summary>
            <param name="UpdateGroundTraffic">Set to true to update the information for traffic on the ground</param>
            <param name="UpdateAirborneTraffic">Set to true to update the information for traffic in the air</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.ApplyFilter(System.Boolean,System.Boolean,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Applies a filter to the ground and/or airborne traffic lists.  All traffic falling outside of the specified critia is deleted from the traffic lists.
            </summary>
            <param name="ApplyToGroundTraffic">Apply the filter to the gound traffic list</param>
            <param name="ApplyToAirborneTraffic">Apply the filter to the airborne traffic list</param>
            <param name="StartBearing">Specifies the start of a bearing arc.  Only AI Traffic within this bearing arc in relation to the player is kept.  This is TRUE bearing in degrees.<para>For no bearing restriction set this to 0 and the EndBearing to 360</para></param>
            <param name="EndBearing">Specifies the end of a bearing arc.  Only AI Traffic within this bearing arc in relation to the player is kept.  This is TRUE bearing in degrees.<para>For no bearing restriction set this to 360 and the StartBearing to 0</para></param>
            <param name="MinAltitude">Only AI Traffic above this altitude is kept.  This is in Feet.  Set to null (Nothing in VB) for no minimum limit.</param>
            <param name="MaxAltitude">Only AI Traffic below this altitude is kept.  This is in Feet.  Set to null (Nothing in VB) for no maximum limit.</param>
            <param name="WithinDistance">Only AI Traffic within this distance is kept.  This is in Nautical Miles.  Set to null (Nothing in VB) for no distance limit.</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.GetArrivalRunwaysInUse(System.String)">
            <summary>
            <para>Gets a list of the runways in use for arriving aircraft for the given airport code.</para>
            <para></para>
            <para>Note that this information is derived from the AI traffic information and is therefore only as current as the last RefreshAITrfficInformation() call.  Airports will only show active runways if they have AI planes currently assigned to a runway . This information is not harmed by filtering the AI traffic.</para>
            <para></para>
            <para>Note also that this is NOT using the FSUIPC facilities at D000.  FSUIPC takes ages to give this information back whereas this DLL can return it instantly.</para>
            </summary>
            <param name="AirportICAOCode">The ICAO code for the airport you want active arrival runways for.</param>
            <returns>A List of FSRunway objects representing the runways in use.</returns>
        </member>
        <member name="M:FSUIPC.AITrafficServices.GetArrivalRunwaysInUse">
            <summary>
            <para>Gets a list of the runways in use for arriving aircraft for the given airport code.</para>
            <para></para>
            <para>Note that this information is derived from the AI traffic information and is therefore only as current as the last RefreshAITrfficInformation() call.  Airports will only show active runways if they have AI planes currently assigned to a runway . This information is not harmed by filtering the AI traffic.</para>
            <para></para>
            <para>Note also that this is NOT using the FSUIPC facilities at D000.  FSUIPC takes ages to give this information back whereas this DLL can return it instantly.</para>
            </summary>
            <returns>A dictionary of Lists of FSRunway objects representing the runways in use. The key is the ICAO code of the airport.</returns>
        </member>
        <member name="M:FSUIPC.AITrafficServices.GetDepartureRunwaysInUse(System.String)">
            <summary>
            <para>Gets a list of the runways in use for departing aircraft for the given airport code.</para>
            <para></para>
            <para>Note that this information is derived from the AI traffic information and is therefore only as current as the last RefreshAITrfficInformation() call.  Airports will only show active runways if they have AI planes currently assigned to a runway.  This information is not harmed by filtering the AI traffic.</para>
            <para></para>
            <para>Note also that this is NOT using the FSUIPC facilities at D000.  FSUIPC takes ages to give this information back whereas this DLL can return it instantly.</para>
            </summary>
            <param name="AirportICAOCode">The ICAO code for the airport you want active arrival runways for.</param>
            <returns>A List of FSRunway objects representing the runways in use.</returns>
        </member>
        <member name="M:FSUIPC.AITrafficServices.GetDepartureRunwaysInUse">
            <summary>
            <para>Gets a list of the runways in use for departing aircraft for the given airport code.</para>
            <para></para>
            <para>Note that this information is derived from the AI traffic information and is therefore only as current as the last RefreshAITrfficInformation() call.  Airports will only show active runways if they have AI planes currently assigned to a runway.  This information is not harmed by filtering the AI traffic.</para>
            <para></para>
            <para>Note also that this is NOT using the FSUIPC facilities at D000.  FSUIPC takes ages to give this information back whereas this DLL can return it instantly.</para>
            </summary>
            <returns>A dictionary of Lists of FSRunway objects representing the runways in use. The key is the ICAO code of the airport.</returns>
        </member>
        <member name="M:FSUIPC.AITrafficServices.OverrideAirborneTrafficINISettings(System.Nullable{FSUIPC.ATCIdentifier},System.Nullable{System.Byte})">
            <summary>
            <para>This method allows you to override the setting in the user's FSUIPC.INI file.</para>
            <para>Note that because of the internal workings of FSUIPC, your override will be cancelled after 20 seconds.  Therefore you need to call this method on a regular basis.  The FSUIPC documentation recommends every 5 seconds.</para>
            </summary>
            <param name="ATCId">The format you want for the ATCIdentifier property.  Set to null (Nothing in VB) to use the setting in the FSUIPC.INI file.  This ATCIdentifier is only 15 characters long.  If the info you request won't fit it will be truncated.  Consider using the extended plane identifiers feature instead to get this information.  See AITrafficTools.UpdateExtendedPlaneIdentifiers()</param>
            <param name="RangeInNM">The range around the player's aircraft in which AI traffic will be detected.  In Nautical Miles.  0=Unlimited.  Null (Nothing in VB)=Use setting in FSUIPC.INI file.</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.OverrideGroundTrafficINISettings(System.Nullable{FSUIPC.ATCIdentifier},System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.Byte})">
            <summary>
            <para>This method allows you to override the setting in the user's FSUIPC.INI file.</para>
            <para>Note that because of the internal workings of FSUIPC, your override will be cancelled after 20 seconds.  Therefore you need to call this method on a regular basis.  The FSUIPC documentation recommends every 5 seconds.</para>
            </summary>
            <param name="ATCId">The format you want for the ATCIdentifier property.  This ATCIdentifier is only 15 characters long.  If the info you request won't fit it will be truncated.  Consider using the extended plane identifiers feature instead to get this information.  See AITrafficTools.UpdateExtendedPlaneIdentifiers()</param>
            <param name="PreferActive">Set to True to prioritise active aircraft (not sleeping or initialising) when the FSUIPC Traffic Tables get full.  Set to False to prioritise closest aircraft regardless of state.</param>
            <param name="RangeInAirInNM">The range around the player's aircraft in which ground AI traffic will be detected while the Player is in the AIR.  In Nautical Miles.  0=Unlimited.  Null (Nothing in VB)=Use setting in FSUIPC.INI file.</param>
            <param name="RangeOnGroundInNM">The range around the player's aircraft in which ground AI traffic will be detected while the player is on the GROUND.  In Nautical Miles.  0=Unlimited.  Null (Nothing in VB)=Use setting in FSUIPC.INI file.</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.AddTCASTarget(System.Int32,System.String,FSUIPC.AITrafficStatus,FSUIPC.FsLatitude,FSUIPC.FsLongitude,System.Double,System.Double,System.Int16,System.Int16,System.Int16)">
            <summary>
            Adds a TCAS Target to the internal FSUIPC AI Traffic Tables.  This does not add AI planes to Flight Sim.
            Add as many targets as you like and send them to FSUIPC with SendTCASTargets().
            To erase an aircraft provide the specific id for that entry, and set the ATCIdentifier parameter to a zero-length string.
            In any case, FSUIPC will automatically erase any externally supplied aircraft after about 8–12 seconds if it receives no further updates in that time. Even if the aircraft is static you'll need to supply updates for it regularly.
            For FSX this feature REQUIRES FSUIPC4 version 4.536 or above.
            </summary>
            <param name="ID">Your own ID</param>
            <param name="ATCIdentifier">The ATC Identifier string (e.g. flight no or call sign etc...).  Set to a zero-length string to erase the TCAS target from FSUIPC.</param>
            <param name="State">The state of the plane</param>
            <param name="Latitude">The Latitude of the plane</param>
            <param name="Longitude">The Longitude of the plane</param>
            <param name="AltitudeFeet">The Altitude of the plane in Feet</param>
            <param name="HeadingDegreesTrue">The True heading (not magnetic) of the plane in degrees.</param>
            <param name="GroundSpeedKnots">The ground speed of the plane in knots</param>
            <param name="VerticalSpeedFeet">The virtical speed of the plane in Feet per Second</param>
            <param name="Com1">COM1 frequency, 4 digits in BCD format. A frequency of 123.45 is represented by 0x2345. The leading 1 is assumed</param>
        </member>
        <member name="M:FSUIPC.AITrafficServices.SendTCASTargets">
            <summary>
            Sends the TCAS targets added with AddTCASTarget() to FSUIPC.
            For FSX this feature REQUIRES FSUIPC4 version 4.536 or above.
            </summary>
        </member>
        <member name="T:FSUIPC.FsFrequencyCOM">
            <summary>
            A struct representing a COM frequency used in FlightSim. This can convert between strings, decimal and FSUIPC's BCD format for offsets.
            </summary>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.ToBCD">
            <summary>
            Gets the COM Frequency as a Binary-Coded Decimal (BCD). Used by FSUIPC in some offsets.
            </summary>
            <returns>A ushort in BCD format that can written to FSUIPC offsets</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.ToDecimal">
            <summary>
            Gets the COM Frequency as a decimal type
            </summary>
            <returns>The COM Frequency as a decimal</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.ToString">
            <summary>
            Gets the COM Frequncy as a string. NOTE this is not take into account the user's culture settings. It always formats with a . for the decimal point.
            </summary>
            <returns>A string representing the COM Frequency.</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.#ctor(System.UInt16)">
            <summary>
            Creates a new COM Frequency from the Binary-Coded Decimal (BCD) format used by FSUIPC.
            </summary>
            <param name="freqBCD">The COM Frequency value in BCD format</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.#ctor(System.String)">
            <summary>
            Creates a new COM Frequency from a string. NOTE The string must be in Invariant Culture. That is, the decimal place must be a . not a ,
            </summary>
            <param name="freqString">The COM Frequency as a string</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyCOM.#ctor(System.Decimal)">
            <summary>
            Creates a new COM Frequency from a decimal value
            </summary>
            <param name="freqDecimal">The COM Frequency as a decimal</param>
        </member>
        <member name="T:FSUIPC.FsFrequencyNAV">
            <summary>
            A struct representing a NAV frequency used in FlightSim. This can convert between strings, decimal and FSUIPC's BCD format for offsets.
            </summary>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.ToBCD">
            <summary>
            Gets the NAV Frequency as a Binary-Coded Decimal (BCD). Used by FSUIPC in some offsets.
            </summary>
            <returns>A ushort in BCD format that can written to FSUIPC offsets</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.ToDecimal">
            <summary>
            Gets the NAV Frequency as a decimal type
            </summary>
            <returns>The NAV Frequency as a decimal</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.ToString">
            <summary>
            Gets the NAV Frequncy as a string. NOTE this is not take into account the user's culture settings. It always formats with a . for the decimal point.
            </summary>
            <returns>A string representing the NAV Frequency.</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.#ctor(System.UInt16)">
            <summary>
            Creates a new NAV Frequency from the Binary-Coded Decimal (BCD) format used by FSUIPC.
            </summary>
            <param name="freqBCD">The NAV Frequency value in BCD format</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.#ctor(System.String)">
            <summary>
            Creates a new NAV Frequency from a string. NOTE The string must be in Invariant Culture. That is, the decimal place must be a . not a ,
            </summary>
            <param name="freqString">The NAV Frequency as a string</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyNAV.#ctor(System.Decimal)">
            <summary>
            Creates a new NAV Frequency from a decimal value
            </summary>
            <param name="freqDecimal">The NAV Frequency as a decimal</param>
        </member>
        <member name="T:FSUIPC.FsTransponderCode">
            <summary>
            A struct representing a Transponder Code used in FlightSim. This can convert between strings, integers and FSUIPC's BCD format for offsets.
            </summary>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.ToBCD">
            <summary>
            Gets the Transponder Code as a Binary-Coded Decimal (BCD). Used by FSUIPC in some offsets.
            </summary>
            <returns>A ushort in BCD format that can written to FSUIPC offsets</returns>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.ToInteger">
            <summary>
            Gets the Transponder Code as an integer type
            </summary>
            <returns>The transponder code as an intger</returns>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.ToString">
            <summary>
            Gets the Transponder Code as a string. 
            </summary>
            <returns>A string representing the Transponder Code</returns>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.#ctor(System.UInt16)">
            <summary>
            Creates a new Transponder Code from the Binary-Coded Decimal (BCD) format used by FSUIPC.
            </summary>
            <param name="codeBCD">The transponder code in BCD format</param>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.#ctor(System.String)">
            <summary>
            Creates a new Transponder Code from a string. 
            </summary>
            <param name="codeString">The Transponder Code as a string</param>
        </member>
        <member name="M:FSUIPC.FsTransponderCode.#ctor(System.Int32)">
            <summary>
            Creates a new Transponder Code from an integer value
            </summary>
            <param name="codeInteger">The Transponder Code as an integer</param>
        </member>
        <member name="T:FSUIPC.FsFrequencyADF">
            <summary>
            A struct representing a ADF frequency used in FlightSim. This can convert between strings, decimal and FSUIPC's BCD format for offsets.
            </summary>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.ToBCDMain">
            <summary>
            Gets the Main part of the ADF Frequency as a Binary-Coded Decimal (BCD). Used by FSUIPC in the MAIN ADF offsets.
            </summary>
            <returns>A ushort in BCD format that can written to FSUIPC offsets</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.ToBCDExtended">
            <summary>
            Gets the Extended part of the ADF Frequency as a Binary-Coded Decimal (BCD). Used by FSUIPC in the EXTENDED ADF offsets.
            </summary>
            <returns>A ushort in BCD format that can written to FSUIPC offsets</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.ToDecimal">
            <summary>
            Gets the ADF Frequency as a decimal type
            </summary>
            <returns>The ADF Frequency as a decimal</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.ToString">
            <summary>
            Gets the ADF Frequncy as a string. NOTE this is not take into account the user's culture settings. It always formats with a . for the decimal point.
            </summary>
            <returns>A string representing the ADF Frequency.</returns>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Creates a new ADF Frequency from the Binary-Coded Decimal (BCD) format used by FSUIPC.
            </summary>
            <param name="freqBCDMain">The Main part of the ADF Frequency value in BCD format</param>
            <param name="freqBCDExtended">The Extended part of the ADF Frequency value in BCD format</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.#ctor(System.String)">
            <summary>
            Creates a new ADF Frequency from a string. NOTE The string must be in Invariant Culture. That is, the decimal place must be a . not a ,
            </summary>
            <param name="freqString">The ADF Frequency as a string</param>
        </member>
        <member name="M:FSUIPC.FsFrequencyADF.#ctor(System.Decimal)">
            <summary>
            Creates a new ADF Frequency from a decimal value
            </summary>
            <param name="freqDecimal">The ADF Frequency as a decimal</param>
        </member>
        <member name="T:FSUIPC.FSUIPCVersion">
            <summary>
            Represents the version number of FSUIPC
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCVersion.Major">
            <summary>
            The major part of the version number
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCVersion.Minor">
            <summary>
            The minor part of the version number
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCVersion.Build">
            <summary>
            The build number represented as a numeric value (0 to 26)
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCVersion.BuildLetter">
            <summary>
            The build number represented as a letter ("" or a-z)
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCVersion.Number">
            <summary>
            The major and minor part of the version as a double floating point number
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCVersion.ToString">
            <summary>
            A string representation of the version e.g. "4.939t"
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsControl">
            <summary>
            A set of controls for Flight sim
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AILERON_CENTER">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AILERON_LEFT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AILERON_RIGHT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AP_MASTER_ALT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AP_PANEL_AIRSPEED_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AXIS_DRAG_PAN_HEADING">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AXIS_DRAG_PAN_PITCH">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AXIS_PAN_VELOCITY_HEADING">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.AXIS_PAN_VELOCITY_PITCH">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_BACK">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_DOWN">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_FORWARD">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_LEFT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_RESET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_RIGHT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.CAMERA_RELATIVE_EYEPOINT_UP">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ELEVATOR_DOWN">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ELEVATOR_UP">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ENGINE_FUELFLOW_BUG_POSITION1">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ENGINE_FUELFLOW_BUG_POSITION2">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ENGINE_FUELFLOW_BUG_POSITION3">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.ENGINE_FUELFLOW_BUG_POSITION4">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.EYEPOINT_SET_LATERAL">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.EYEPOINT_SET_LONGITUDINAL">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.EYEPOINT_SET_VERTICAL">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.LOW_HEIGHT_WARNING_GAUGE_WILL_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.LOW_HEIGHT_WARNING_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.LOW_HIGHT_WARNING_GAUGE_WILL_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.LOW_HIGHT_WARNING_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MAGNETO_SET_ACTUAL">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MAP_ZOOM_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MOUSE_CAMERA_TRANSLATE_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MOUSE_DELTA_PAN_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MOUSE_DRAG_PAN_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.MOUSE_EDGE_PAN_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_BACK">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_DOWN">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_FORWARD">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_LEFT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_RIGHT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_MOVE_UP">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_PITCH_DOWN">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_PITCH_UP">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_RESET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_ROLL_LEFT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_ROLL_RIGHT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_ROTATION_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_YAW_LEFT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_YAW_RIGHT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_ZOOM_IN">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.OBSERVER_ZOOM_OUT">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.PANEL_TOGGLE">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.TOGGLE_TIME_PREVIEW_WINDOW">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.VIEW1_MODE_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.VIEW2_DIRECTION_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.VIEW2_MODE_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="F:FSUIPC.FsControl.VIEW2_ZOOM_SET">
            <summary>
            P3D Only
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCControl">
            <summary>
            A set of extra controls provided by FSUIPC.<para>For details see the "FSUIPC For Advanced Users" document.</para>
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Autobrake_Set">
            <summary>
            Param=0=RTO, 1=off, 2=1, 3=2, 4=3, 5=Max
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.PVT_voice_transmit_on">
            <summary>
            for_Squawkbox_3.0.4_or_later
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.PVT_voice_transmit_off">
            <summary>
            for_Squawkbox_3.0.4_or_later
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Key_Press_and_Release">
            <summary>
            param_is_Keycode_+_256*Shift_code,_or_JsBk
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Key_Press_and_Hold">
            <summary>
            param_is_Keycode_+_256*Shift_code,_or_JsBk
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Key_Release">
            <summary>
            (param_is_Keycode_+_256*Shift_code,_or_JsBk)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.FollowMe_please">
            <summary>
            i.e. request (needs FollowMe V2) 
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.FollowMe_cancel">
            <summary>
            needs FollowMe V2 
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.FollowMe_continue">
            <summary>
            needs FollowMe V2 
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.ReSimConnect">
            <summary>
            (re-initialises_SimConnect_interface)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_NDscale_set">
            <summary>
            (parameter: 0–7 for 738, 0–5 for A321) (default B738 and A321)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_ND_mode_set">
            <summary>
            (parameter 0–2 for 738, 0–3 for A321) (default B738 and A321) 
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_ND_mapitem_set">
            <summary>
            (parameter 0–3) (default B738 and A321)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_VORADF1_set">
            <summary>
            (parameter 0–2) (default B738 and A321)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_VORADF2_set">
            <summary>
            (parameter 0–2) (default B738 and A321)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Efis_A321_InHg_hPA">
            <summary>
            (parameter 0–1) (default A321)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.List_local_panel_variables">
            <summary>
            List local panel variables (L:vars) in the FSUIPC log when changing aircraft 
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCControl.Log_test_options">
            <summary>
            parameter gives test instructions, for use only under Support direction
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCAutoPilotControl">
            <summary>
            A set of extra controls provided to control the AutoPilot.<para>For details see the "FSUIPC For Advanced Users" document.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCAxisControl">
            <summary>
            A set of controls to allow input into the 'Direct to FSUIPC Calibration' axes.
            </summary>
        </member>
        <member name="T:FSUIPC.PMControl">
            <summary>
            A set of control for Project Magenta software.<para>Please refer to the 'FSUIPC For Advanced Users' document.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FlightSim">
            <summary>
            Flight Simulator Version
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.Any">
            <summary>
            Any version of Flight Sim
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FS98">
            <summary>
            Microsoft Flight Simulator 98
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FS2K">
            <summary>
            Microsoft Flight Simulator 2000
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.CFS2">
            <summary>
            Microsoft Combat Flight Simulator 2
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.CFS1">
            <summary>
            Microsoft Combat Flight Simulator 1
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FLY">
            <summary>
            Fly! by Terminal Velocity.  (I don't think this works).
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FS2K2">
            <summary>
            Microsoft Flight Simulator 2002
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FS2K4">
            <summary>
            Microsoft Flight Simulator 2004 (A Century of Flight)
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FSX">
            <summary>
            Microsoft Flight Simulator X
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.ESP">
            <summary>
            Microsoft ESP
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.Prepar3d">
            <summary>
            Lockheed Martin - Prepar3D
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.FSW">
            <summary>
            Flight Sim World (Reserved)
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.Prepar3dx64">
            <summary>
            Prepar3d Version 4 and above (64 bit)
            </summary>
        </member>
        <member name="F:FSUIPC.FlightSim.MSFS">
            <summary>
            Microsoft Flight Simulator (2020)
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCError">
            <summary>
            The 'traditional' error codes returned by the C version of the FSUIPC Client SDK.  These error codes usually get returned in a variable called 'dwResult'.
            In this library, these error codes are returned in a .NET exception called FSUIPCClientException.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_OK">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_OPEN">
            <summary>
            Attempt to Open() when connection is already open.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_NOFS">
            <summary>
            Cannot link to FSUIPC or WideClient
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_REGMSG">
            <summary>
            Failed to Register common message with Windows
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_ATOM">
            <summary>
            Failed to create Atom for mapping filename
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_MAP">
            <summary>
            Failed to create a file mapping object
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_VIEW">
            <summary>
            Failed to open a view to the file map
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_VERSION">
            <summary>
            Incorrect version of FSUIPC, or not FSUIPC.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_WRONGFS">
            <summary>
            Flight Sim is not version requested by this application.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_NOTOPEN">
            <summary>
            Attempted to call Process() but the FSUIPC link has not been opened.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_NODATA">
            <summary>
            Call cannot execute: no requests accumulated
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_TIMEOUT">
            <summary>
            IPC SendMessage timed out (all retries)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_SENDMSG">
            <summary>
            IPC SendMessage failed (all retries)
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_DATA">
            <summary>
            IPC request contains bad data
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_RUNNING">
            <summary>
            Wrong version of FSUIPC.  Can also occur if running on WideClient but FSUIPC is not running on server.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_SIZE">
            <summary>
            Read or Write request cannot be added to the shared memory file as the file is full.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_ERR_WRITE_OVERFLOW">
            <summary>
            Tried to write a string or byte array that was longer than the declared length of this Offset.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_KEY_SLOTS_FULL">
            <summary>
            All user input key slots were full.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_BUTTON_SLOTS_FULL">
            <summary>
            All user input joystick button slots were full.
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_PARENT_MENU_NOT_FOUND">
            <summary>
            The Parent menu specified cannot be found
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_TYPE_NOT_SUPPORTED">
            <summary>
            The data type cannot be used for offset values
            </summary>
        </member>
        <member name="F:FSUIPC.FSUIPCError.FSUIPC_WRITE_OFFSET_NEVER_READ">
            <summary>
            An attempt was made to write a value to an offset that has never been read. Offsets must be read at least once so thier values are in sync with the Flight Sim.<para>If this offset is only for writing to, mark it as WriteOnly when declaring it.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.AITrafficStatus">
            <summary>
            The state of an AI Traffic object
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.StatusNotAvilable">
            <summary>
            State not avilable.  State of AI aircraft is only avilable in FS2004 and above.
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.Initialising">
            <summary>
            Iniialising
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.Sleeping">
            <summary>
            Sleeping
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.FilingFlightPlan">
            <summary>
            Filing flight plan
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.ObtainingClearance">
            <summary>
            Obtaining clearance
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.PushingBack">
            <summary>
            Pushing back 
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.PushingBackTurn">
            <summary>
            Turning while pushing back
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.StartingUp">
            <summary>
            Starting engines
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.ReadyForTaxi">
            <summary>
            Ready for taxi
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.TaxiingOut">
            <summary>
            Taxing to runway for takeoff
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.ReadyForTakeOff">
            <summary>
            Ready for takeoff
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.TakingOff">
            <summary>
            Taking off
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.Departing">
            <summary>
            Airborne, departing airport
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.Enroute">
            <summary>
            Enroute
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.InThePattern">
            <summary>
            In the pattern for landing
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.Landing">
            <summary>
            Landing (cleared to land)
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.RollingOut">
            <summary>
            Landed, rolling out on runway
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.GoingAround">
            <summary>
            Going around
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.TaxiingIn">
            <summary>
            Taxiing in from runway to stand
            </summary>
        </member>
        <member name="F:FSUIPC.AITrafficStatus.ShuttingDown">
            <summary>
            Shutting down engines
            </summary>
        </member>
        <member name="T:FSUIPC.FSFuelTanks">
            <summary>
            One of the known possible fuel tanks in Flight Sim
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Centre_Main">
            <summary>
            The Centre Main tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Left_Main">
            <summary>
            The Left Main tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Right_Main">
            <summary>
            The Right Main tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Left_Aux">
            <summary>
            The Left Auxiliary tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Right_Aux">
            <summary>
            The Right Auxiliary tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Left_Tip">
            <summary>
            The Left Wingtip tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Right_Tip">
            <summary>
            The Right Wingtip tank
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Centre_2">
            <summary>
            The Second Centre tank  (FS2000 and later only)
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.Centre_3">
            <summary>
            The Third Centre tank (FS2000 and later only)
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.External_1">
            <summary>
            The First External tank (FS2000 and later only)
            </summary>
        </member>
        <member name="F:FSUIPC.FSFuelTanks.External_2">
            <summary>
            The Second External tank (FS2000 and later only)
            </summary>
        </member>
        <member name="T:FSUIPC.FsAltitude">
            <summary>
            A structure representing an altitude value in MS Flight Simulator
            </summary>
        </member>
        <member name="M:FSUIPC.FsAltitude.#ctor(System.Int64)">
            <summary>
            Create a new altitude value from the 8-Byte MS Flight Simulator units supplied by FSUIPC
            </summary>
            <param name="FSUnits">An 8-Byte integer representing the altitude in FS Units.  e.g. from FSUIPC offset 0x0570</param>
        </member>
        <member name="M:FSUIPC.FsAltitude.ToFSUnits">
            <summary>
            Converts this altitude to 8-Byte MS Flight Simulator units.  Can be used to write to FSUIPC, e.g. offset 0x0570
            </summary>
            <returns>The altitude represented in 8-Byte MS Flight Simulator units.</returns>
        </member>
        <member name="P:FSUIPC.FsAltitude.Metres">
            <summary>
            The altitude in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsAltitude.Feet">
            <summary>
            The altitude in Feet
            </summary>
        </member>
        <member name="M:FSUIPC.FsAltitude.FromMetres(System.Double)">
            <summary>
            Creates a new FsAltitiude from metres
            </summary>
            <param name="Metres">The alitiude in metres</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsAltitude.FromFeet(System.Double)">
            <summary>
            Creates a new FsAltitiude from feet
            </summary>
            <param name="Feet">The alitiude in feet</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsBitArray">
            <summary>
             Manages an array of bit values, which are represented as Booleans, where
             true indicates that the bit is on (1) and false indicates the bit is off (0).
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.BitArray">
            <summary>
            Returns the underlying native, .NET System.Collections.BitArray associated with this FsBitArray
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.Changed">
            <summary>
            Returns an array of booleans indicating if the corresponding bit was changed during the last FSUIPCConnection.Process() call
            </summary>
        </member>
        <member name="M:FSUIPC.FsBitArray.HasChanged(System.Int32)">
            <summary>
            Returns a boolean indicating if the specified bit was changed during or since the last FSUIPCConnection.Process() call
            </summary>
            <param name="Index">Ths index of the bit to test</param>
            <returns>True if the bit has changed during or since the last FSUIPCConnection.Process() call</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the FsBitArray class that can
            hold the specified number of bit values, which are initially set to false.
            </summary>
            <param name="length">The number of bit values in the new FsBitArray.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Byte[])">
            <summary>
             Initializes a new instance of the FsBitArray class that contains
                bit values copied from the specified array of bytes.
            </summary>
            <param name="bytes"> An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Boolean[])">
            <summary>
             Initializes a new instance of the FsBitArray class that contains
            bit values copied from the specified array of Booleans.
            </summary>
            <param name="values"> An array of Booleans to copy.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the FsBitArray class that contains
                bit values copied from the specified array of 32-bit integers.
            </summary>
            <param name="values">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Collections.BitArray)">
            <summary>
            Initializes a new instance of the FsBitArray class that contains
            bit values copied from the specified System.Collections.BitArray.
            </summary>
            <param name="bits">The System.Collections.BitArray to copy.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(FSUIPC.FsBitArray)">
            <summary>
             Initializes a new instance of the FsBitArray class that contains
               bit values copied from the specified FsBitArray.
            </summary>
            <param name="bits">The FsBitArray to copy.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.#ctor(System.Int32,System.Boolean)">
            <summary>
             Initializes a new instance of the FsBitArray class that can
              hold the specified number of bit values, which are initially set to the specified value.
            </summary>
            <param name="length">The number of bit values in the new FsBitArray.</param>
            <param name="defaultValue">The Boolean value to assign to each bit.</param>
        </member>
        <member name="P:FSUIPC.FsBitArray.Item(System.Int32)">
            <summary>
            Gets or sets the value of the bit at a specific position in the FsBitArray.
            </summary>
            <param name="index">The zero-based index of the value to get or set.</param>
            <returns> The value of the bit at position index.</returns>
        </member>
        <member name="P:FSUIPC.FsBitArray.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the FsBitArray.
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.Count">
            <summary>
            Gets the number of elements contained in the FsBitArray.
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.Length">
            <summary>
            Gets or sets the number of elements in the FsBitArray.
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the FsBitArray is
            synchronized (thread safe).
            </summary>
        </member>
        <member name="P:FSUIPC.FsBitArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the FsBitArray is read-only.
            </summary>
        </member>
        <member name="M:FSUIPC.FsBitArray.And(FSUIPC.FsBitArray)">
            <summary>
             Performs the bitwise AND operation on the elements in the current FsBitArray
             against the corresponding elements in the specified FsBitArray.
            </summary>
            <param name="value"> The FsBitArray with which to perform the bitwise AND operation.</param>
            <returns>The current instance after the bitwise AND operation
            on the elements in the current FsBitArray against the corresponding
            elements in the specified FsBitArray.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.Clone">
            <summary>
            Creates a shallow copy of the FsBitArray.
            </summary>
            <returns> A shallow copy of the FsBitArray.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire FsBitArray to a compatible one-dimensional
            System.Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from FsBitArray. The System.Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.Get(System.Int32)">
            <summary>
            Gets the value of the bit at a specific position in the FsBitArray.
            </summary>
            <param name="index"> The zero-based index of the value to get.</param>
            <returns> The value of the bit at position index.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the FsBitArray.
            </summary>
            <returns> An System.Collections.IEnumerator for the entire FsBitArray.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.Not">
            <summary>
            Inverts all the bit values in the current FsBitArray, so that
            elements set to true are changed to false, and elements set to false are changed
            to true.
            </summary>
            <returns>The current instance with inverted bit values.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.Or(FSUIPC.FsBitArray)">
            <summary>
             Performs the bitwise OR operation on the elements in the current FsBitArray
             against the corresponding elements in the specified FsBitArray.
            </summary>
            <param name="value">The FsBitArray with which to perform the bitwise OR operation.</param>
            <returns> The current instance after the bitwise OR operation
                on the elements in the current FsBitArray against the corresponding
                elements in the specified FsBitArray.</returns>
        </member>
        <member name="M:FSUIPC.FsBitArray.Set(System.Int32,System.Boolean)">
            <summary>
            Sets the bit at a specific position in the FsBitArray to the specified value.
            </summary>
            <param name="index">The zero-based index of the bit to set.</param>
            <param name="value">The Boolean value to assign to the bit.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.SetAll(System.Boolean)">
            <summary>
            Sets all bits in the FsBitArray to the specified value.
            </summary>
            <param name="value">The Boolean value to assign to all bits.</param>
        </member>
        <member name="M:FSUIPC.FsBitArray.Xor(FSUIPC.FsBitArray)">
            <summary>
            Performs the bitwise exclusive OR operation on the elements in the current FsBitArray
                against the corresponding elements in the specified FsBitArray.
            </summary>
            <param name="value"> The FsBitArray with which to perform the bitwise exclusive OR operation.</param>
            <returns>The current instance after the bitwise exclusive
                OR operation on the elements in the current FsBitArray against
                the corresponding elements in the specified FsBitArray.</returns>
        </member>
        <member name="T:FSUIPC.FsHVar">
            <summary>
            Represents an HVar in MSFS
            </summary>
        </member>
        <member name="P:FSUIPC.FsHVar.ID">
            <summary>
            The ID of the HVar
            </summary>
        </member>
        <member name="P:FSUIPC.FsHVar.Name">
            <summary>
            The Name of the HVar
            </summary>
        </member>
        <member name="M:FSUIPC.FsHVar.Set">
            <summary>
            Immediatley sets the HVar in the Flight Sim
            </summary>
        </member>
        <member name="T:FSUIPC.HVarCollection">
            <summary>
            A collection of HVars
            </summary>
        </member>
        <member name="M:FSUIPC.HVarCollection.GetEnumerator">
            <summary>
            Returns the enumerator that iterates through all the HVars
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSUIPC.HVarCollection.Names">
            <summary>
            Gets a list of all HVar names
            </summary>
        </member>
        <member name="P:FSUIPC.HVarCollection.Count">
            <summary>
            The number of HVars in this collection
            </summary>
        </member>
        <member name="P:FSUIPC.HVarCollection.Item(System.Int32)">
            <summary>
            Gets the HVar using its ID
            </summary>
            <param name="ID">The ID of the HVar to get</param>
            <returns>The FsHVar object for the HVar with the specified ID</returns>
        </member>
        <member name="P:FSUIPC.HVarCollection.Item(System.String)">
            <summary>
            Gets the HVar using its Name
            </summary>
            <param name="Name">The name of the HVar to get</param>
            <returns>The FsHVar object for the HVar with the specified Name</returns>
        </member>
        <member name="M:FSUIPC.HVarCollection.Exists(System.String)">
            <summary>
            Checks if an HVar with the specified name exists
            </summary>
            <param name="Name">The name of the HVar to check</param>
            <returns>Returns true if an HVar with the specified name exists</returns>
        </member>
        <member name="M:FSUIPC.HVarCollection.Exists(System.Int32)">
            <summary>
            Checks if an HVar with the specified ID exists
            </summary>
            <param name="ID">The ID of the HVar to check</param>
            <returns>Returns true if an HVar with the specified ID exists</returns>
        </member>
        <member name="T:FSUIPC.FsLatitude">
            <summary>
            A structure representing a latitude value in MS Flight Simulator
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int64)">
            <summary>
            Create a new latitude value from the 8-Byte MS Flight Simulator units supplied by FSUIPC
            </summary>
            <param name="FSUnits">An 8-Byte integer representing the latitude in FS Units.  e.g. from FSUIPC offset 0x0560</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int32)">
            <summary>
            Create a new latitude value from the 4-Byte MS Flight Simulator units supplied by FSUIPC
            </summary>
            <param name="FSUnits">A 4-Byte integer representing the latitude in FS Units.  e.g. from FSUIPC offset 0x085C</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Double)">
            <summary>
            Create a new latitude value in degrees - Uses the 8 byte FS Units
            </summary>
            <param name="DecimalDegrees">The latitude in degrees</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Double,System.Boolean)">
            <summary>
            Create a new latitude value in degrees using either the 8 or 4 byte FS Units
            </summary>
            <param name="DecimalDegrees">The latitude in degrees</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int32,System.Double)">
            <summary>
            Create a new latitude value in degrees and minutes - Uses the 8 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new latitude</param>
            <param name="DecimalMinutes">The number of minutes for the new latitude</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int32,System.Double,System.Boolean)">
            <summary>
            Create a new latitude value in degrees and minutes  using either the 8 or 4 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new latitude</param>
            <param name="DecimalMinutes">The number of minutes for the new latitude</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Create a new latitude value in degrees, minutes and seconds  - Uses the 8 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new latitude</param>
            <param name="Minutes">The number of minutes for the new latitude</param>
            <param name="DecimalSeconds">The number of seconds for the new latitude</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.#ctor(System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Create a new latitude value in degrees, minutes and seconds using either the 8 or 4 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new latitude</param>
            <param name="Minutes">The number of minutes for the new latitude</param>
            <param name="DecimalSeconds">The number of seconds for the new latitude</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLatitude.ToFSUnits8">
            <summary>
            Converts this latitude to 8-Byte MS Flight Simulator units.  Can be used to write to FSUIPC, e.g. offset 0x0560
            </summary>
            <returns>The latitude represented in 8-Byte MS Flight Simulator units.</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.ToFSUnits4">
            <summary>
            Converts this latitude to 4-Byte MS Flight Simulator units.  Can be used to write to FSUIPC, e.g. offset 0x085C
            </summary>
            <returns>The latitude represented in 4-Byte MS Flight Simulator units.</returns>
        </member>
        <member name="P:FSUIPC.FsLatitude.Degree">
            <summary>
            The whole degree part of the latitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitude.Minute">
            <summary>
            The whole minute part of the latitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitude.Second">
            <summary>
            The whole second part of latitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitude.DecimalDegrees">
            <summary>
            The latitiude expressed in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitude.DecimalMinutes">
            <summary>
            The minutes part of the latitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitude.DecimalSeconds">
            <summary>
            The seconds part of the latitude
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitude.ToString">
            <summary>
            The latitude represented as a string in the default format of N|S dd* mm.mm'
            </summary>
            <returns>A string representing the latitude in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.ToString(System.Boolean,System.String,System.Int16)">
            <summary>
            The lattitude represented as a string in the specified format
            </summary>
            <param name="HemisphereAsText">Denote hemisphere using N or S.  If false, south is marked as -</param>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representing the latitude in the specified format</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.Add(FSUIPC.FsLatitudeSpan)">
            <summary>
            Create a new latitude by adding a latitude span to the current lattitude
            </summary>
            <param name="Distance">The latitude span to add</param>
            <returns>The resulting latitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.Subtract(FSUIPC.FsLatitudeSpan)">
            <summary>
            Create a new latitude by subtracting a latitude span from the current lattitude
            </summary>
            <param name="Distance">The latitude span to subtract</param>
            <returns>The resulting latitude after the subtraction</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.AddDegrees(System.Double)">
            <summary>
            Create a new latitude by adding a number of degrees to the current latitude
            </summary>
            <param name="Degrees">The number of degrees to add</param>
            <returns>The resulting latitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.AddMinutes(System.Double)">
            <summary>
            Create a new latitude by adding a number of minutes to the current latitude
            </summary>
            <param name="Minutes">The number of minutes to add</param>
            <returns>The resulting latitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLatitude.AddSeconds(System.Double)">
            <summary>
            Create a new latitude by adding a number of seconds to the current latitude
            </summary>
            <param name="Seconds">The number of seconds to add</param>
            <returns>The resulting latitude after the addition</returns>
        </member>
        <member name="T:FSUIPC.FsLatitudeSpan">
            <summary>
            Represents a span of latitude in MS Flight Simulator
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.#ctor(System.Double)">
            <summary>
            Create a new latitude span represented by a number of degrees
            </summary>
            <param name="DecimalDegrees">The number of degrees for the span</param>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.#ctor(System.Int32,System.Double)">
            <summary>
            Create a new latitude span represented by a number of degrees and minutes
            </summary>
            <param name="Degrees">The number of degrees for the span</param>
            <param name="DecimalMinutes">The number of minutes for the span</param>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Create a new latitude span represented by a number of degrees, minutes and seconds
            </summary>
            <param name="Degrees">The number of degrees for the span</param>
            <param name="Minutes">The number of minutes for the span</param>
            <param name="DecimalSeconds">The number of seconds for the span</param>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.FromFeet(System.Double)">
            <summary>
            Create a new latitude span that represents a given distance in Feet
            </summary>
            <param name="Feet">The number of Feet to convert to a latitude span</param>
            <returns>An FsLatitudeSpan representing the number of feet in degrees latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.FromNauticalMiles(System.Double)">
            <summary>
            Create a new latitude span that represents a given distance in Nautical Miles
            </summary>
            <param name="NauticalMiles">The number of Nautical Miles to convert to a latitude span</param>
            <returns>An FsLatitudeSpan representing the number of Nautical Miles in degrees latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.FromMetres(System.Double)">
            <summary>
            Create a new latitude span that represents a given distance in Metres
            </summary>
            <param name="Metres">The number of Metres to convert to a latitude span</param>
            <returns>An FsLatitudeSpan representing the number of metres in degrees latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.BetweenTwoLatitides(FSUIPC.FsLatitude,FSUIPC.FsLatitude)">
            <summary>
            Create a new latitude span from two latitudes.  The span will be the shortest absolute distance between them.
            </summary>
            <param name="Lat1">The Latitude at one end of the span</param>
            <param name="Lat2">The Latitude at the other end of the span</param>
            <returns>An FsLatitudeSpan representing the distance between the two latitudes in degrees</returns>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.Degrees">
            <summary>
            The number of whole degrees represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.Minutes">
            <summary>
            The number of whole minutes represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.Seconds">
            <summary>
            The number of whole seconds represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.DecimalDegrees">
            <summary>
            The total number of degrees represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.DecimalMinutes">
            <summary>
            The number of minutes represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.DecimalSeconds">
            <summary>
            The number of seconds represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.TotalMinutes">
            <summary>
            The value of the entire span represented in minutes
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatitudeSpan.TotalSeconds">
            <summary>
            The value of the entire span represented in seconds
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.ToFeet">
            <summary>
            Gets the distance represented by the span in Feet
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.ToNauticalMiles">
            <summary>
            Gets the distance represented by the span in Nautical Miles
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.ToMetres">
            <summary>
            Gets the distance represented by the span in Metres
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.ToString">
            <summary>
            The span represented as a string in the default format of dd* mm.mmmm'
            </summary>
            <returns>A string representing the latitude span in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLatitudeSpan.ToString(System.String,System.Int32)">
            <summary>
            The span represented as a string in the specified format
            </summary>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representing the latitude span in the specified format</returns>
        </member>
        <member name="T:FSUIPC.FsLatLonCircle">
            <summary>
            Represents an circular area in FS defined with a centre Lat, Lon point and a radius
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonCircle.Centre">
            <summary>
            A FsLatLonPoint representing the centre of the circle.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonCircle.RadiusMetres">
            <summary>
            The Radius of the circle in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonCircle.RadiusFeet">
            <summary>
            The Radius of the circle in Feet
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonCircle.RadiusNauticalMiles">
            <summary>
            The Radius of the circle in Nautical Miles
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonCircle.FromFeet(FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new circular area from a central FsLatLonPoint and a Radius in Feet
            </summary>
            <param name="Centre">An FsLatLonPoint representing the centre of the circular area</param>
            <param name="RadiusInFeet">The Radius of the circle in Feet</param>
            <returns>The FsLatLonCircle at the specified location with the specified radius</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonCircle.FromMetres(FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new circular area from a central FsLatLonPoint and a Radius in Metres
            </summary>
            <param name="Centre">An FsLatLonPoint representing the centre of the circular area</param>
            <param name="RadiusInMetres">The Radius of the circle in Metres</param>
            <returns>The FsLatLonCircle at the specified location with the specified radius</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonCircle.FromNauticalMiles(FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new circular area from a central FsLatLonPoint and a Radius in Nautical Miles
            </summary>
            <param name="Centre">An FsLatLonPoint representing the centre of the circular area</param>
            <param name="RadiusInNauticalMiles">The Radius of the circle in Nautical Miles</param>
            <returns>The FsLatLonCircle at the specified location with the specified radius</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonCircle.#ctor(FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Constructs a new FsLatLonCircle from a central FSLatLonPoint and a Radius in Nautical Miles.  To specify the radius in Feet or Metres use one of the static factory methods (FsLatLonCircle.FromFeet or FsLatLonCircle.FromMetres). 
            </summary>
            <param name="Centre">An FsLatLonPoint representing the centre of the circular area</param>
            <param name="RadiusInNauticalMiles">The Radius of the circle in nautical miles</param>
        </member>
        <member name="M:FSUIPC.FsLatLonCircle.ContainsPoint(FSUIPC.FsLatLonPoint)">
            <summary>
            Calculates whether or not the given point in contained in this circle.
            </summary>
            <param name="Point">The point to test</param>
            <returns>True if the given point is contained within this circle.</returns>
        </member>
        <member name="T:FSUIPC.FsLatLonLineSegment">
            <summary>
            Represents a line segment on the Earth that runs between 
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonLineSegment.P1">
            <summary>
            A point that represents one of the ends of the line segment
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonLineSegment.P2">
            <summary>
            A point that represents one of the ends of the line segment
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonLineSegment.#ctor(FSUIPC.FsLatLonPoint,FSUIPC.FsLatLonPoint)">
            <summary>
            Creates a FsLatLonLineSegment from 2 FsLatLonPoints
            </summary>
            <param name="Point1">A FsLatLonPoint representing the start of the line segment</param>
            <param name="Point2">A FsLatLonPoint representing the end of the line segment</param>
        </member>
        <member name="M:FSUIPC.FsLatLonLineSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a FsLatLonLineSegment from decimal degree values
            </summary>
            <param name="Point1Lat">The Latitude of the point representing the start of the line segment (in Decimal Degrees)</param>
            <param name="Point1Lon">The Longitude of the point representing the start of the line segment (in Decimal Degrees)</param>
            <param name="Point2Lat">The Latitude of the point representing the ebd of the line segment (in Decimal Degrees)</param>
            <param name="Point2Lon">The Longitude of the point representing the end of the line segment (in Decimal Degrees)</param>
        </member>
        <member name="M:FSUIPC.FsLatLonLineSegment.ContainsPoint(FSUIPC.FsLatLonPoint)">
            <summary>
            Tests if a point is on the line segment
            </summary>
            <param name="Point"></param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsLatLonLineSegment.GetIntersection(FSUIPC.FsLatLonLineSegment)">
            <summary>
            Checks if a given line segment intersects this line segment
            </summary>
            <param name="Line">The line segment to check for intersection</param>
            <returns>The FsLatLonPoint of the intersection of the two line segments. Returns no value if the lines do not intersect</returns>
        </member>
        <member name="T:FSUIPC.FsLatLonPoint">
            <summary>
            A point in the Flight Simulator world represented by a longitude and latitude.
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.#ctor(System.Double,System.Double)">
            <summary>
            Create a new point from the specified latitude and longitude in decimal degrees
            </summary>
            <param name="DecimalLatitude">The latitude of the point in decimal degrees</param>
            <param name="DecimalLongitude">The longitude of the point in decimal degrees</param>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.#ctor(FSUIPC.FsLatitude,FSUIPC.FsLongitude)">
            <summary>
            Create a new point from the specified latitude and longitude
            </summary>
            <param name="Latitude">The latitude of the point</param>
            <param name="Longitude">The longitude of the point</param>
        </member>
        <member name="P:FSUIPC.FsLatLonPoint.Longitude">
            <summary>
            The longitude of the point
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonPoint.Latitude">
            <summary>
            The latitude of the point
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.DistanceFromInFeet(FSUIPC.FsLatLonPoint)">
            <summary>
            Gets the distance between this point and another specified point in Feet
            </summary>
            <param name="Point">The other point from which to measure the distance</param>
            <returns>The distance between this point and the other specified point in Feet</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.DistanceFromInNauticalMiles(FSUIPC.FsLatLonPoint)">
            <summary>
            Gets the distance between this point and another specified point in Nautical Miles
            </summary>
            <param name="Point">The other point from which to measure the distance</param>
            <returns>The distance between this point and the other specified point in Nautical Miles</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.DistanceFromInMetres(FSUIPC.FsLatLonPoint)">
            <summary>
            Gets the distance between this point and another specified point in Metres
            </summary>
            <param name="Point">The other point from which to measure the distance</param>
            <returns>The distance between this point and the other specified point in Metres</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.BearingTo(FSUIPC.FsLatLonPoint)">
            <summary>
            Gets the bearing TO another point.  The bearing will be in degrees TRUE, not magnetic.
            </summary>
            <param name="Point">The other point to measure the bearing to</param>
            <returns>The bearing in degrees TRUE</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.BearingFrom(FSUIPC.FsLatLonPoint)">
            <summary>
            Gets the bearing FROM another point.  Bearing will be in degrees TRUE, not magnetic.
            </summary>
            <param name="Point">The other point to measure the bearing from</param>
            <returns>The bearing in degrees TRUE</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.OffsetByFeet(System.Double,System.Double)">
            <summary>
            Creates a new point by moving the specified distance along the specified bearing
            </summary>
            <param name="Bearing">The bearing from this point along which the new point is located in degrees TRUE</param>
            <param name="Distance">The distance from this point which the new point is located in Feet</param>
            <returns>A new FsLatLonPoint representing a new point that is the specified distance away from this point in the specified direction</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.OffsetByMetres(System.Double,System.Double)">
            <summary>
            Creates a new point by moving the specified distance along the specified bearing
            </summary>
            <param name="Bearing">The bearing from this point along which the new point is located in degrees TRUE</param>
            <param name="Distance">The distance from this point which the new point is located in Metres</param>
            <returns>A new FsLatLonPoint representing a new point that is the specified distance away from this point in the specified direction</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.OffsetByNauticalMiles(System.Double,System.Double)">
            <summary>
            Creates a new point by moving the specified distance along the specified bearing
            </summary>
            <param name="Bearing">The bearing from this point along which the new point is located in degrees TRUE</param>
            <param name="Distance">The distance from this point which the new point is located in Nautical Miles</param>
            <returns>A new FsLatLonPoint representing a new point that is the specified distance away from this point in the specified direction</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.IntersectDMEMetres(System.Double,FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new point by moving from the current point along a specified bearing to where the new point is a certain distance from a second point.<para>A typical use would be to identify the point along a given bearing where you would be a given distance from a DME/VOR marker specified as the second point.</para>
            </summary>
            <param name="Bearing">The bearing from this point on which the intersection must occur in degrees TRUE.</param>
            <param name="Point">The point from which the distance for the intersection is measured.</param>
            <param name="Distance">The distance required from the specified point in Metres.</param>
            <returns>An FsLatLonPoint representing the requested intersection. If the bearing never intersects, the resulting FsLatLonPoint will be null.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.IntersectDMENauticalMiles(System.Double,FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new point by moving from the current point along a specified bearing to where the new point is a certain distance from a second point.<para>A typical use would be to identify the point along a given bearing where you would be a given distance from a DME/VOR marker specified as the second point.</para>
            </summary>
            <param name="Bearing">The bearing from this point on which the intersection must occur in degrees TRUE.</param>
            <param name="Point">The point from which the distance for the intersection is measured.</param>
            <param name="Distance">The distance required from the specified point in Nautical Miles.</param>
            <returns>An FsLatLonPoint representing the requested intersection. If the bearing never intersects, the resulting FsLatLonPoint will be null.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.IntersectDMEFeet(System.Double,FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new point by moving from the current point along a specified bearing to where the new point is a certain distance from a second point.<para>A typical use would be to identify the point along a given bearing where you would be a given distance from a DME/VOR marker specified as the second point.</para>
            </summary>
            <param name="Bearing">The bearing from this point on which the intersection must occur in degrees TRUE.</param>
            <param name="Point">The point from which the distance for the intersection is measured.</param>
            <param name="Distance">The distance required from the specified point in Feet.</param>
            <returns>An FsLatLonPoint representing the requested intersection. If the bearing never intersects, the resulting FsLatLonPoint will be null.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.IntersectRadial(System.Double,FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Creates a new point by moving from the current point along a specified bearing to where the new point intersects a specfied raidal from a second specified point.<para>A typical use would be to identify the point along a given bearing where you would intercept a given radial from a VOR marker specified as the second point.</para>
            </summary>
            <param name="Bearing">The bearing from this point on which the intersection must occur in degrees TRUE.</param>
            <param name="Point">The point from which the radial for the intersection is measured.</param>
            <param name="Radial">The intersect radial required from the specified point in Degrees TRUE.</param>
            <returns>An FsLatLonPoint representing the requested intersection. If the bearing never intersects, OR the intersection is more than 200NM from the specified Point, the resulting FsLatLonPoint will be null.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.ToString">
            <summary>
            The latitude and longitude represented as a string in the default format of N|S|E|W dd* mm.mmmm'
            </summary>
            <returns>A string representation of the Longitude and Latitude of this point in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPoint.ToString(System.Boolean,System.String,System.Int16)">
            <summary>
            The latitude and longitude represented as a string in the specified format
            </summary>
            <param name="HemisphereAsText">Denote hemisphere using N,S,W or E.  If false, west/south is marked as -</param>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representation of the Longitude and Latitude of this point in the specified format</returns>
        </member>
        <member name="T:FSUIPC.FsLatLonPolygon">
            <summary>
            This defines a closed polygon defined by a series of Lat/Lon points (vertices). There can be any number of points. Unlike FsLatLonQuadrilateral this class supports concave shapes and complex shapes (having self-instersecting sides).
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonPolygon.Bounds">
            <summary>
            The rectangular bounding box for this polygon. All points of the polygon are contained within this rectangle.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonPolygon.Points">
            <summary>
            An array of Lat/Lon points that define this polygon
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonPolygon.LineSegments">
            <summary>
            An array of line segments that make up this polygon.
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.#ctor(FSUIPC.FsLatLonPoint[])">
            <summary>
            Creates a polygon from an array of lat/lon points (vertices). The points can start anywhere on the polygon but must be contiguous. They can specified either clockwise or counter-clockwise. The polygon will be closed so the last point will connect with the first.
            </summary>
            <param name="Points"></param>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.ContainsPoint(FSUIPC.FsLatLonPoint)">
            <summary>
            Calculates if the given point is inside this polygon
            </summary>
            <param name="Point">The point to test</param>
            <returns>True if the given point is inside this polygon. False if it's outside.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.GetIntersectionFromPointFeet(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Calculates an intersection point on the polygon given a starting point, a heading and a maximum search range 
            </summary>
            <param name="Point">The starting point</param>
            <param name="HeadingTrue">The heading in degrees TRUE along which to search for the intersection</param>
            <param name="RangeFeet">The maximum range infeet to search for the intersection</param>
            <returns>An FsPolygonIntersection object containing the details of the intersection test</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.GetIntersectionFromPointNauticalMiles(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Calculates an intersection point on the polygon given a starting point, a heading and a maximum search range 
            </summary>
            <param name="Point">The starting point</param>
            <param name="HeadingTrue">The heading in degrees TRUE along which to search for the intersection</param>
            <param name="RangeNauticalMiles">The maximum range in nautical miles to search for the intersection</param>
            <returns>An FsPolygonIntersection object containing the details of the intersection test</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.GetIntersectionFromPointMetres(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Calculates an intersection point on the polygon given a starting point, a heading and a maximum search range 
            </summary>
            <param name="Point">The starting point</param>
            <param name="HeadingTrue">The heading in degrees TRUE along which to search for the intersection</param>
            <param name="RangeMetres">The maximum range in metres to search for the intersection</param>
            <returns>An FsPolygonIntersection object containing the details of the intersection test</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonPolygon.GetInstersection(FSUIPC.FsLatLonLineSegment)">
            <summary>
            Finds the points where the given line segment intersects this polygon
            </summary>
            <param name="Line">The line segment to test for an intersection</param>
            <returns>An array of FsLineSegmentIntersection[] object. One for each intersection of the given line segment with the outline of the polygon. If there is no intersections an empty array (length = 0) is returned</returns>
        </member>
        <member name="T:FSUIPC.FsLineSegmentIntersection">
            <summary>
            Holds information about line segment intersections
            </summary>
        </member>
        <member name="P:FSUIPC.FsLineSegmentIntersection.LineSegment">
            <summary>
            The line segment on which the intersection occurs 
            </summary>
        </member>
        <member name="P:FSUIPC.FsLineSegmentIntersection.Point">
            <summary>
            The point of intersection
            </summary>
        </member>
        <member name="T:FSUIPC.FsPolygonIntersection">
            <summary>
            Holds information about the intersection point on the border of a FsLatLonPolygon
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.Found">
            <summary>
            True if an intersection was found. False if no intersection was found.
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.InsidePolygon">
            <summary>
            True if the test point was inside the polygon. False if it was outside.
            <para>If inside, any intersection found will be the point of leaving the polygon. If outside, any intersection found will be the point of entering the polygon.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.DistanceToMetres">
            <summary>
            The distance to the intersection from the test point in metres. Value will be Double.NaN if no intersection was found.
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.DistanceToFeet">
            <summary>
            The distance to the intersection from the test point in Feet. Value will be Double.NaN if no intersection was found.
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.DistanceToNauticalMiles">
            <summary>
            The distance to the intersection from the test point in Nautical Miles. Value will be Double.NaN if no intersection was found.
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.Point">
            <summary>
            The point on the polygon border where the intersection occurs
            </summary>
        </member>
        <member name="P:FSUIPC.FsPolygonIntersection.LineSegment">
            <summary>
            The line segment of the polygon border on which intersection occurs
            </summary>
        </member>
        <member name="T:FSUIPC.FsLatLonQuadrilateral">
            <summary>
            Represents an Quadrilateral area in FS bounded by four Latitude/Longitude coordinates.
            Note that only Convex Quadrilateral shapes will work properly.  Concave shapes will not. For concave shapes use FsLatLonPolygon instead.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.LineSegments">
            <summary>
            An array of 4 FsLineSegments representing each line of the Quadralateral. Starting at the line running NW to NE, going clockwise.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.NE">
            <summary>
            A FsLatLonPoint representing the North Eastern corner of this Quadrilateral.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.SE">
            <summary>
            A FsLatLonPoint representing the South Eastern corner of this Quadrilateral.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.SW">
            <summary>
            A FsLatLonPoint representing the South Western corner of this Quadrilateral.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.NW">
            <summary>
            A FsLatLonPoint representing the North Western corner of this Quadrilateral.
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.LatitudeMaximum">
            <summary>
            The maximum latitude covered by this Quad (most northernly)
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.LatitudeMinimum">
            <summary>
            The minimum latitude covered by this Quad (most southernly)
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.LongitudeMaximum">
            <summary>
            the maximum longitude covered by this Quad (most easternly)
            </summary>
        </member>
        <member name="P:FSUIPC.FsLatLonQuadrilateral.LongitudeMinimum">
            <summary>
            The minimum longitude covered by this Quad (most westernly)
            </summary>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.FromCenterMetres(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Creates a new FsLatLonQuadrilateral of a given height and width, around a given centre point
            </summary>
            <param name="CenterPoint">The centre point of the new Quad</param>
            <param name="HeightMetres">The height of the new Quad in Metres (fron North to South)</param>
            <param name="WidthMetres">The Width of the new Quad in Metres (from East to West)</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.FromCenterFeet(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Creates a new FsLatLonQuadrilateral of a given height and width, around a given centre point
            </summary>
            <param name="CenterPoint">The centre point of the new Quad</param>
            <param name="HeightFeet">The height of the new Quad in Feet (fron North to South)</param>
            <param name="WidthFeet">The Width of the new Quad in Feet (from East to West)</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.FromCenterNauticalMiles(FSUIPC.FsLatLonPoint,System.Double,System.Double)">
            <summary>
            Creates a new FsLatLonQuadrilateral of a given height and width, around a given centre point
            </summary>
            <param name="CenterPoint">The centre point of the new Quad</param>
            <param name="HeightNauticalMiles">The height of the new Quad in Nautical Miles (fron North to South)</param>
            <param name="WidthNauticalMiles">The Width of the new Quad in Nautical Miles (from East to West)</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.ForTaxiway(FSUIPC.FsLatLonPoint,System.Double,FSUIPC.FsLatLonPoint,System.Double)">
            <summary>
            Create a new FsLatLonQuadrilateral from one point to another. The widths at each end can be specified.
            </summary>
            <param name="StartPoint">The centre point of one edge of the new Quad</param>
            <param name="StartWidth">The width of the edge located at the first point</param>
            <param name="EndPoint">The centre point of the second edge of the new Quad</param>
            <param name="EndWidth">The width of the edge located at the second point</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.ForRunway(FSUIPC.FsLatLonPoint,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new bounding rectangle for a runway given the common information provided in MakeRunways.exe by Pete Dowson.
            </summary>
            <param name="HeadingTrue">The TRUE heading of the runway in Degrees</param>
            <param name="ThresholdCentre">The Lon/Lat point of the centre of the runway threshold</param>
            <param name="WidthInFeet">The width of the runway in Feet</param>
            <param name="LengthInFeet">The length of the runway in Feet</param>
            <returns>An FsLatLonQuadrilateral representing the four corners of the runway</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.#ctor(FSUIPC.FsLatLonPoint,FSUIPC.FsLatLonPoint,FSUIPC.FsLatLonPoint,FSUIPC.FsLatLonPoint)">
            <summary>
            Constructs a new FsLatLonQuadrilateral by specifying 4 points that define the corners of the Quadrilateral.
            The points do not need to be in a specific order.
            </summary>
            <param name="P0">One of the four corner points of the Quadrilateral</param>
            <param name="P1">One of the four corner points of the Quadrilateral</param>
            <param name="P2">One of the four corner points of the Quadrilateral</param>
            <param name="P3">One of the four corner points of the Quadrilateral</param>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.ContainsPoint(FSUIPC.FsLatLonPoint)">
            <summary>
            Calculates whether or not the given point in contained in this Quadrilateral.
            </summary>
            <param name="point">The point to test</param>
            <returns>True if the given point is contained within this Quadrilateral.</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.ToString">
            <summary>
            The four latitude and longitude points (corners) represented as a string in the default format of N|S|E|W dd* mm.mmmm'
            </summary>
            <returns>A string representation of the Longitude and Latitude of the four corners of this Quadrilateral in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLatLonQuadrilateral.ToString(System.Boolean,System.String,System.Int16)">
            <summary>
            The four latitude and longitude points (corners) represented as a string in the specified format
            </summary>
            <param name="HemisphereAsText">Denote hemisphere using N,S,W or E.  If false, west/south is marked as -</param>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representation of the Longitude and Latitude of the four corners of this Quadrilateral in the specified format</returns>
        </member>
        <member name="T:FSUIPC.FsLongitude">
            <summary>
            A structure representing a longitude value in MS Flight Simulator
            </summary>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int64)">
            <summary>
            Create a new longitude value from the 8-Byte MS Flight Simulator units supplied by FSUIPC
            </summary>
            <param name="FSUnits">An 8-Byte integer representing the longitude in FS Units.  e.g. from FSUIPC offset 0x0568</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int32)">
            <summary>
            Create a new longitude value from the 4-Byte MS Flight Simulator units supplied by FSUIPC
            </summary>
            <param name="FSUnits">A 4-Byte integer representing the longitude in FS Units.  e.g. from FSUIPC offset 0x0864</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Double)">
            <summary>
            Create a new longitude value in degrees - Uses the 8 byte FS Units
            </summary>
            <param name="DecimalDegrees">The longitude value in degrees</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Double,System.Boolean)">
            <summary>
            Create a new longitude value in degrees using either the 8 or 4 byte FS Units
            </summary>
            <param name="DecimalDegrees">The longitude value in degrees</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int32,System.Double)">
            <summary>
            Create a new longitude value in degrees and minutes - Uses the 8 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new longitude</param>
            <param name="DecimalMinutes">The number of minutes for the new longitude</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int32,System.Double,System.Boolean)">
            <summary>
            Create a new longitude value in degrees and minutes using either the 8 or 4 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new longitude</param>
            <param name="DecimalMinutes">The number of minutes for the new longitude</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Create a new longitude value in degrees, minutes and seconds - Uses the 8 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new longitude</param>
            <param name="Minutes">The number of minutes for the new longitude</param>
            <param name="DecimalSeconds">The number of seconds for the new longitude</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.#ctor(System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Create a new longitude value in degrees, minutes and seconds using either the 8 or 4 byte FS Units
            </summary>
            <param name="Degrees">The number of degrees for the new longitude</param>
            <param name="Minutes">The number of minutes for the new longitude</param>
            <param name="DecimalSeconds">The number of seconds for the new longitude</param>
            <param name="UseFullPrecision">Pass true to use the 8-Byte FS Units, or false to use the 4-Byte Units</param>
        </member>
        <member name="M:FSUIPC.FsLongitude.ToFSUnits8">
            <summary>
            Converts this longitude to 8-Byte MS Flight Simulator units.  Can be used to write to FSUIPC, e.g. offset 0x0568 
            </summary>
            <returns>The longitude represented in 8-Byte MS Flight Simulator units.</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.ToFSUnits4">
            <summary>
            Converts this longitude to 4-Byte MS Flight Simulator units.  Can be used to write to FSUIPC, e.g. offset 0x0864 
            </summary>
            <returns>The longitude represented in 4-Byte MS Flight Simulator units.</returns>
        </member>
        <member name="P:FSUIPC.FsLongitude.Degree">
            <summary>
            The whole degree part of the longitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitude.Minute">
            <summary>
            The whole minute part of the longitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitude.Second">
            <summary>
            The whole seconds part of the longitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitude.DecimalDegrees">
            <summary>
            The longitude expressed in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitude.DecimalMinutes">
            <summary>
            The minutes part of the longitude
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitude.DecimalSeconds">
            <summary>
            The seconds part of the longitude
            </summary>
        </member>
        <member name="M:FSUIPC.FsLongitude.ToString">
            <summary>
            The longitude represented as a string in the default format of N|S dd* mm.mmmm'
            </summary>
            <returns>A string representing the longitude in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.ToString(System.Boolean,System.String,System.Int16)">
            <summary>
            The longitude represented as a string in the specified format
            </summary>
            <param name="HemisphereAsText">Denote hemisphere using W or E.  If false, west is marked as -</param>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representing the longitude in the specified format</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.Add(FSUIPC.FsLongitudeSpan)">
            <summary>
            Create a new longitude by adding a longitude span to the current longitude
            </summary>
            <param name="Distance">The longitude span to add</param>
            <returns>The resulting longitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.Subtract(FSUIPC.FsLongitudeSpan)">
            <summary>
            Create a new longitude by subtracting a longitude span from the current longitude
            </summary>
            <param name="Distance">The longitude span to subtract</param>
            <returns>The resulting longitude after the subtraction</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.AddDegrees(System.Double)">
            <summary>
            Create a new longitude by adding a number of degrees to the current longitude
            </summary>
            <param name="Degrees">The number of degrees to add</param>
            <returns>The resulting longitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.AddMinutes(System.Double)">
            <summary>
            Create a new longitude by adding a number of minutes to the current longitude
            </summary>
            <param name="Minutes">The nunber of minutes to add</param>
            <returns>The resulting longitude after the addition</returns>
        </member>
        <member name="M:FSUIPC.FsLongitude.AddSeconds(System.Double)">
            <summary>
            Create a new longitude by adding a number of seconds to the current longitude
            </summary>
            <param name="Seconds">The nunber of seconds to add</param>
            <returns>The resulting longitude after the addition</returns>
        </member>
        <member name="T:FSUIPC.FsLongitudeSpan">
            <summary>
            Represents a span of longitude in MS Flight Simulator
            </summary>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.#ctor(System.Double)">
            <summary>
            Create a new longitude span represented by a number of degrees
            </summary>
            <param name="DecimalDegrees">The number of degrees for the span</param>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.#ctor(System.Int32,System.Double)">
            <summary>
            Create a new longitude span represented by a number of degrees and minutes
            </summary>
            <param name="Degrees">The number of degrees for the span</param>
            <param name="DecimalMinutes">The number of minutes for the span</param>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Create a new longitude span represented by a number of degrees, minutes and seconds
            </summary>
            <param name="Degrees">The number of degrees for the span</param>
            <param name="Minutes">The number of minutes for the span</param>
            <param name="DecimalSeconds">The number of seconds for the span</param>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.FromFeet(System.Double,FSUIPC.FsLatitude)">
            <summary>
            Create a new longitude span that represents a given distance in Feet at a given latitude
            </summary>
            <param name="Feet">The number of Feet to convert to a logitude span</param>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>A new FsLongitudeSpan representing the specified distance in degrees Longitude at a given latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.FromNauticalMiles(System.Double,FSUIPC.FsLatitude)">
            <summary>
            Create a new longitude span that represents a given distance in Nautical Miles at a given latitude
            </summary>
            <param name="NauticalMiles">The number of Nautical Miles to convert to a logitude span</param>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>A new FsLongitudeSpan representing the specified distance in degrees Longitude at a given latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.FromMetres(System.Double,FSUIPC.FsLatitude)">
            <summary>
            Create a new longitude span that represents a given distance in Metres at a given latitude
            </summary>
            <param name="Metres">The number of Metres to convert to a logitude span</param>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>A new FsLongitudeSpan representing the specified distance in degrees Longitude at a given latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.BetweenTwoLongitudes(FSUIPC.FsLongitude,FSUIPC.FsLongitude)">
            <summary>
            Create a new longitude span from two longitudes.  The span will be the shortest absolute distance between them.
            </summary>
            <param name="Lon1">The longitude at one end of the span</param>
            <param name="Lon2">The longitude at the other end of the span</param>
            <returns>A new FsLongitudeSpan representing the distance between the two given Longitudes</returns>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.Degrees">
            <summary>
            The number of whole degrees represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.Minutes">
            <summary>
            The number of whole minutes represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.Seconds">
            <summary>
            The number of whole seconds represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.DecimalDegrees">
            <summary>
            The total number of degrees represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.DecimalMinutes">
            <summary>
            The number of minutes represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.DecimalSeconds">
            <summary>
            The number of seconds represented in the span
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.TotalMinutes">
            <summary>
             The value of the entire span represented in minutes
            </summary>
        </member>
        <member name="P:FSUIPC.FsLongitudeSpan.TotalSeconds">
            <summary>
            The value of the entire span represented in seconds
            </summary>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.ToFeet(FSUIPC.FsLatitude)">
            <summary>
            Gets the distance represented by the span in Feet
            </summary>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>The number of Feet represented by the Longitude span at the specified Latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.ToNauticalMiles(FSUIPC.FsLatitude)">
            <summary>
            Gets the distance represented by the span in Nautical Miles
            </summary>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>The number of Nautical Miles represented by the Longitude span at the specified Latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.ToMetres(FSUIPC.FsLatitude)">
            <summary>
            Gets the distance represented by the span in Metres
            </summary>
            <param name="AtLatitude">The latitude at which to perform the calculation<para></para>(A degree of longitude near the equator is longer than a degree of longitude near a pole)</param>
            <returns>The number of Metres represented by the Longitude span at the specified Latitude</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.ToString">
            <summary>
            The span represented as a string in the default format of dd* mm.mmmm'
            </summary>
            <returns>A string representation of the Longitude span in the default format</returns>
        </member>
        <member name="M:FSUIPC.FsLongitudeSpan.ToString(System.String,System.Int32)">
            <summary>
            The span represented as a string in the specified format
            </summary>
            <param name="DetailLevel">Specifies the detail level.  "d" for degrees only, "m" for degrees and minutes, "s" for degrees, minutes and seconds</param>
            <param name="DecimalPlaces">The number of decimal places to show</param>
            <returns>A string representation of the Longitude span in the specified format</returns>
        </member>
        <member name="T:FSUIPC.FsLVar">
            <summary>
            Represents an LVar in MSFS
            </summary>
        </member>
        <member name="E:FSUIPC.FsLVar.OnValueChanged">
            <summary>
            Fires when this LVar changes
            </summary>
        </member>
        <member name="P:FSUIPC.FsLVar.ID">
            <summary>
            The ID of the LVar
            </summary>
        </member>
        <member name="P:FSUIPC.FsLVar.Name">
            <summary>
            The Name of the LVar
            </summary>
        </member>
        <member name="P:FSUIPC.FsLVar.ValueChanged">
            <summary>
            True if the value changed at the during the last RefreshData()
            </summary>
        </member>
        <member name="P:FSUIPC.FsLVar.Value">
            <summary>
            The current value of the Lvar.
            </summary>
        </member>
        <member name="M:FSUIPC.FsLVar.SetValue(System.Double)">
            <summary>
            Sets a new value for this LVar. The new value is immediately sent to the WASM module, however this will not update the local Value property in this FsLvar.
            <para>The Value will be updated when the new value has been set in the sim and is received by the next RefreshData() call. The OnValueChanged event will also be fired at this time.</para>
            </summary>
            <param name="NewValue"></param>
        </member>
        <member name="M:FSUIPC.FsLVar.updateValue(System.Double)">
            <summary>
            Internally updates the FsLVar local value 
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="T:FSUIPC.LVarCollection">
            <summary>
            A collection of LVars
            </summary>
        </member>
        <member name="M:FSUIPC.LVarCollection.GetEnumerator">
            <summary>
            Returns the enumerator that iterates through all the LVars
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSUIPC.LVarCollection.Names">
            <summary>
            Gets a list of all LVar names
            </summary>
        </member>
        <member name="P:FSUIPC.LVarCollection.Count">
            <summary>
            The number of LVars in this collection
            </summary>
        </member>
        <member name="P:FSUIPC.LVarCollection.Item(System.Int32)">
            <summary>
            Gets the LVar using its ID
            </summary>
            <param name="ID">The ID of the LVar to get</param>
            <returns>The FsLVar object for the LVar with the specified ID</returns>
        </member>
        <member name="P:FSUIPC.LVarCollection.Item(System.String)">
            <summary>
            Gets the LVar using its Name
            </summary>
            <param name="Name">The name of the LVar to get</param>
            <returns>The FsLVar object for the LVar with the specified Name</returns>
        </member>
        <member name="M:FSUIPC.LVarCollection.Exists(System.String)">
            <summary>
            Checks if an LVar with the specified name exists
            </summary>
            <param name="Name">The name of the LVar to check</param>
            <returns>Returns true if an LVar with the specified name exists</returns>
        </member>
        <member name="M:FSUIPC.LVarCollection.Exists(System.Int32)">
            <summary>
            Checks if an LVar with the specified ID exists
            </summary>
            <param name="ID">The ID of the LVar to check</param>
            <returns>Returns true if an LVar with the specified ID exists</returns>
        </member>
        <member name="T:FSUIPC.FsPositionSnapshot">
            <summary>
            Stores a snaptshot of the position of the player aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.Location">
            <summary>
             The location of the aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.Altitude">
            <summary>
             The altitude of the aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.HeadingDegreesTrue">
            <summary>
             The heading of the aircraft in degrees TRUE
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.PitchDegrees">
            <summary>
             The pitch angle of teh aircraft in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.BankDegrees">
            <summary>
             The bank angle of the aircraft in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.IndicatedAirspeedKnots">
            <summary>
             The indicated airspeed of the aircraft in Knots
            </summary>
        </member>
        <member name="P:FSUIPC.FsPositionSnapshot.IsOnGround">
            <summary>
             True if the aircraft is on the ground. 
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCConnection">
            <summary>
            A class that handles communication and data transfer to and from Pete Dowson's FSUIPC or WideFS.
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.GroupsIsolatedToThread">
            <summary>
            Sets/Gets whether or not groups are unique to threads or can be accessed via any thread.<para>If set to false a group created on one thread can be processed/deleted on a different thread.</para><para>If true, groups are isolated to the thread on which they were created. Groups created on one thread cannot be processed/deleted from another. Groups created on different threads can have the same name.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.DLLVersion">
            <summary>
            Returns the version of the FSUIPC Client DLL.
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.FSUIPCVersion">
            <summary>
            Returns the version of FSUIPC we are connected to.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.FSUIPCVersionForClass(System.Byte)">
            <summary>
            Returns the version of FSUIPC we are connected to for a specific class instance.
            <param name="ClassInstance">The number of the Class Instance for which you want the FSUIPC Version</param>
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.AirportsDatabase">
            <summary>
            The active Airports Database object.  Use this object to access data about airports
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.AirportsDatabaseForClass(System.Byte)">
            <summary>
            The active Airports Database object for the specified class instance.  Use this object to access data about airports
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the airports database</param>
            <returns>The AirportsDatabase for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.AITrafficServices">
            <summary>
            The active AI Traffic Services object.  Use this object to access data about AI aircraft. 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.AITrafficServicesForClass(System.Byte)">
            <summary>
            The active AI Traffic Services object for the specified class instance.  Use this object to access data about AI aircraft. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the traffic services</param>
            <returns>The AITrafficServices for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.UserInputServices">
            <summary>
            The active UserInputServices object.  Use this object to access facilities to setup Keystokes and Joystick Button presses for your application.  Also allows you to add a menu item into Flight Sim. 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.UserInputServicesForClass(System.Byte)">
            <summary>
            The active UserInputServices object for the specified Class Instance.  Use this object to access facilities to setup Keystokes and Joystick Button presses for your application.  Also allows you to add a menu item into Flight Sim. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the input services</param>
            <returns>The UserInputServices for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.PayloadServices">
            <summary>
            The active PayloadServices object.  Use this object to access Paload and Fuel information on the current aircraft 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.PayloadServicesForClass(System.Byte)">
            <summary>
            The active PayloadServices object for the specified Class Instance.  Use this object to access Paload and Fuel information on the current aircraft 
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the payload services</param>
            <returns>The PayloadServices for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.WeatherServices">
            <summary>
            The active WeatherServices object.  Use this object to read and write weather information 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.WeatherServicesForClass(System.Byte)">
            <summary>
            The active WeatherServices object for the specified Class Instance.  Use this object to read and write weather. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the weather services</param>
            <returns>The WeatherServices for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.Statistics">
            <summary>
            The statistics object.  Use this object to read various statisitcs about the connection 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.StatisticsForClass(System.Byte)">
            <summary>
            The statistics object for a specified Class Instance.  Use this object to read various statisitcs about the connection 
            </summary>
            <param name="ClassInstance">The number of the Class Instance for which you want the statistics</param>
            <returns>The Statisitcs object for the given class instance</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.SendKeyFocusWaitTime">
            <summary>
            Sets the time (in milliseconds) that SendKeyToFS will wait for the focus to change to/from the Flight Sim window.<para>Default is 150ms.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.IsOpen">
            <summary>
            Returns true is the connection is currently open. 
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.IsConnectedToWideClient">
            <summary>
            A boolean indicating if the connection is to WideClient.exe
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.WideClientForClass(System.Byte)">
            <summary>
            A boolean indicating if the connection is to WideClient.exe
            </summary>
            <param name="ClassInstance">The number of the Class Instance to test for WideClient.</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.IsConnectionOpen">
            <summary>
            DEPRECATED: Use the property IsOpen instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.IsConnectionOpenForClass(System.Byte)">
            <summary>
            Lets you test if the connection to FSUIPC has been opened for a specific class instance.
            <para>Note that you cannot use this to see if FS is still connected.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance to test for an open connection.</param>
            <returns>True is the connection has been opened. False if it has not.</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.FlightSimVersionConnected">
            <summary>
            The version of Flight Simulator that FSUIPC is running in, or that WideFS is connected to.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.FlightSimVersionForClass(System.Byte)">
            <summary>
            The version of Flight Simulator that FSUIPC is running in, or that WideFS is connected to.
            </summary>
            <param name="ClassInstance">The number of the Class Instance to get the Flight Sim Version for.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Open">
            <summary>
            Opens a connection to FSUIPC or WideFS.  Call this once when your application starts.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Open(System.Int32)">
            <summary>
            Opens communication to FSUIPC or WideFS.  Call this once when your application starts.
            </summary>
            <param name="RequiredFlightSimVersion">Specify a version of Flight Sim if you want to limit your application to run only on that version.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Open(FSUIPC.FlightSim)">
            <summary>
            Opens communication to FSUIPC or WideFS.  Call this once when your application starts.
            </summary>
            <param name="RequiredFlightSimVersion">Specify a version of Flight Sim if you want to limit your application to run only on that version.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Open(System.Byte,FSUIPC.FlightSim)">
            <summary>
            Opens communication to a specific class instance of WideClient.exe.  Call this for each instance you want to communicate with.
            </summary>
            <param name="ClassInstance">Specify a specific class instance of wideclient to connect to.  (See WideFS documentation for details)</param>
            <param name="RequiredFlightSimVersion">Specify a version of Flight Sim if you want to limit your application to run only on that version.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Open(System.Byte,System.Int32)">
            <summary>
            Opens communication to a specific class instance of WideClient.exe.  Call this for each instance you want to communicate with.
            </summary>
            <param name="ClassInstance">Specify a specific class instance of wideclient to connect to.  (See WideFS documentation for details)</param>
            <param name="RequiredFlightSimVersion">Specify a version of Flight Sim if you want to limit your application to run only on that version.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.DisconnectGroup(System.String)">
            <summary>
            Use DeleteGroup() instead.  Does the same thing but is a better name
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.DeleteGroup(System.String)">
            <summary>
            Deletes an entire group of Offsets from the FSUIPCConnection class.  Process() can no longer be called on for this group.  Only use this method if you will never need to use the offsets in the group again.
            </summary>
            <param name="groupName">The name of the Group you want to delete.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Close">
            <summary>
            Closes all open connections with FSUIPC or WideFS and cleans up the memory used.<para>Please call this when your application quits.  The FSUIPC interface  uses unmanaged  memory for communication.  The .NET garbage collection cannot clean this up for you.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Close(System.Byte)">
            <summary>
            Closes the connections to a specific class instance of WideClient.exe and cleans up the memory used.<para>Please call this when your application quits.  The FSUIPC interface  uses unmanaged  memory for communication.  The .NET garbage collection cannot clean this up for you.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process">
            <summary>
            Processes all the Offsets in the default group.  To process a specific group of Offsets pass the name of the Group as a parameter.<para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process(System.String)">
            <summary>
            Processes all the Offsets in the specified group. <para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            </summary>
            <param name="GroupName">The name of the group to process.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes all the Offsets in the groups passed in. <para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            </summary>
            <param name="GroupNames">The names of the groups to process.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process(System.Byte)">
            <summary>
            Processes all the Offsets in the default group on the open connection to the specified class instance of WidwClient.exe.  To process a specific group of Offsets pass the name of the Group as a parameter.<para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process(System.Byte,System.String)">
            <summary>
            Processes all the Offsets in the specified groupon the open connection to the specified class instance of WidwClient.exe. <para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="GroupName">The name of the group to process.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.Process(System.Byte,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes all the Offsets in the groups passed in on the open connection to the specified class instance of WidwClient.exe. <para>All Offsets will either have their value updated from FSUIPC, or have their value written to FSUIPC as appropriate.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="GroupNames">The names of the groups to process.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Windows.Forms.Keys)">
            <summary>
            Sends a set of key strokes to the Flight Sim window.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Byte,System.Windows.Forms.Keys)">
            <summary>
            Sends a set of key strokes to the specified Class Instance of Flight Sim.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Windows.Forms.Keys,FSUIPC.SendModifierKeys)">
            <summary>
            Sends a set of key strokes to the Flight Sim window.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="Key">The key to send.</param>
            <param name="Modifiers">The modifier keys to be held in combination with the specified Key.<para>For multiple modifiers use a bitwise or operation.</para></param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Byte,System.Windows.Forms.Keys,FSUIPC.SendModifierKeys)">
            <summary>
            Sends a set of key strokes to the specified Class Instance of Flight Sim.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
            <param name="Modifiers">The modifier keys to be held in combination with the specified Key.<para>For multiple modifiers use a bitwise or operation.</para></param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Windows.Forms.Keys,System.Windows.Forms.Form)">
            <summary>
            Sends a set of key strokes to the Flight Sim window.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
            <param name="ReturnFocusToForm">The form to return focus to after the keys have been sent.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Byte,System.Windows.Forms.Keys,System.Windows.Forms.Form)">
            <summary>
            Sends a set of key strokes to the specified Class Instance of Flight Sim.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
            <param name="ReturnFocusToForm">The form to return focus to after the keys have been sent.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Windows.Forms.Keys,FSUIPC.SendModifierKeys,System.Windows.Forms.Form)">
            <summary>
            Sends a set of key strokes to the Flight Sim window.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
            <param name="Modifiers">The modifier keys to be held in combination with the specified Key.<para>For multiple modifiers use a bitwise or operation.</para></param>
            <param name="ReturnFocusToForm">The form to return focus to after the keys have been sent.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendKeyToFS(System.Byte,System.Windows.Forms.Keys,FSUIPC.SendModifierKeys,System.Windows.Forms.Form)">
            <summary>
            Sends a set of key strokes to the specified Class Instance of Flight Sim.<para>In order for this to work the Flight Sim window will become the active window.</para><para>If you want focus to return to your application, pass a reference to the form to return to.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Key">The key to send. No not use modifiers here, use the parameter provided.</param>
            <param name="Modifiers">The modifier keys to be held in combination with the specified Key.<para>For multiple modifiers use a bitwise or operation.</para></param>
            <param name="ReturnFocusToForm">The form to return focus to after the keys have been sent.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.FsControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.FSUIPCControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.FSUIPCAxisControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.PMControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.FSUIPCAutoPilotControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.PMDG_737_NGX_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.PMDG_777X_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(FSUIPC.PMDG_747QOTSII_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.FsControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.FSUIPCControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.FSUIPCAxisControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.PMControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.FSUIPCAutoPilotControl,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.PMDG_737_NGX_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.PMDG_777X_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,FSUIPC.PMDG_747QOTSII_Control,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="Control">The control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Int32,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ControlNumber">The number of the control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SendControlToFS(System.Byte,System.Int32,System.Int32)">
            <summary>
            Sends a control to FS with an optional parameter. 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="ControlNumber">The number of the control to send</param>
            <param name="ParameterValue">The value of the parameter to send. Use 0 to if no parameter is required.</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.ReadLVar(System.String)">
            <summary>
            Reads a local panel variable (L:VAR) from the flight sim.
            </summary>
            <param name="LVAR">The name of the variable to read. With or without the "L:" prefix</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.ReadLVar(System.Byte,System.String)">
            <summary>
            Reads a local panel variable (L:VAR) from the flight sim 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="LVAR">The name of the variable to read. With or without the "L:" prefix</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.WriteLVar(System.String,System.Double)">
            <summary>
            Writes a new value to a local panel variable (L:VAR) in the flight sim 
            </summary>
            <param name="LVAR">The name of the variable to read. With or without the "L:" prefix</param>
            <param name="NewValue">The new value to write</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.WriteLVar(System.Byte,System.String,System.Double)">
            <summary>
            Writes a new value to a local panel variable (L:VAR) in the flight sim 
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="LVAR">The name of the variable to read. With or without the "L:" prefix</param>
            <param name="NewValue">The new value to write</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(FSUIPC.FsGate,System.Boolean)">
            <summary>
            Moves the player aircraft to a Gate from the Airports Database.<para>Only works with FSX and above</para>
            </summary>
            <param name="Gate">The FsGate object representing the gate to move the player aircraft to</param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(FSUIPC.FsPositionSnapshot,System.Boolean)">
            <summary>
            Moves the player aircraft according to the values in the position snapshot.<para>A position snapshot can be created manually, or automactially using the FSUIPConnection.GetPositionSnapshot() method.</para><para>Only works with FSX and above</para>
            </summary>
            <param name="PositionSnapshot">The FsGate object representing the gate to move the player aircraft to</param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(FSUIPC.FsRunway,System.Boolean)">
            <summary>
            Moves the player aircraft to a Runway from the Airports Database.<para>Only works with FSX and above</para>
            </summary>
            <param name="Runway">The FsRunway object representing the runway to move the player aircraft to. The player will be moves to the runway's start location with the correct heading.</param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(FSUIPC.FsHelipad,System.Boolean)">
            <summary>
            Moves the player aircraft to a Helipad from the Airports Database.<para>Only works with FSX and above</para>
            </summary>
            <param name="Helipad">The FsHelipad object representing the helipad to move the player aircraft to.</param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(FSUIPC.FsLatLonPoint,System.Boolean,System.Nullable{FSUIPC.FsAltitude},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Moves the player aircraft to a new lon/lat location. You may optionally specify new Altitude, Indicated Airspeed, Pitch, Bank or Heading values.<para>Only works with FSX and above</para>
            </summary>
            <param name="NewLocation">The new FsLatLonPoint to move to</param>
            <param name="OnGround">Pass true if you want the aircraft on the ground after moving. (Speed and Altitude are ignored in this case)</param>
            <param name="Alt">The new altitude passed as a FsAltitude class. (e.g. FsAltitude.FromFeet(3000))<para>Pass null (Nothing in VB) to keep the current altitude)</para></param>
            <param name="HeadingTrue">The new heading in degrees true<para>Pass null (Nothing in VB) to keep the current heading)</para></param>
            <param name="Pitch">The new pitch angle of the aircraft in degrees<para>Pass null (Nothing in VB) to keep the current pitch angle)</para></param>
            <param name="Bank">The new bank angle of the aircraft in degrees true<para>Pass null (Nothing in VB) to keep the current bank angle)</para></param>
            <param name="IndicatedAirSpeedKnots">The new indicated airspeed of the aircraft in knots<para>Pass null (Nothing in VB) to keep the current airspeed)</para></param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.MoveAircraft(System.Byte,FSUIPC.FsLatLonPoint,System.Boolean,System.Nullable{FSUIPC.FsAltitude},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Moves the player aircraft to a new lon/lat location. You may optionally specify new Altitude, Indicated Airspeed, Pitch, Bank or Heading values.<para>Only works with FSX and above</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="NewLocation">The new FsLatLonPoint to move to</param>
            <param name="OnGround">Pass true if you want the aircraft on the ground after moving. (Speed and Altitude are ignored in this case)</param>
            <param name="Alt">The new altitude passed as a FsAltitude class. (e.g. FsAltitude.FromFeet(3000))<para>Pass null (Nothing in VB) to keep the current altitude)</para></param>
            <param name="HeadingTrue">The new heading in degrees true<para>Pass null (Nothing in VB) to keep the current heading)</para></param>
            <param name="Pitch">The new pitch angle of the aircraft in degrees<para>Pass null (Nothing in VB) to keep the current pitch angle)</para></param>
            <param name="Bank">The new bank angle of the aircraft in degrees true<para>Pass null (Nothing in VB) to keep the current bank angle)</para></param>
            <param name="IndicatedAirSpeedKnots">The new indicated airspeed of the aircraft in knots<para>Pass null (Nothing in VB) to keep the current airspeed)</para></param>
            <param name="LeavePaused">If set to true, the sim will be paused after moving the aircraft</param>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.GetPositionSnapshot">
            <summary>
            Takes a snapshot of the current position of the aircraft including: Location, altitude, heading, pitch, bank, onGround and IAS.<para>Note that this information can be passed directly to the MoveAircraft method.</para>
            </summary>
            <returns>A FsPositionSnapshot class holding the position values</returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.GetPositionSnapshot(System.Byte)">
            <summary>
            Takes a snapshot of the current position of the aircraft including: Location, altitude, heading, pitch, bank, onGround and IAS.<para>Note that this information can be passed directly to the MoveAircraft method.</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <returns>A FsPositionSnapshot class holding the position values</returns>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.UTCDateTime">
            <summary>
            The current UTC date and time set in the Flight Sim. (aka ZULU time and GMT). Setting a new value changes the date/time in the simulator.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.GetUTCDateTimeForClass(System.Byte)">
            <summary>
            Gets the current UTC date and time set in the Flight Sim. (aka ZULU time and GMT) for a speicifc WideClient Instance.<para>Usually use the property "UTCDateTime".</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SetUTCDateTimeForClass(System.Byte,System.DateTime)">
            <summary>
            Sets the current UTC date and time set in the Flight Sim. (aka ZULU time and GMT) for a speicifc WideClient Instance.<para>Usually use the property "UTCDateTime".</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="NewDateTime">The new date and time</param>
        </member>
        <member name="P:FSUIPC.FSUIPCConnection.LocalDateTime">
            <summary>
            The current Local date and time set in the Flight Sim. Setting a new value changes the date/time in the simulator.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.GetLocalDateTimeForClass(System.Byte)">
            <summary>
            Gets the current Local date and time set in the Flight Sim for a speicifc WideClient Instance.<para>Usually use the property "UTCDateTime".</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.FSUIPCConnection.SetLocalDateTimeForClass(System.Byte,System.DateTime)">
            <summary>
            Sets the current Local date and time set in the Flight Sim for a speicifc WideClient Instance.<para>Usually use the property "UTCDateTime".</para>
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
            <param name="NewDateTime">The new date and time</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.SendModifierKeys">
            <summary>
            Modifier keys to be held while another key is pressed.
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Shift">
            <summary>
            Either Shift Key
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Control">
            <summary>
            The CTRL (Control) Key
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Tab">
            <summary>
            The Tab Key
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.None">
            <summary>
            No Modifier Keys (Normal key press)
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Alt">
            <summary>
            The Alt Key
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Windows">
            <summary>
            The Windows Key
            </summary>
        </member>
        <member name="F:FSUIPC.SendModifierKeys.Menu">
            <summary>
            The Shortcut (Popup) Menu
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCException">
            <summary>
            A exception that gets thrown if an error occurs during an FSUIPC operation.
            </summary>
        </member>
        <member name="P:FSUIPC.FSUIPCException.FSUIPCErrorCode">
            <summary>
            The 'traditional' error codes returned by the C version of the FSUIPC Client SDK.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCException.#ctor(FSUIPC.FSUIPCError,System.String)">
            <summary>
            Creates a new FSUIPCException
            </summary>
            <param name="FSUIPCErrorCode">The 'traditional' error codes returned by the C version of the FSUIPC Client SDK.</param>
            <param name="Message">The text describing the error.</param>
        </member>
        <member name="T:FSUIPC.FSUIPCStruct">
            <summary>
            Represents a data structure that can be read to or written from FSUIPC.  
            Define your class inheriting from this class.
            Declare public fields of type FSUIPCStructField for each field in the structure.
            </summary>
        </member>
        <member name="T:FSUIPC.FSUIPCStructField`1">
            <summary>
            Represents a field in a struct that will be used to get data to and from an FSUIPC Offset.
            </summary>
            <typeparam name="T">The .NET datatype for this field.</typeparam>
        </member>
        <member name="P:FSUIPC.FSUIPCStructField`1.Value">
            <summary>
            The data from the FSUIPC struct field, obtained from the last Process(). <para>To write a value to the FSUIPC Offset, assign the new value to this property.  It will be written to FSUIPC during the next Process().</para> 
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCStructField`1.#ctor">
            <summary>
            Create a new field for an FSUIPC structure.
            </summary>
        </member>
        <member name="M:FSUIPC.FSUIPCStructField`1.#ctor(System.Int32)">
            <summary>
            Create a new field for an FSUIPC structure.
            </summary>
            <param name="ArrayOrStringLength">The number of bytes to read.  Used to define the length of types: String, BitArray, FsBitArray and array of bytes.  Use a negative length for strings without 0 terminators.</param>
        </member>
        <member name="T:FSUIPC.FSUIPCStructFieldArray`1">
            <summary>
            Represents an array in an FSUIPC struct to be used to get data to and from an offset.
            </summary>
            <typeparam name="T">The type of objects in the array</typeparam>
        </member>
        <member name="M:FSUIPC.FSUIPCStructFieldArray`1.#ctor(System.Int32)">
            <summary>
            Create a new array of objects to be used in an FSUIPC struct.
            </summary>
            <param name="NumberOfItems">The number of items in the array.</param>
        </member>
        <member name="P:FSUIPC.FSUIPCStructFieldArray`1.Item(System.Int32)">
            <summary>
            Gets the field from the field array by index.
            </summary>
            <param name="fieldNo">The index number of the field required.</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.FsVersion">
            <summary>
            A struct representing the type and version of the Flight Simulator the DLL is talking to.
            </summary>
        </member>
        <member name="F:FSUIPC.FsVersion.Simulator">
            <summary>
            The type of Simulator (e.g. FSX, P3D)
            </summary>
        </member>
        <member name="F:FSUIPC.FsVersion.VersionCode">
            <summary>
            The raw version code returned by FSUIPC. See the docs for offset 0x3124.<para>Use the ToString() method for a decoded string</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsVersion.ToString">
            <summary>
            Returns a string that describes the flight sim type and version. The version is decoded into a meaningful version number.
            </summary>
            <returns>The string representing the flight sim and version</returns>
        </member>
        <member name="T:FSUIPC.MSFSVariableServices">
            <summary>
            Allows direct access to LVars and HVars via John Dowson's WASM module.
            Only works for MSFS. You and your users must have John's WASM module installed.
            John's FSUIPC_WAPID.dll must also be accessable from your .exe. Either include it in your distribution 
            to be in the same folder as your exe file. OR place the DLL in a folder included in the windows PATH.
            </summary>
        </member>
        <member name="E:FSUIPC.MSFSVariableServices.OnLogEntryReceived">
            <summary>
            Event fired every time a log entry is received from the WASM plug in.
            </summary>
        </member>
        <member name="E:FSUIPC.MSFSVariableServices.OnValuesChanged">
            <summary>
            Event fired when at least 1 of the LVar values has changed
            </summary>
        </member>
        <member name="E:FSUIPC.MSFSVariableServices.OnVariableListChanged">
            <summary>
            Event fired when the list of available variables has changed
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.LVARUpdateFrequency">
            <summary>
            The number of times per second that the WASM MODULE will get the LVar values from the Flight Sim 
            The default value is 6hz. Calling RefreshData() more frequently than this setting will just return the same values as before.
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.LogLevel">
            <summary>
            Defines how detailed the log generated by the WASM plugin should be
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.SimConfigConnection">
            <summary>
            Specifies the SimConnect Connection to use as defined in the WASM config file.
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.IsRunning">
            <summary>
            Returns true if the WASM service is connected and running correctly
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.HVars">
            <summary>
            Returns a collection of all the HVars currently in existance
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.LVars">
            <summary>
            Returns a collection of all the LVars currently in existance
            </summary>
        </member>
        <member name="P:FSUIPC.MSFSVariableServices.LVarsChanged">
            <summary>
            Returns a collection of all the LVars whose values where changed during the last RefreshData() call
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.#ctor">
            <summary>
            Create a new instance of the MSFSVariableServices
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.Init(System.IntPtr,System.Int32)">
            <summary>
            Initialises the MSFSVariableServices with a specific start event 
            </summary>
            <param name="WindowHandle">The handle of your main window</param>
            <param name="StartEventNo">The StartEvent number</param>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.Init(System.IntPtr)">
            <summary>
            Initialises the MSFSVariableServices with the default start event 
            </summary>
            <param name="WindowHandle">The handle of your main window</param>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.Start">
            <summary>
            Tells the WASM module to begin getting data from the Flight Sim
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.Stop">
            <summary>
            Tells the WASM module to stop getting data from the Flight Sim
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.Reload">
            <summary>
            Tells the WASM module to rescan for variables. 
            NOTE: This will first delete all the current FsLVar and FsHVar instances from MSFSVariableServices
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.LogHVars">
            <summary>
            Tells th WASM module to write a log entry for all known HVars.
            Handle the OnLogEntryReceived to receive these log entries.
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.LogLVars">
            <summary>
            Tells th WASM module to write a log entry for all known LVars.
            Handle the OnLogEntryReceived to receive these log entries.
            </summary>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.CreateLVar(System.String,System.Int32)">
            <summary>
            Creates a new LVar
            </summary>
            <param name="Name">The name of the new LVar</param>
            <param name="Value">The value to set for the new LVar</param>
            <returns>True if the LVar was created.</returns>
        </member>
        <member name="M:FSUIPC.MSFSVariableServices.ExecuteCalculatorCode(System.String)">
            <summary>
            Tells the WASM module to executes the code passed in
            </summary>
            <param name="Code">The code to execute</param>
        </member>
        <member name="T:FSUIPC.LogEventArgs">
            <summary>
            Class that is passed to the Logging event handler. Contains the Log message 
            </summary>
        </member>
        <member name="P:FSUIPC.LogEventArgs.LogEntry">
            <summary>
            The Log Entry 
            </summary>
        </member>
        <member name="M:FSUIPC.LogEventArgs.#ctor(System.String)">
            <summary>
            Create a new instance of the LogEventArgs
            </summary>
            <param name="LogEntry"></param>
        </member>
        <member name="T:FSUIPC.LVarEvent">
            <summary>
            Class that is passed to the LVAR OnValueChanged handler. Contains the LVar that changed 
            </summary>
        </member>
        <member name="P:FSUIPC.LVarEvent.LVar">
            <summary>
            The LVar
            </summary>
        </member>
        <member name="T:FSUIPC.LOGLEVEL">
            <summary>
            The log level for the WASM Module
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.DISABLE_LOG">
            <summary>
            No log is produced
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.LOG_LEVEL_INFO">
            <summary>
            Only info is logged
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.LOG_LEVEL_BUFFER">
            <summary>
            
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.LOG_LEVEL_DEBUG">
            <summary>
            
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.LOG_LEVEL_TRACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:FSUIPC.LOGLEVEL.ENABLE_LOG">
            <summary>
            enable full logging
            </summary>
        </member>
        <member name="T:FSUIPC.OffsetAction">
            <summary>
            Specifies an action to be performed by the offset on the next process.
            Normally Autosense (the default) works perfectly well.
            </summary>
        </member>
        <member name="F:FSUIPC.OffsetAction.Autosense">
            <summary>
            Reads, unless the value has been changed in which case it writes. Write only offsets are always written.
            </summary>
        </member>
        <member name="F:FSUIPC.OffsetAction.Read">
            <summary>
            Forces this offset to be read
            </summary>
        </member>
        <member name="F:FSUIPC.OffsetAction.Write">
            <summary>
            Forces this offset to be written
            </summary>
        </member>
        <member name="T:FSUIPC.Offset">
            <summary>
            Represents an item of data that can be read from or written to an FSUIPC offset.
            </summary>
        </member>
        <member name="M:FSUIPC.Offset.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a Offset that will read from or write the specified number of bytes to the specified Offset.  
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="Length">The number of bytes to read/write.</param>
        </member>
        <member name="M:FSUIPC.Offset.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset that will read from or write the specified number of bytes to the specified Offset. 
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="Length">The number of bytes to read/write.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="M:FSUIPC.Offset.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new Offset that will read from or write the specified number of bytes to the specified Offset. 
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="Length">The number of bytes to read/write.</param>
        </member>
        <member name="M:FSUIPC.Offset.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset in the specified group that will read from or write the specified number of bytes to the specified Offset.  
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="Length">The number of bytes to read/write.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="P:FSUIPC.Offset.Address">
            <summary>
            The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.ActionAtNextProcess">
            <summary>
            This property can be used to force this offset to be read or written on the next process.
            <para>Normally you need not set this as the default (AutoSense) works perfectly well.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.IsConnected">
            <summary>
            Indicates if this Offset is currently 'Connected'.  Offsets that are disconnected will not be updated or have changes written to FSUIPC when Process() is run.
            This is read-only.  To connect or disconnect an Offset call the Connect() or Disconnect() methods.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.WriteOnly">
            <summary>
            Indicates that this Offset is to be Write-Only.  While marked as Write-Only the value of this Offset will never be read from FSUIPC.  If you change the value of this Offset the new value will be written to FSUIPC on the next process.
            </summary>
        </member>
        <member name="M:FSUIPC.Offset.Disconnect">
            <summary>
            Immediately disconnects this Offset from FSUIPC.  The value of this Offset will no longer be updated or written during Process() calls.  Use Reconnect() to start updating again.
            </summary>
            
        </member>
        <member name="M:FSUIPC.Offset.Disconnect(System.Boolean)">
            <summary>
            Disconnects this Offset from the FSUIPCConnection class.  The value of this Offset will no longer be updated or written during Process() calls.  Use Reconnect() to start updating again.        
            </summary>
            <param name="AfterNextProcess">If true, the Offset will not be disconnected until after you call Process().  If false the Offset is disconnected immediately.</param>
        </member>
        <member name="M:FSUIPC.Offset.Reconnect">
            <summary>
            Permenently reconnects this Offset to FSUIPC.  The value of this Offset will be read/written during subsequent Process() calls.        
            </summary>
        </member>
        <member name="M:FSUIPC.Offset.Reconnect(System.Boolean)">
            <summary>
            Reconnects this Offset to FSUIPC.  The value of this Offset will be updated/written during subsequent Process() calls.
            </summary>
            <param name="ForNextProcessOnly">If true, the Offset is reconnected only for the next Process() call.  After that it's disconnected again.  If false, the Offset is reconnected until you call Disconnect().</param>
        </member>
        <member name="P:FSUIPC.Offset.IsFixedLengthString">
            <summary>
            True is this offset represents a fixed length string.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.Connected">
            <summary>
            Returns true is this offset is currently connected. i.e. it will be read or written during process() calls.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.ValueChanged">
            <summary>
            Indicates if the value of this Offset was changed during the last Process() call.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.Write">
            <summary>
            True if the offset will be Written during the next process() call.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.OnceOnly">
            <summary>
            True if this offset will be read or written only during the next process() call. After this the offset will be disconnected.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.DataLength">
            <summary>
            The length of the data in this offset in bytes.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.Group">
            <summary>
            The group the offset belongs to.
            </summary>
        </member>
        <member name="P:FSUIPC.Offset.ID">
            <summary>
            The unique internal ID of this offset
            </summary>
        </member>
        <member name="M:FSUIPC.Offset.GetValue``1">
            <summary>
            Gets the value of this offset as the specified type
            </summary>
            <typeparam name="T">The type the value should be returned as</typeparam>
            <returns>The value of the offset</returns>
        </member>
        <member name="M:FSUIPC.Offset.GetValue(System.Type)">
            <summary>
            Gets the value of this offset as the specified type
            </summary>
            <param name="AsType">The type the value should be returned as</param>
            <returns>The value of the offset</returns>
        </member>
        <member name="M:FSUIPC.Offset.SetValue(System.Object)">
            <summary>
            Sets the value of this offset. No type checking or other data varification is done.
            </summary>
            <param name="NewValue"></param>
        </member>
        <member name="M:FSUIPC.Offset.ToString">
            <summary>
            Return a string value contianing information about this Offset.
            </summary>
            <returns>A string containing the Offset Address and Length</returns>
        </member>
        <member name="T:FSUIPC.Offset`1">
            <summary>
            Represents an item of strongly-typed data that can be read from or written to an FSUIPC offset.
            </summary>
            <typeparam name="T">The native (.NET) type representing the data held in the FSUIPC offset.<para></para><para>Native .NET types supported are: Byte, SByte, Int16, UInt16, Int32, UInt32, Int64, UInt64, Double, Single, String, BitArray, FsLongitude, FsLatitude</para><para>Depending on the language you are using there may be other ways of referring to these base types.</para><para>E.g. Int16 in VB.NET is also 'Short'.  In C# it's 'short'.</para><para></para>To read/Write raw bytes of any length from FSUIPC use an array of Bytes. (Byte() in VB.NET, byte[] in C#)</typeparam>
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.Int32)">
            <summary>
            Creates a new Offset that will read from or write to the specified Offset.
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new Offset in the specified Group that will read from or write to the specified Offset.
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a Offset that will read from or write the specified number of bytes to the specified Offset.  Only used with data types of String, BitArray, FsBitArray, FsLongitude, FsLatitude and an array of bytes.
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="ArrayOrStringLength">The number of bytes to read.  Used to define the length of types: String, BitArray, FsBitArray, FsLongitude, FsLatitude and array of bytes.  Use a negative length for strings without 0 terminators.</param>
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset that will read from or write to the specified Offset.
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset in the specified Group that will read from or write to the specified Offset.
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset that will read from or write the specified number of bytes to the specified Offset.  Only used with data types of String, BitArray, FsBitArray, FsLongitude, FsLatitude and an array of bytes.
            </summary>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="ArrayOrStringLength">The number of bytes to read.  Used to define the length of types: String, BitArray, FsBitArray, FsLongitude, FsLatitude and array of bytes. Use a negative length for strings without 0 terminators.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new Offset that will read from or write the specified number of bytes to the specified Offset.  Only used with data types of String, BitArray, FsBitArray, FsLongitude, FsLatitude and an array of bytes.
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="ArrayOrStringLength">The number of bytes to read.  Used to define the length of types: String, BitArray, FsBitArray, FsLongitude, FsLatitude and array of bytes.  Use a negative length for strings without 0 terminators.</param>
        </member>
        <member name="M:FSUIPC.Offset`1.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new Offset in the specified group that will read from or write the specified number of bytes to the specified Offset.  Only used with data types of String, BitArray, FsBitArray, FsLongitude, FsLatitude and an array of bytes.
            </summary>
            <param name="DataGroupName">The name of the DataGroup to put this Offset into.<para>To process this Offset you must call Process() and pass the GroupName as a parameter.</para></param>
            <param name="Address">The FSUIPC offset address to read from or write to, as specified in the FSUIPC for Programmer's document.</param>
            <param name="ArrayOrStringLength">The number of bytes to read.  Used to define the length of types: String, BitArray, FsBitArray, FsLongitude, FsLatitude and array of bytes. Use a negative length for strings without 0 terminators.</param>
            <param name="WriteOnly">If true, Sets this Offset to only write data.  Its value is never read from FSUIPC.  You can change the setting with the WriteOnly property at any time.</param>        
        </member>
        <member name="P:FSUIPC.Offset`1.Value">
            <summary>
            The strongly-typed value of this offset.<para>Setting this property will cause the new value to be written to FSUIPC during the next Process() call.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.Offset`1.ToString">
            <summary>
            Return a string value contianing information about this Offset.
            </summary>
            <returns>A string containing the Offset Address, Data Type, and Length</returns>
        </member>
        <member name="T:FSUIPC.FsPayloadStation">
            <summary>
            Represents a payload station of an aircraft in Flight Simulator
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.Index">
            <summary>
            The FSUIPC index (station number) of the payload station
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.Name">
            <summary>
            The name of the payload station
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.WeightLbs">
            <summary>
            The weight of the payload in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.WeightSlugs">
            <summary>
            The weight of the payload in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.WeightKgs">
            <summary>
            The weight of the payload in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.WeightNewtons">
            <summary>
            The weight of the payload in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionLateralFeet">
            <summary>
            The lateral distance of the payload station from the aircraft datum in Feet (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionLongitudinalFeet">
            <summary>
            The longitudinal distance of the payload station from the aircraft datum in Feet (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionVerticalFeet">
            <summary>
            The virtical distance of the payload station from the aircraft datum in Feet (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionLateralMetres">
            <summary>
            The lateral distance of the payload station from the aircraft datum in Metres (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionLongitudinalMetres">
            <summary>
            The longitunindal distance of the payload station from the aircraft datum in Metres (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="P:FSUIPC.FsPayloadStation.PositionVerticalMetres">
            <summary>
            The vertical distance of the payload station from the aircraft datum in Metres (## Not availble in FSX ##)
            </summary>
        </member>
        <member name="T:FSUIPC.FsFuelTank">
            <summary>
            Represents a fuel tank in an aircraft in Flight Simulator
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.IsPresent">
            <summary>
            True if this tank is present on the current aircraft.
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.Name">
            <summary>
            The name of this tank
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.Tank">
            <summary>
            The identity of this tank
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacityUSGallons">
            <summary>
            The maximum capacity of this tank in US Gallons
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacityLitres">
            <summary>
            The maximum capacity of this tank in Litres
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacityLbs">
            <summary>
            The maximum capacity of this tank in Lbs
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacityKgs">
            <summary>
            he maximum capacity of this tank in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacitySlugs">
            <summary>
            The current weight of the fuel in this tank in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.CapacityNewtons">
            <summary>
            The current weight of the fuel in this tank in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.LevelPercentage">
            <summary>
            The current level of this tank as a percentage
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.LevelUSGallons">
            <summary>
            The current level of this tank in US Gallons
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.LevelLitres">
            <summary>
            The current level of this tank in Litres
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.WeightLbs">
            <summary>
            The current weight of the fuel in this tank in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.WeightKgs">
            <summary>
            The current weight of the fuel in this tank in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.WeightSlugs">
            <summary>
            The current weight of the fuel in this tank in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTank.WeightNewtons">
            <summary>
            The current weight of the fuel in this tank in Newtons
            </summary>
        </member>
        <member name="T:FSUIPC.PayloadServices">
            <summary>
            A class that provides information about the Fuel and Payload of the current aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.TooManyPayloadStations">
            <summary>
            This will be true if the loaded aircraft has more than 61 payload stations. 
            FSUIPC can only handle the first 61 and therefore the PayloadStations list 
            will never have more than that. Becuase of this limitation, stations above 
            61 that will not be accessible to your application. 
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.PayloadStations">
            <summary>
            A strongly-typed list of FsPayloadStation objects.  One for each payload station on this aircraft.
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelTanks">
            <summary>
            A strongly-typed list of FsFuelTank objects.  One for each know possible fuel tank.  Check which tanks are present with the IsPresent property.
            </summary>
        </member>
        <member name="M:FSUIPC.PayloadServices.GetFuelTank(FSUIPC.FSFuelTanks)">
            <summary>
            DEPRECATED: Use the accessor on the FuelTanks collection instead. e.g. FsFuelTank leftTank = PayloadServices.FuelTanks[FsFuelTanks.Left_Main];
            </summary>
            <param name="Tank">DEPRECATED</param>
            <returns>DEPRECATED</returns>
        </member>
        <member name="P:FSUIPC.PayloadServices.PayloadWeightLbs">
            <summary>
            The total current weight of all payload stations in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.PayloadWeightKgs">
            <summary>
            The current weight of all payload stations in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.PayloadWeightSlugs">
            <summary>
            The current weight of all payload stations in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.PayloadWeightNewtons">
            <summary>
            The current weight of all payload stations in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.GrossWeightLbs">
            <summary>
            The total current weight of the aircraft in Pounds 
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.GrossWeightKgs">
            <summary>
            The total current weight of the aircraft in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.GrossWeightSlugs">
            <summary>
            The total current weight of the aircraft in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.GrossWeightNewtons">
            <summary>
            The total current weight of the aircraft in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.MaxGrossWeightLbs">
            <summary>
            The maxmimum allowed weight (including payload and fuel) of the aircraft in Pounds 
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.MaxGrossWeightKgs">
            <summary>
            The maxmimum allowed weight (including payload and fuel) of the aircraft in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.MaxGrossWeightSlugs">
            <summary>
            The maxmimum allowed weight (including payload and fuel) of the aircraft in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.MaxGrossWeightNewtons">
            <summary>
            The maxmimum allowed weight (including payload and fuel) of the aircraft in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.EmptyWeightLbs">
            <summary>
            The total current weight of the aircraft not including fuel or payload, in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.EmptyWeightKgs">
            <summary>
            The total current weight of the aircraft not including fuel or payload, in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.EmptyWeightSlugs">
            <summary>
            The total current weight of the aircraft not including fuel or payload, in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.EmptyWeightNewtons">
            <summary>
            The total current weight of the aircraft not including fuel or payload, in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelWeightLbs">
            <summary>
            The total current weight of all the fuel in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelWeightKgs">
            <summary>
            The total current weight of all the fuel in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelWeightSlugs">
            <summary>
            The total current weight of all the fuel in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelWeightNewtons">
            <summary>
            The total current weight of all the fuel in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacityUSGallons">
            <summary>
            The total capacity of all fuel tanks in US Gallons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacityLitres">
            <summary>
            The total capacity of all fuel tanks in Litres
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacityLbs">
            <summary>
            The total current weight of all the fuel in Pounds
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacityKgs">
            <summary>
            The total capacity of all fuel tanks in Kilograms
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacitySlugs">
            <summary>
            The total capacity of all fuel tanks in Slugs
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelCapacityNewtons">
            <summary>
            The total capacity of all fuel tanks in Newtons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelLevelUSGallons">
            <summary>
            The total level of all fuel tanks in US Gallons
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelLevelLitres">
            <summary>
            The total level of all fuel tanks in Litres
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelPercentage">
            <summary>
             The total percentage fuel level accross all tanks
            </summary>
        </member>
        <member name="M:FSUIPC.PayloadServices.RefreshData">
            <summary>
            Updates all the payload data from FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.PayloadServices.WriteChanges">
            <summary>
            Writes the changes to fuel tank levels and payload weights 
            </summary>
        </member>
        <member name="P:FSUIPC.PayloadServices.FuelDistributionPlan">
            <summary>
            Gets or Sets the FuelTank distribution plan for the fuel loading algorithm used by the LoadFuel() methods.
            <para>The plan is an array of FSFuelTanks[] arrays. Each sub-array is a group of tanks which get filled equally.</para>
            <para>The fuel is placed in the first group of tanks. If they become full the remaining fuel is placed in the next group and so on.</para>
            <para>Tanks which are not present on the aircraft being used are ignored. All tanks should be therefore included in the plan.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelUSGallons(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in US Gallons</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelLitres(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in Litres</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelLbs(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in Pounds (Lbs)</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelKgs(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in Kg</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelNewtons(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in Newtons</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="M:FSUIPC.PayloadServices.LoadFuelSlugs(System.Double,System.Boolean)">
            <summary>
            Sets the fuel in the aircraft to the specified quantity, or adds the specified quantity. The fuel will be distributed automatically between the fuel tanks present on the aircraft. If adding fuel the algorithm will try to correct any imbalance between the tanks.
            <para>The priority for filling tanks is set out in the FuelDistributionPlan. The default plan fills tip and aux tanks first, followed by the main tanks, then centre, and finally external.</para>
            </summary>
            <param name="FuelQuantity">The quantity of fuel in Slugs</param>
            <param name="SetAbsoluteQuantity">Set to true to set the fuel load to the specified quantity. Set to false to add the specified quantity to the fuel already in the tanks.</param>
            <returns>The quantity of fuel that could not be placed in the tanks</returns>
        </member>
        <member name="T:FSUIPC.FsFuelTanksCollection">
            <summary>
            A collection of FsFuelTank objects
            </summary>
        </member>
        <member name="P:FSUIPC.FsFuelTanksCollection.Item(FSUIPC.FSFuelTanks)">
            <summary>
            Gets back a single fuel tank object using the type of tank
            </summary>
            <param name="fuelTank"></param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.PMDG_737_NGX_Control">
            <summary>
            Controls for the 737 NGX Aircraft from PMDG.<para>Please refer to the PMDG 737 NGX SDK Documentation for more info.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.PMDG_737_NGX_Offsets">
            <summary>
            A helper class containg all the known offsets for the PMDG 737 NGX Aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_DisplaySelector">
            <summary>
            Positions 0..4
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_SysDisplay_R">
            <summary>
            Boolean: false: L 
            true: R
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_annunGPS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_annunALIGN">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_annunON_DC">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_annunFAULT">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_annunDC_FAIL">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_ModeSelector">
            <summary>
            Array of 2 Offsets
            0: OFF
            1: ALIGN
            2: NAV
            3: ATT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunPSEU">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_ServiceInterphoneSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_DomeWhiteSw">
            <summary>
            0: DIM
            1: OFF
            2: BRIGHT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_EECSwitch">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_annunREVERSER">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_annunENGINE_CONTROL">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_annunALTN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.OXY_Needle">
            <summary>
            Position 0...240
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.OXY_SwNormal">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.OXY_annunPASS_OXY_ON">
            <summary>
            Boolean
            true: NORMAL
            false: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GEAR_annunOvhdLEFT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GEAR_annunOvhdNOSE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GEAR_annunOvhdRIGHT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FLTREC_SwNormal">
            <summary>
            Boolean
            true: NORMAL
            false: TEST
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FLTREC_annunOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_FltControl_Sw">
            <summary>
            Array of 2 Offsets
            0: STBY/RUD
            1: OFF
            2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_Spoiler_Sw">
            <summary>
            Array of 2 Offsets
            Boolean
            true: ON
            false: OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_YawDamper_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_AltnFlaps_Sw_ARM">
            <summary>
            Boolean
            true: ARM
            false: OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_AltnFlaps_Control_Sw">
            <summary>
            0: UP 1: OFF 2:
            DOWN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunFC_LOW_PRESSURE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunYAW_DAMPER">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunLOW_QUANTITY">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunLOW_PRESSURE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunLOW_STBY_RUD_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunFEEL_DIFF_PRESS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunSPEED_TRIM_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunMACH_TRIM_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FCTL_annunAUTO_SLAT_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.NAVDIS_VHFNavSelector">
            <summary>
            0: BOTH ON 1
            1: NORMAL
            2: BOTH ON 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.NAVDIS_IRSSelector">
            <summary>
            0: BOTH ON L
            1: NORMAL
            2: BOTH ON R
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.NAVDIS_FMCSelector">
            <summary>
            0: BOTH ON L
            1: NORMAL
            2: BOTH ON R
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.NAVDIS_SourceSelector">
            <summary>
            0: ALL ON 1
            1: AUTO
            2: ALL ON 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.NAVDIS_ControlPaneSelector">
            <summary>
            0: BOTH ON 1
            1: NORMAL
            2: BOTH ON 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_FuelTempNeedle">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_CrossFeedSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_PumpFwdSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_PumpAftSw">
            <summary>
            Array of 2 Offsets
            Boolean
            left aft / right aft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_PumpCtrSw">
            <summary>
            Array of 2 Offsets
            Boolean
            ctr left / ctr right
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunENG_VALVE_CLOSED">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunSPAR_VALVE_CLOSED">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunFILTER_BYPASS">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunXFEED_VALVE_OPEN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunLOWPRESS_Fwd">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunLOWPRESS_Aft">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_annunLOWPRESS_Ctr">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunBAT_DISCHARGE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunTR_UNIT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunELEC">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_DCMeterSelector">
            <summary>
            0: STBY PWR
            1: BAT BUS
            ...
            7: TEST
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_ACMeterSelector">
            <summary>
            0: STBY PWR
            1: GND PWR
            ...
            6: TEST
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_BatSelector">
            <summary>
            0: OFF
            1: BAT
            2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_CabUtilSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_IFEPassSeatSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunDRIVE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunSTANDBY_POWER_OFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_IDGDisconnectSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_StandbyPowerSelector">
            <summary>
            0: BAT 1: OFF 2: AUTO
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunGRD_POWER_AVAILABLE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_GrdPwrSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_BusTransSw_AUTO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_GenSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_APUGenSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunTRANSFER_BUS_OFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunSOURCE_OFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunGEN_BUS_OFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_annunAPU_GEN_OFF_BUS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_EGTNeedle">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_annunMAINT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_annunLOW_OIL_PRESSURE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_annunFAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_annunOVERSPEED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.OH_WiperLSelector">
            <summary>
            0: PARK 1: INT
            2: LOW 3:HIGH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.OH_WiperRSelector">
            <summary>
            0: PARK 1: INT
            2: LOW 3:HIGH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_CircuitBreakerKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_OvereadPanelKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_EquipCoolingSupplyNORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_EquipCoolingExhaustNORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunEquipCoolingSupplyOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunEquipCoolingExhaustOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_annunEmerNOT_ARMED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_EmerExitSelector">
            <summary>
            0: OFF 1: ARMED 2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_NoSmokingSelector">
            <summary>
            0: OFF 1: AUTO 2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_FastenBeltsSelector">
            <summary>
            0: OFF 1: AUTO 2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_annunCALL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_annunPA_IN_USE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunOVERHEAT">
            <summary>
            Array of 4 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunON">
            <summary>
            Array of 4 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_WindowHeatSw">
            <summary>
            Array of 4 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunCAPT_PITOT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunL_ELEV_PITOT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunL_ALPHA_VANE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunL_TEMP_PROBE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunFO_PITOT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunR_ELEV_PITOT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunR_ALPHA_VANE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunAUX_PITOT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_TestProbeHeatSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunVALVE_OPEN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunCOWL_ANTI_ICE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_annunCOWL_VALVE_OPEN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_WingAntiIceSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_EngAntiIceSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HYD_annunLOW_PRESS_eng">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HYD_annunLOW_PRESS_elec">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HYD_annunOVERHEAT_elec">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HYD_PumpSw_eng">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HYD_PumpSw_elec">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_TempSourceSelector">
            <summary>
            Positions 0..6
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_TrimAirSwitch">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunZoneTemp">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunDualBleed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunRamDoorL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunRamDoorR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_RecircFanSwitch">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_PackSwitch">
            <summary>
            Array of 2 Offsets
            0=OFF 1=AUTO 2=HIGH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_BleedAirSwitch">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_APUBleedAirSwitch">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_IsolationValveSwitch">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunPackTripOff">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunWingBodyOverheat">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunBleedTripOff">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_FltAltWindow">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_LandAltWindow">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_OutflowValveSwitch">
            <summary>
            0=CLOSE
            1=NEUTRAL
            2=OPEN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_PressurizationModeSelector">
            <summary>
            0=AUTO 1=ALTN
            2=MAN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_LandingLtRetractableSw">
            <summary>
            Array of 2 Offsets
            0: RETRACT
            1: EXTEND
            2: ON
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_LandingLtFixedSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_RunwayTurnoffSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_TaxiSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.APU_Selector">
            <summary>
            0: OFF 1: ON 2: START
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_StartSelector">
            <summary>
            Array of 2 Offsets
            0: GRD
            1: OFF
            2: CONT
            3: FLT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_IgnitionSelector">
            <summary>
            0: IGN L 1: BOTH 2: IGN
            R
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_LogoSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_PositionSw">
            <summary>
            0: STEADY
            1: OFF
            2: STROBE and STEADY
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_AntiCollisionSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_WingSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_WheelWellSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunFIRE_WARN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunMASTER_CAUTION">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunFLT_CONT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunIRS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunFUEL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunELEC">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunAPU">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunOVHT_DET">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunANTI_ICE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunHYD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunDOORS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunENG">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunOVERHEAD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WARN_annunAIR_COND">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_MinsSelBARO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_BaroSelHPA">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_VORADFSel1">
            <summary>
            Array of 2 Offsets
            0: VOR 1: OFF 2: ADF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_VORADFSel2">
            <summary>
            Array of 2 Offsets
            0: VOR 1: OFF 2: ADF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_ModeSel">
            <summary>
            Array of 2 Offsets
            0: APP
            1: VOR
            2: MAP
            3: PLAN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.EFIS_RangeSel">
            <summary>
            Array of 2 Offsets
            0: 5 ... 7: 640
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_Course">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_IASMach">
            <summary>
            Mach if less than 10.0
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_IASBlank">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_IASOverspeedFlash">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_IASUnderspeedFlash">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_Heading">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_Altitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_VertSpeed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_VertSpeedBlank">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_FDSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_ATArmSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_BankLimitSel">
            <summary>
            0: 10 ... 4: 30
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_DisengageBar">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunFD">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunATArm">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunN1">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunSPEED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunVNAV">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunLVL_CHG">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunHDG_SEL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunLNAV">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunVOR_LOC">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunAPP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunALT_HOLD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunVS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunCMD_A">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunCWS_A">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunCMD_B">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_annunCWS_B">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_NoseWheelSteeringSwNORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunBELOW_GS">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_MainPanelDUSel">
            <summary>
            Array of 2 Offsets
            0: OUTBD PFD
            ...
            4 MFD for Capt
            Reverse sequence for FO
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_LowerDUSel">
            <summary>
            Array of 2 Offsets
            0: ENG PRI
            ..
            2 ND for Capt
            Reverse sequence for FO
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunAP">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunAT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunFMC">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_DisengageTestSelector">
            <summary>
            Array of 2 Offsets
            0: 1 1: OFF 2: 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunSPEEDBRAKE_ARMED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunSPEEDBRAKE_DO_NOT_ARM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunSPEEDBRAKE_EXTENDED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunSTAB_OUT_OF_TRIM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_LightsSelector">
            <summary>
            0: TEST 1: BRT 2: DIM
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_RMISelector1_VOR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_RMISelector2_VOR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_N1SetSelector">
            <summary>
            0: 2 1: 1
            2: AUTO 3: BOTH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_SpdRefSelector">
            <summary>
            0: SET 1: AUTO
            2: V1 3: VR
            4: WT 5: VREF
            6: Bug
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_FuelFlowSelector">
            <summary>
            0: RESET 1: RATE
            2: USED
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_AutobrakeSelector">
            <summary>
            0: RTO 1: OFF ... 5: MAX
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunANTI_SKID_INOP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunAUTO_BRAKE_DISARM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunLE_FLAPS_TRANSIT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunLE_FLAPS_EXT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_TEFlapsNeedle">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunGEAR_transit">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunGEAR_locked">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_GearLever">
            <summary>
            0: UP 1: OFF 2: DOWN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_BrakePressNeedle">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_AIII">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_NO_AIII">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_FLARE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_RO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_RO_CTN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_RO_ARM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_TO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_TO_CTN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_APCH">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_TO_WARN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_Bar">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annun_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_MainPanelKnob">
            <summary>
            Array of 2 Offsets
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_BackgroundKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_AFDSFloodKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_OutbdDUBrtKnob">
            <summary>
            Array of 2 Offsets
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_InbdDUBrtKnob">
            <summary>
            Array of 2 Offsets
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_InbdDUMapBrtKnob">
            <summary>
            Array of 2 Offsets
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_UpperDUBrtKnob">
            <summary>
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_LowerDUBrtKnob">
            <summary>
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_LowerDUMapBrtKnob">
            <summary>
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GPWS_annunINOP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GPWS_FlapInhibitSw_NORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GPWS_GearInhibitSw_NORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GPWS_TerrInhibitSw_NORM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_annunEXEC">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_annunCALL">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_annunFAIL">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_annunMSG">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_annunOFST">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CDU_BrtKnob">
            <summary>
            Array of 2 Offsets
            Position 0...127
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.TRIM_StabTrimMainElecSw_NORMAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.TRIM_StabTrimAutoPilotSw_NORMAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.PED_annunParkingBrake">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_OvhtDetSw">
            <summary>
            Array of 2 Offsets
            0: A 1: NORMAL 2: B
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunENG_OVERHEAT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_DetTestSw">
            <summary>
            0: FAULT/INOP
            1: neutral
            2: OVHT/FIRE
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_HandlePos">
            <summary>
            Array of 3 Offsets
            0: In
            1: Blocked
            2: Out
            3: Turned Left
            4: Turned right
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_HandleIlluminated">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunWHEEL_WELL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunFAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunAPU_DET_INOP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunAPU_BOTTLE_DISCHARGE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunBOTTLE_DISCHARGE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_ExtinguisherTestSw">
            <summary>
            0: 1 1: neutral 2: 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FIRE_annunExtinguisherTest">
            <summary>
            Array of 3 Offsets
            Left
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_annunExtTest">
            <summary>
            Array of 2 Offsets
            Fwd
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_DetSelect">
            <summary>
            Array of 2 Offsets
            0: A 1: NORM 2: B
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_ArmedSw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_annunFWD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_annunAFT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_annunDETECTOR_FAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CARGO_annunDISCH">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annunRWY">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annunGS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annunFAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.HGS_annunCLR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.XPDR_XpndrSelector_2">
            <summary>
            false: 1 true: 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.XPDR_AltSourceSel_2">
            <summary>
            false: 1 true: 2
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.XPDR_ModeSel">
            <summary>
            0: STBY
            1: ALT RPTG OFF
            ...
            4: TA/RA
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.XPDR_annunFAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_PedFloodKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.LTS_PedPanelKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.TRIM_StabTrimSw_NORMAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.PED_annunLOCK_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.PED_annunAUTO_UNLK">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.PED_FltDkDoorSel">
            <summary>
            0: UNLKD
            1 AUTO pushed in
            2: AUTO
            3: DENY
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ENG_StartValve">
            <summary>
            Array of 2 Offsets
            true: valve open
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_DuctPress">
            <summary>
            Array of 2 Offsets
            PSI
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_Attend_PressCount">
            <summary>
            Iincremented with each
            button press
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_GrdCall_PressCount">
            <summary>
            Iincremented with each
            button press
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_SelectedMic">
            <summary>
            Array of 3 Offsets
            Array: 0=capt
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_QtyCenter">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_QtyLeft">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_QtyRight">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_aligned">
            <summary>
            Boolean: At least one IRU
            is aligned
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AircraftMode">
            <summary>
            1: -600
            2: -700
            3: -700WL
            4: -800
            5: -800WL
            6: -900
            7: -900ER
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.WeightInKg">
            <summary>
            Boolean:
            false: LBS true: KG
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GPWS_V1CallEnabled">
            <summary>
            GPWS V1 callout option
            enabled
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.GroundConnAvailable">
            <summary>
            can connect/disconnect
            ground air/electrics
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_TakeoffFlaps">
            <summary>
            degrees
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_V1">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_VR">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_V2">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_LandingFlaps">
            <summary>
            degrees
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_LandingVREF">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_CruiseAlt">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_LandingAltitude">
            <summary>
            ft; -32767 if not available
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_TransitionAlt">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_TransitionLevel">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_PerfInputComplete">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_DistanceToTOD">
            <summary>
            nm; 0.0 if passed
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_DistanceToDest">
            <summary>
            nm
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FMC_flightNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.COMM_ReceiverSwitches">
            <summary>
            Array of 3 Offsets
            Bit flags for selector
            receivers (see
            ACP_SEL_RECV_VHF1
            etc)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunAP_Amber">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunAT_Amber">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ICE_WindowHeatTestSw">
            <summary>
            0: OVHT
            1: Neutral
            2: PWR TEST
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunFWD_ENTRY">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunFWD_SERVICE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunAIRSTAIR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunLEFT_FWD_OVERWING">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunRIGHT_FWD_OVERWING">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunFWD_CARGO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunEQUIP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunLEFT_AFT_OVERWING">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunRIGHT_AFT_OVERWING">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunAFT_CARGO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunAFT_ENTRY">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.DOOR_annunAFT_SERVICE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunAUTO_FAIL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunOFFSCHED_DESCENT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunALTN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_annunMANUAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_CabinAltNeedle">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_CabinDPNeedle">
            <summary>
            PSI
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_CabinVSNeedle">
            <summary>
            Ft/min
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_CabinValveNeedle">
            <summary>
            0 closed ... 1 open
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_TemperatureNeedle">
            <summary>
            Degrees C
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_DuctPressNeedle">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_MeterDisplayTop">
            <summary>
            Top line: 3 groups of 4
            digits (or symbols) +
            terminating zero
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_MeterDisplayBottom">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_DisplayLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_DisplayRight">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.IRS_DisplayShowsDots">
            <summary>
            True if the degrees and
            decimal dot symbols are
            shown on the IRS display
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ADF_StandbyFrequency">
            <summary>
            Standby frequency multiplied by 10
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AFS_AutothrottleServosConnected">
            <summary>
            True if the autothrottle system is driving the thrust levers
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AFS_ControlsPitch">
            <summary>
            The autoflight system is actively controlling pitch
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AFS_ControlsRoll">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.ELEC_BusPowered">
            <summary>
            Array of 16 Offsets
            True if the corresponding bus is powered:
            DC HOT BATT: 0
            DC HOT BATT SWITCHED:1
            DC BATT BUS: 2
            DC STANDBY BUS: 3
            DC BUS 1: 4
            DC BUS 2: 5
            DC GROUND SVC: 6
            AC 
            RANSFER 1: 7
            AC TRANSFER 2: 8
            AC GROUND SVC 1: 9
            AC GROUND SVC 2: 10
            AC MAIN 1: 11
            AC MAIN 2: 12
            AC GALLEY 1: 13
            AC GALLEY 2: 14
            AC STANDBY: 15
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MCP_indication_powered">
            <summary>
            true when the MCP is powered and the MCP windows are indicating
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_DisplayFltAlt">
            <summary>
            Pressurization system FLT ALT window
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.AIR_DisplayLandAlt">
            <summary>
            Pressurization system LAND ALT window
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunCABIN_ALTITUDE">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.MAIN_annunTAKEOFF_CONFIG">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.CVR_annunTEST">
            <summary>
            CVR TEST indicator
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_AuxFwd">
            <summary>
            Array of 2 Offsets
            aux fwd A and aux fwd B
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_AuxAft">
            <summary>
            Array of 2 Offsets
            aux aft A and aux aft B
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_FWDBleed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_AFTBleed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_737_NGX_Offsets.FUEL_GNDXfr">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_737_NGX_Offsets.#ctor">
            <summary>
            Creates a new instance of the PMDG Offsets Class.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_737_NGX_Offsets.Finalize">
            <summary>
            Disposes the offsets created by this class
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_737_NGX_Offsets.RefreshData">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_737_NGX_Offsets.RefreshData(System.Byte)">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
        </member>
        <member name="T:FSUIPC.PMDG_747QOTSII_Control">
            <summary>
            Controls for the 777 Aircraft from PMDG.<para>Please refer to the PMDG 777 SDK Documentation for more info.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.PMDG_747QOTSII_Offsets">
            <summary>
            A helper class containg all the known offsets for the PMDG 747 Queen of the Skies II Aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_GenFieldReset">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_APUFieldReset">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_SplitSystemBreaker">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunGen_FIELD_OFF">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunAPU_FIELD_OFF">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunSplitSystemBreaker_OPEN">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_CWTScavengePump_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_Reserve23Xfer_Sw_OPEN">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_EECPower_Sw_TEST">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_WingHydValve_Sw_SHUT_OFF">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_TailHydValve_Sw_SHUT_OFF">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_annunTailHydVALVE_CLOSED">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_annunWingHydVALVE_CLOSED">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_LowerLobeFlowRate_Selector">
            <summary>
            Freighter only
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_LowerLobeAftCargoHt_Selector">
            <summary>
            748 only
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.IRS_Selector">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.IRS_annunON_BAT">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunUtilOFF">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_Battery_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_APU_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_StandbyPowerSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_APUGen_Sw_ON">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_UtilSw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_BusTie_Sw_AUTO">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunBusTieISLN">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_Gen_Sw_ON">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_IDGDiscSw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_ExtPwrSw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunExtPowr_ON">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunExtPowr_AVAI">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunAPUGen_ON">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunAPUGen_AVAIL">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunGenOFF">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ELEC_annunIDGDiscDRIVE">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_EnginePump_Sw_ON">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_DemandPump_Selector">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_annunSYS_FAULT">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_annunEnginePumpPRESS">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_annunDemandPumpPRESS">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_RamAirTurbineSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_annunRamAirTurbinePRESS">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.HYD_annunRamAirTurbineUNLKD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_EngineHandle">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_EngineHandleUnlock_Sw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_annunENG_BTL_DISCH">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_CargoFire_Sw_Arm">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_annunCargoFire">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_MainDeckFire_Sw_Arm">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_annunMainDeckFire">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_CargoFireDisch_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_annunCargoDISCH">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_FireOvhtTest_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_APUHandle">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_APUHandleUnlock_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FIRE_annunAPU_BTL_DISCH">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_EECMode_Sw_NORM">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_Start_Sw_Pulled">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_ConIginition_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_StbyIginition_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_AutoIginition_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_Autostart_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_Start_Light">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_annunALTN">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_CrossFeed_Sw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_MainPumpFwd_Sw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_MainPumpAft_Sw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_OvrdPumpFwd_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_OvrdPumpAft_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_PumpStab_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_PumpCtr_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_XferMain14_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_JettisonNozle_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_JettisonArm_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_FuelToRemain_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunXFEED_VALVE">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_MainFwd">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_MainAft">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_OvrdFwd">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_OvrdAft">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_Stab">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunPRESS_Ctr">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_annunJettisonNozleVALVE">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_WingAntiIceSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_EngAntiIceSw">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_annunEngAntiIceVALVE">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_annunWingAntiIceVALVE">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_WindowHeat_Sw_ON">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ICE_annunWindowHeatINOP">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.APU_annunLOW_OIL_PRESSURE">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.APU_annunFAULT">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.APU_annunOVERSPEED">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_DomeLightKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_CktBkrOverheadKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_GlareshieldPNLlKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_GlareshieldFLOODKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_AisleStandPNLKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_AisleStandFLOODKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Storm_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_IndLightsTestSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LandingLights_Sw_ON">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Beacon_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_NAV_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Logo_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Wing_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_RunwayTurnoff_Sw_ON">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Taxi_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_Strobe_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_LdgAlt_PushOn_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_LdgAlt_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_OutflowValveMan_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_OutflowValveNeedle">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_OutflowValves_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_CabinAltAuto_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_SmokeEvacHandle_Pulled">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_Pack_Selector">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_TrimAir_Sw_On">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_RecircFan_Sw_On">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_TempSelector">
            <summary>
            Array of 6 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_PackReset_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_EquipCooling_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_HighFlow_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_Gasper_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_FltDeckFan_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_AftCargoHeat_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_ZoneReset_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_AltnVent_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_AltnVent_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunPackOFF">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunPack_SYS_FAIL">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunZone_SYS_FAIL">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunAftCragoHeat_TEMP">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_EngBleedAir_Sw_ON">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_APUBleedAir_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_IsolationValve_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunEngBleedAirOFF">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunAPUBleedAirVALVE">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annunIsolationVALVE">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_annun_SYS_FAULT">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_EmerLightsSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_CAPTAudio_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_OBSAudio_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_ServiceInterphoneSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_CargoCabinInterphoneSw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.OXY_Oxygen_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_YawDamper_Sw">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_annunYawDamperINOP">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.WARN_Reset_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.WARN_annunMASTER_WARNING">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.WARN_annunMASTER_CAUTION">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_MinsSelBARO">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_BaroSelHPA">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_VORADFSel1">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_VORADFSel2">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_ModeSel">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_RangeSel">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_MinsKnob">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_BaroKnob">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_MinsRST_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_BaroSTD_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_ModeCTR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_RangeTFC_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_WXR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_STA_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_WPT_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_ARPT_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_DATA_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_POS_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_TERR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_L_INBD_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_R_INBD_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_LWR_CTR_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_ENG_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_STAT_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_ELEC_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_HYD_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_FUEL_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_ECS_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_DRS_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_GEAR_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_FCTL_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_INFO_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_CHKL_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_NAV_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_CANC_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_RCL_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_annunL_INBD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_annunR_INBD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_annunLWR_CTR">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_IASMach">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_IASBlank">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Heading">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Altitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_VertSpeed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_VertSpeedBlank">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_FD_Sw_On">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_ATArm_Sw_On">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_BankLimitSel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_DisengageBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Speed_Dial">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Heading_Dial">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Altitude_Dial">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_VS_Wheel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_AP_Sw_Pushed">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_THR_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_SPD_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_LNAV_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_VNAV_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_FLCH_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_HDG_HOLD_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_VS_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_ALT_HOLD_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_LOC_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_APP_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Speeed_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Heading_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_Altitude_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_IAS_MACH_Toggle_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunAP">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunTHR">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunSPD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunLNAV">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunVNAV">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunFLCH">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunHDG_HOLD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunVS">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunALT_HOLD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunLOC">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.MCP_annunAPP">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_InbdDspl_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_LwrDspl_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_InbdDspl_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DSP_LwrDspl_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_FMC_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_EIU_C_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_UpperDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LowerDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EICAS_EventRcd_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EFIS_HdgRef_Sw_Norm">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_AltnFlaps_Sw_ARM">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_AltnFlaps_Control_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GEAR_Lever">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GEAR_LockOvrd_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GEAR_AltnGearNoseBody_Sw_DPushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GEAR_AltnGearWing_Sw_DPushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_GSInhibit_Sw">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_annunGND_PROX_top">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_annunGND_PROX_bottom">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_FlapInhibitSw_OVRD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_GearInhibitSw_OVRD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_TerrInhibitSw_OVRD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_Baro_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_RST_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_Minus_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_Plus_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_APP_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISFD_HP_IN_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_FltDir_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_Nav_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_EIU_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_IRS_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_AirData_L_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.BRAKES_BrakePressNeedle">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.BRAKES_annunBRAKE_SOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_FltDir_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_Nav_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_EIU_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_IRS_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ISP_AirData_R_Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LeftFwdPanelPNLKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LeftFwdPanelFLOODKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LeftOutbdDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_LeftInbdDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_RightFwdPanelPNLKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_RightFwdPanelFLOODKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_RightInbdDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.LTS_RightOutbdDsplBRIGHTNESSKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_ShoulderHeaterKnob">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_FootHeaterSelector">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_WShldAirSelector">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CHR_Chr_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CHR_Date_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CHR_Set_Selector">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CHR_ET_Selector">
            <summary>
            Array of 2 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_StabCutOutSw_2_NORMAL">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_StabCutOutSw_3_NORMAL">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_AltnPitch_Switches">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_Speedbrake_Lever">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_Flaps_Lever">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_FuelControl_Sw_RUN">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.BRAKES_ParkingBrakeLeverOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_annunEXEC">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_annunDSPY">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_annunFAIL">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_annunMSG">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_annunOFST">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.CDU_BrtKnob">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_SelectedMic">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_ReceiverSwitches">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_SelectedRadio">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_RadioTransfer_Sw_Pushed">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_RadioPanelOff">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.COMM_annunAM">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.XPDR_XpndrSelector_R">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.XPDR_ModeSel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.XPDR_Ident_Sw_Pushed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.BRAKES_AutobrakeSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_AileronTrim_Switches">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FCTL_RudderTrim_Knob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.SIGNS_NoSmokingSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.SIGNS_SeatBeltsSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EVAC_Command_Sw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EVAC_PressToTest_Sw_Pressed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EVAC_HornSutOff_Sw_Pulled">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.EVAC_LightIlluminated">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.DOOR_state">
            <summary>
            Array of 20 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.ENG_StartValve">
            <summary>
            Array of 4 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AIR_DuctPress">
            <summary>
            Array of 3 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FUEL_TankQty">
            <summary>
            Array of 9 Offsets
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.IRS_aligned">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.AircraftModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.WeightInKg">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GPWS_V1CallEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.GroundConnAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_TakeoffFlaps">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_V1">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_VR">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_V2">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_LandingFlaps">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_LandingVREF">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_CruiseAlt">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_LandingAltitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_TransitionAlt">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_TransitionLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_PerfInputComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_DistanceToTOD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_DistanceToDest">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_747QOTSII_Offsets.FMC_flightNumber">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_747QOTSII_Offsets.#ctor">
            <summary>
            Creates a new instance of the PMDG Offsets Class.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_747QOTSII_Offsets.Finalize">
            <summary>
            Disposes the offsets created by this class
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_747QOTSII_Offsets.RefreshData">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_747QOTSII_Offsets.RefreshData(System.Byte)">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
        </member>
        <member name="T:FSUIPC.PMDG_777X_Control">
            <summary>
            Controls for the 777 Aircraft from PMDG.<para>Please refer to the PMDG 777 SDK Documentation for more info.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.PMDG_777X_Offsets">
            <summary>
            A helper class containg all the known offsets for the PMDG 747 Queen of the Skies II Aircraft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ICE_WindowHeatBackUp_Sw_OFF">
            <summary>
            Array of 2 Offsets
            Boolean
            Backup window heat
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_StandbyPowerSw">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_WingHydValve_Sw_SHUT_OFF">
            <summary>
            Array of 3 Offsets
            Booleans
            Left/Right/Centre
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_TailHydValve_Sw_SHUT_OFF">
            <summary>
            Array of 3 Offsets
            Booleans
            Left/Right/Centre
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_annunTailHydVALVE_CLOSED">
            <summary>
            Array of 3 Offsets
            Booleans
            Left/Right/Centre
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_annunWingHydVALVE_CLOSED">
            <summary>
            Array of 3 Offsets
            Booleans
            Left/Right/Centre
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.APU_Power_Sw_TEST">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_EECPower_Sw_TEST">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_TowingPower_Sw_BATT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunTowingPowerON_BATT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CargoTemp_Selector">
            <summary>
            Array of 2 Offsets
            aft / bulk
            0=OFF 1=LOW
            2=HIGH AFT/BULK
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ADIRU_Sw_On">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ADIRU_annunOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ADIRU_annunON_BAT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_ThrustAsymComp_Sw_AUTO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_annunThrustAsymCompOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_CabUtilSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunCabUtilOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_IFEPassSeatsSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunIFEPassSeatsOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_Battery_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_APUGen_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_APU_Selector">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunAPU_FAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_BusTie_Sw_AUTO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunBusTieISLN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_ExtPwrSw">
            <summary>
            Array of 2 Offsets
            primary/secondary
            MOMENTARY SWITCHES
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunExtPowr_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunExtPowr_AVAIL">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_Gen_Sw_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunGenOFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_BackupGen_Sw_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunBackupGenOFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_IDGDiscSw">
            <summary>
            Array of 2 Offsets
            Boolean
            MOMENTARY SWITCHES
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunIDGDiscDRIVE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WIPERS_Selector">
            <summary>
            Array of 2 Offsets
            left/right
            0: OFF 1: INT
            2: LOW 3: HIGH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_EmerLightsSelector">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_ServiceInterphoneSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.OXY_PassOxygen_Sw_On">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.OXY_annunPassOxygenON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ICE_WindowHeat_Sw_ON">
            <summary>
            Array of 4 Offsets
            L-Side/L-Fwd/
            R-Fwd/R-Side
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ICE_annunWindowHeatINOP">
            <summary>
            Array of 4 Offsets
            L-Side/L-Fwd/
            R-Fwd/R-Side
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_RamAirTurbineSw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunRamAirTurbinePRESS">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunRamAirTurbineUNLKD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_PrimaryEngPump_Sw_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_PrimaryElecPump_Sw_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_DemandElecPump_Selector">
            <summary>
            Array of 2 Offsets
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_DemandAirPump_Selector">
            <summary>
            Array of 2 Offsets
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunPrimaryEngPumpFAULT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunPrimaryElecPumpFAULT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunDemandElecPumpFAULT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.HYD_annunDemandAirPumpFAULT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.SIGNS_NoSmokingSelector">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.SIGNS_SeatBeltsSelector">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_DomeLightKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_CircuitBreakerKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_OvereadPanelKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_GlareshieldPNLlKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_GlareshieldFLOODKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Storm_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_MasterBright_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_MasterBrigntKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_IndLightsTestSw">
            <summary>
            0 TEST
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LandingLights_Sw_ON">
            <summary>
            Array of 3 Offsets
            Booleans
            Left/Right/Nose
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Beacon_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_NAV_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Logo_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Wing_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_RunwayTurnoff_Sw_ON">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Taxi_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_Strobe_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_CargoFire_Sw_Arm">
            <summary>
            Array of 2 Offsets
            FWD/AFT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunCargoFire">
            <summary>
            Array of 2 Offsets
            FWD/AFT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_CargoFireDisch_Sw">
            <summary>
            Boolean
            MOMENTARY SWITCH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunCargoDISCH">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_FireOvhtTest_Sw">
            <summary>
            Boolean
            MOMENTARY SWITCH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_APUHandle">
            <summary>
            0: IN (NORMAL)
            1: PULLED OUT
            2: TURNED LEFT
            3: TURNED RIGHT
            (2 and 3 are momnentary
            positions)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_APUHandleUnlock_Sw">
            <summary>
            Boolean
            MOMENTARY SWITCH
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunAPU_BTL_DISCH">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_EECMode_Sw_NORM">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_Start_Selector">
            <summary>
            Array of 2 Offsets
            0: START 1: NORM
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_Autostart_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_annunALTN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_annunAutostartOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_CrossFeedFwd_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_CrossFeedAft_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_PumpFwd_Sw">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_PumpAft_Sw">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_PumpCtr_Sw">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_JettisonNozle_Sw">
            <summary>
            Array of 2 Offsets
            Booleans
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_JettisonArm_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_FuelToRemain_Sw_Pulled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_FuelToRemain_Selector">
            <summary>
            0: DECR
            1: Neutral
            2: INCR
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunFwdXFEED_VALVE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunAftXFEED_VALVE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunLOWPRESS_Fwd">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunLOWPRESS_Aft">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunLOWPRESS_Ctr">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunJettisonNozleVALVE">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_annunArmFAULT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ICE_WingAntiIceSw">
            <summary>
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ICE_EngAntiIceSw">
            <summary>
            Array of 2 Offsets
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_Pack_Sw_AUTO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_TrimAir_Sw_On">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_RecircFan_Sw_On">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_TempSelector">
            <summary>
            Array of 2 Offsets
            flt deck / cabin
            0: C ...
            60: W ...
            70: MAN
            (flt deck only)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_AirCondReset_Sw_Pushed">
            <summary>
            Boolean
            MOMENTARY
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_EquipCooling_Sw_AUTO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_Gasper_Sw_On">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunPackOFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunTrimAirFAULT">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunEquipCoolingOVRD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_EngBleedAir_Sw_AUTO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_APUBleedAir_Sw_AUTO">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_IsolationValve_Sw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CtrIsolationValve_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunEngBleedAirOFF">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunAPUBleedAirOFF">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunIsolationValveCLOSED">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunCtrIsolationValveCLOSED">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_OutflowValve_Sw_AUTO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_OutflowValveManual_Selector">
            <summary>
            Array of 2 Offsets
            fwd / aft
            0: OPEN
            1: Neutral
            2: CLOSE
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_LdgAlt_Sw_Pulled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_LdgAlt_Selector">
            <summary>
            0: DECR
            1: Neutral
            2: INCR
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunOutflowValve_MAN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GEAR_Lever">
            <summary>
            0: UP
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GEAR_LockOvrd_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GEAR_AltnGear_Sw_DOWN">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_FlapInhibitSw_OVRD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_GearInhibitSw_OVRD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_TerrInhibitSw_OVRD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_GSInhibit_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_annunGND_PROX_top">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_annunGND_PROX_bottom">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.BRAKES_AutobrakeSelector">
            <summary>
            0: RTO
            1: OFF
            2: DISARM
            3: 1 ...
            5: MAX AUTO
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_Baro_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_RST_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_Minus_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_Plus_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_APP_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISFD_HP_IN_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_Nav_L_Sw_CDU">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_DsplCtrl_L_Sw_Altn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_AirDataAtt_L_Sw_Altn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_InbdDspl_L_Selector">
            <summary>
            0: ND
            1: NAV
            2: MFD
            3: EICAS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_HdgRef_Sw_Norm">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_annunHdgRefTRUE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.BRAKES_BrakePressNeedle">
            <summary>
            0...100
            (corresponds to
            0...4000 PSI)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.BRAKES_annunBRAKE_SOURCE">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_Nav_R_Sw_CDU">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_DsplCtrl_R_Sw_Altn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_AirDataAtt_R_Sw_Altn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_FMC_Selector">
            <summary>
            0: LEFT
            1: AUTO
            2: RIGHT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_InbdDspl_R_Selector">
            <summary>
            0: EICAS
            1: MFD
            2: ND
            3: PFD
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_ShoulderHeaterKnob">
            <summary>
            Array of 2 Offsets
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_FootHeaterSelector">
            <summary>
            Array of 2 Offsets
            0 OFF
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LeftFwdPanelPNLKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LeftFwdPanelFLOODKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LeftOutbdDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LeftInbdDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_RightFwdPanelPNLKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_RightFwdPanelFLOODKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_RightInbdDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_RightOutbdDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CHR_Chr_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CHR_TimeDate_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CHR_TimeDate_Selector">
            <summary>
            Array of 2 Offsets
            0: UTC 1: MAN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CHR_Set_Selector">
            <summary>
            Array of 2 Offsets
            0: RUN 1: HLDY
            2: MM 3: HD
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CHR_ET_Selector">
            <summary>
            Array of 2 Offsets
            0: RESET (MOMENTARY
            spring-loaded to HLD)
            1: HLD
            2: RUN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_MinsSelBARO">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_BaroSelHPA">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_VORADFSel1">
            <summary>
            Array of 2 Offsets
            0 VOR
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_VORADFSel2">
            <summary>
            Array of 2 Offsets
            0 VOR
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_ModeSel">
            <summary>
            Array of 2 Offsets
            0: APP 1: VOR
            2: MAP 3: PLAN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_RangeSel">
            <summary>
            Array of 2 Offsets
            0: 10 ... 6: 640
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_MinsKnob">
            <summary>
            Array of 2 Offsets
            0..99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_BaroKnob">
            <summary>
            Array of 2 Offsets
            0..99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_MinsRST_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_BaroSTD_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_ModeCTR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_RangeTFC_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_WXR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_STA_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_WPT_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_ARPT_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_DATA_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_POS_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EFIS_TERR_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_IASMach">
            <summary>
            Mach if less than 10.0
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_IASBlan">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Heading">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Altitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VertSpeed">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_FPA">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VertSpeedBlank">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_FD_Sw_On">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_ATArm_Sw_On">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_BankLimitSel">
            <summary>
            0: AUTO
            1: 5
            2: 10 ...
            5: 25
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_AltIncrSel">
            <summary>
            Boolean
            false: AUTO
            true: 1000
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_DisengageBar">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Speed_Dial">
            <summary>
            0 ... 99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Heading_Dial">
            <summary>
            0 ... 99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Altitude_Dial">
            <summary>
            0 ... 99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VS_Wheel">
            <summary>
            0 ... 99
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_HDGDial_Mode">
            <summary>
            Boolean
            0: Dial shows HDG
            1: Dial shows TRK
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VSDial_Mode">
            <summary>
            Boolean
            0: Dial shows VS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_AP_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_CLB_CON_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_AT_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_LNAV_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VNAV_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_FLCH_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_HDG_HOLD_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VS_FPA_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_ALT_HOLD_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_LOC_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_APP_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Speeed_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Heading_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_Altitude_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_IAS_MACH_Toggle_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_HDG_TRK_Toggle_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_VS_FPA_Toggle_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunAP">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunAT">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunLNAV">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunVNAV">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunFLCH">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunHDG_HOLD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunVS_FPA">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunALT_HOLD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunLOC">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.MCP_annunAPP">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_L_INBD_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_R_INBD_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_LWR_CTR_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_ENG_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_STAT_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_ELEC_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_HYD_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_FUEL_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_AIR_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_DOOR_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_GEAR_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_FCTL_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_CAM_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_CHKL_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_COMM_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_NAV_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_CANC_RCL_Sw">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_annunL_INBD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_annunR_INBD">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DSP_annunLWR_CTR">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WARN_Reset_Sw_Pushed">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WARN_annunMASTER_WARNING">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WARN_annunMASTER_CAUTION">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ISP_DsplCtrl_C_Sw_Altn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_UpperDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_LowerDsplBRIGHTNESSKnob">
            <summary>
            Position 0...150
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EICAS_EventRcd_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_annunEXEC">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_annunDSPY">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_annunFAIL">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_annunMSG">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_annunOFST">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.CDU_BrtKnob">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_AltnFlaps_Sw_ARM">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_AltnFlaps_Control_Sw">
            <summary>
            0 RET
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_StabCutOutSw_C_NORMAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_StabCutOutSw_R_NORMAL">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_AltnPitch_Lever">
            <summary>
            0: NOSE DOWN
            1: NEUTRAL
            2: NOSE UP
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_Speedbrake_Lever">
            <summary>
            Position 0...100
            0: DOWN
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_Flaps_Lever">
            <summary>
            0 UP
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_FuelControl_Sw_RUN">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.BRAKES_ParkingBrakeLeverOn">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_SelectedMic">
            <summary>
            Array of 3 Offsets
            0=capt
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_ReceiverSwitches">
            <summary>
            Array of 3 Offsets
            0=capt
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_OBSAudio_Selector">
            <summary>
            0 CAPT 1 NORMAL 2 F/O
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_SelectedRadio">
            <summary>
            Array of 3 Offsets
            0: VHFL 1: VHFC
            2: VHFL 3: HFL
            5: HFR (4 not
            used)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_RadioTransfer_Sw_Pushed">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_RadioPanelOff">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_annunAM">
            <summary>
            Array of 3 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.XPDR_XpndrSelector_R">
            <summary>
            true: R
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.XPDR_AltSourceSel_ALTN">
            <summary>
            true: ALTN
            false: NORM
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.XPDR_ModeSel">
            <summary>
            0 STBY
            1 ALT RPTG OFF
            2 XPNDR
            3 TA ONLY
            4 TA/RA
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.XPDR_Ident_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_EngineHandle">
            <summary>
            Array of 2 Offsets
            0: IN (NORMAL)
            1: PULLED OUT
            2: TURNED LEFT
            3: TURNED RIGHT
            (2 and 3 are momenentary)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_EngineHandleUnlock_Sw">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunENG_BTL_DISCH">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_AileronTrim_Switches">
            <summary>
            0: LEFT WING DOWN
            1: NEUTRAL
            2: RIGHT WING DOWN
            (both switches
            move together)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_RudderTrim_Knob">
            <summary>
            0: NOSE LEFT
            1: NEUTRAL
            2: NOSE RIGHT
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_RudderTrimCancel_Sw_Pushed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EVAC_Command_Sw_ON">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EVAC_PressToTest_Sw_Pressed">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EVAC_HornSutOff_Sw_Pulled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.EVAC_LightIlluminated">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_AisleStandPNLKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_AisleStandFLOODKnob">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.LTS_FloorLightsSw">
            <summary>
            DOOR STATES Possible values are
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.DOOR_state">
            <summary>
            Array of 16 Offsets
            0: Entry 1L
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ENG_StartValve">
            <summary>
            Array of 2 Offsets
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_DuctPress">
            <summary>
            Array of 2 Offsets
            PSI
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_QtyCenter">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_QtyLeft">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_QtyRight">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FUEL_QtyAux">
            <summary>
            LBS
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.IRS_aligned">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AircraftModel">
            <summary>
            1: -200
            2: -200ER
            3: -300
            4: -200LR
            5: 777F
            6: -300ER
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WeightInKg">
            <summary>
            True KG
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_V1CallEnabled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GroundConnAvailable">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_TakeoffFlaps">
            <summary>
            degrees
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_V1">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_VR">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_V2">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_LandingFlaps">
            <summary>
            degrees
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_LandingVREF">
            <summary>
            knots
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_CruiseAlt">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_LandingAltitude">
            <summary>
            ft  (-32767 if not set)
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_TransitionAlt">
            <summary>
            Ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_TransitionLevel">
            <summary>
            ft
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_PerfInputComplete">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_DistanceToTOD">
            <summary>
            nm
            0.0 if passed
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_DistanceToDest">
            <summary>
            nm
            negative if n/a
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FMC_flightNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_AltnVentSw_ON">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_annunAltnVentFAULT">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CargoTemp_MainDeckFwd_Sel">
            <summary>
            0 to 60 degrees C. 67=Heat High, 70=Heat Off, 73=Heat Low
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CargoTemp_MainDeckAft_Sel">
            <summary>
            0 to 60 degrees C. 67=Heat High, 70=Heat Off, 73=Heat Low
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CargoTemp_LowerFwd_Sel">
            <summary>
            0 to 60 degrees C. 67=Heat High, 70=Heat Off, 73=Heat Low
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_CargoTemp_LowerAft_Sel">
            <summary>
            0 to 60 degrees C. 67=Heat High, 70=Heat Off, 73=Heat Low
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunAPU_GEN_OFF">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.AIR_MainDeckFlowSw_NORM">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.ELEC_annunBattery_OFF">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_PrimFltComputersSw_AUTO">
            <summary>
            true=AUTO, false=DISC
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FCTL_annunPrimFltComputersDISC">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_EngineHandleIlluminated">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_APUHandleIlluminated">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_EngineHandleIsUnlocked">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_APUHandleIsUnlocked">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunMainDeckCargoFire">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.FIRE_annunCargoDEPR">
            <summary>
            DEPR light in DEPR/DISCH guarded switch
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.GPWS_RunwayOvrdSw_OVRD">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.COMM_ReceiverSwitches_NEW">
            <summary>
            Array: 0=capt, 1=F/O, 2=observer
            <para>Bit mask for selected receivers with bits indicating: 0=VHFL 1=VHFC 2=VHFR 3=FLT 4=CAB 5=PA 6=HFL 7=HFR 8=SAT1 9=SAT2 10=SPKR 11=VOR/ADF 12=APP</para> 
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.WheelChocksSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_777X_Offsets.APURunning">
            <summary>
            
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_777X_Offsets.#ctor">
            <summary>
            Creates a new instance of the PMDG Offsets Class.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_777X_Offsets.Finalize">
            <summary>
            Disposes the offsets created by this class
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_777X_Offsets.RefreshData">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_777X_Offsets.RefreshData(System.Byte)">
            <summary>
            Gets the latest PMDG data from FSUIPC.
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
        </member>
        <member name="T:FSUIPC.PMDG_NGX_CDU_COLOR">
            <summary>
            An enum representing the colour of a cell on the CDU
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.WHITE">
            <summary>
            White
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.CYAN">
            <summary>
            Cyan
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.GREEN">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.MAGENTA">
            <summary>
            Magenta
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.AMBER">
            <summary>
            Amber 
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_COLOR.RED">
            <summary>
            Red
            </summary>
        </member>
        <member name="T:FSUIPC.PMDG_NGX_CDU_FLAG">
            <summary>
            A set of flags giving info about a cell on the CDU
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_FLAG.SMALL_FONT">
            <summary>
            The symbol is shown in a smaller font than normal
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_FLAG.REVERSE">
            <summary>
            The symbol with the foreground and background colours reversed. 
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_FLAG.DIMMED">
            <summary>
            The symbol is shown dimmed compared to normal
            </summary>
        </member>
        <member name="T:FSUIPC.PMDG_NGX_CDU_Cell">
            <summary>
            Represents a cell on the CDU. Holds information about the symbol displayed in the cell.
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_Cell.Symbol">
            <summary>
            The symbol currently displayed.
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_Cell.Color">
            <summary>
            The foreground colour of the cell.
            </summary>
        </member>
        <member name="F:FSUIPC.PMDG_NGX_CDU_Cell.Flags">
            <summary>
            Extra information about the cell.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Cell.ToString">
            <summary>
            Returns the symbol displayed in the cell as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.PMDG_NGX_CDU_Row">
            <summary>
            Represents an entire row of cells on the CDU
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_NGX_CDU_Row.Cells">
            <summary>
            An array of cells that make up the row from left to right. The first cell on the left is index 0. 
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Row.ToString">
            <summary>
            Returns the text dislayed on the row as a string.
            </summary>
            <returns>A string containing all the text on the row.</returns>
        </member>
        <member name="T:FSUIPC.PMDG_NGX_CDU_Screen">
            <summary>
            Represents a CDU screen in a PMDG aircraft.
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_NGX_CDU_Screen.Powered">
            <summary>
            Indicates if this CDU has power or not
            </summary>
        </member>
        <member name="P:FSUIPC.PMDG_NGX_CDU_Screen.Rows">
            <summary>
            An array or rows that make up the entire screen
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Screen.#ctor(System.Int32)">
            <summary>
            Creates a new PMDG CDU Class.
            </summary>
            <param name="Offset">The base offset address of the CDU data. <para>See the FSUIPC documentation for the PMDG aircraft installed in the Modules\FSUIPC Documents folder.</para></param>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Screen.RefreshData">
            <summary>
            Gets the latest data displayed on the CDU from FSUIPC.
            </summary>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Screen.RefreshData(System.Byte)">
            <summary>
            Gets the latest data displayed on the CDU from FSUIPC.
            </summary>
            <param name="ClassInstance">The number of the Class Instance of WideClient you want to talk to.</param>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Screen.ToString">
            <summary>
            Returns the entire screen in a single fixed-length string.<para>The order is from left to right starting at the top row and going down.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.PMDG_NGX_CDU_Screen.ToString(System.String)">
            <summary>
            Returns the entire screen in a single fixed-length string.<para>The order is from left to right starting at the top row and going down.</para><para>Each row is seperated by the supplied RowDeimiter</para>
            </summary>
            <param name="RowDelimiter">A string that will be used to mark the end of each row</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.StatsProcess">
            <summary>
            A structure containing statistics about Process() calls requested by your application 
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.OffsetsCount">
            <summary>
            The number of offsets processed
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.OffsetsReadCount">
            <summary>
            The number of offsets that were read
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.OffsetsWriteCount">
            <summary>
            The number of offsets that were written to
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.BytesWritten">
            <summary>
            The number of bytes written
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.BytesRead">
            <summary>
            The number of bytes read
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.FsuipcMemoryFileSizeBytes">
            <summary>
            The size in bytes of the FSUIPC shared memory file
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.FsuipcMemoryFilePercentFull">
            <summary>
            How full the FSUIPC shared memory file was as a percentage
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.TimeForProcessCall">
            <summary>
            The time taken by the entire Process() call in milliseconds
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.TimeForIPC">
            <summary>
            The time taken to exchange data with FSUIPC in milliseconds
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.GroupsProcessed">
            <summary>
            An array of the names of all the groups processed
            </summary>
        </member>
        <member name="P:FSUIPC.StatsProcess.GroupsProcessedString">
            <summary>
            A single string containing the names of all the groups processed
            </summary>
        </member>
        <member name="T:FSUIPC.StatsGroupInfo">
            <summary>
            Information about a group of offsets
            </summary>
        </member>
        <member name="P:FSUIPC.StatsGroupInfo.GroupName">
            <summary>
            The name of the group
            </summary>
        </member>
        <member name="P:FSUIPC.StatsGroupInfo.OffsetCount">
            <summary>
            The number of offsets in this group
            </summary>
        </member>
        <member name="P:FSUIPC.StatsGroupInfo.DataSizeBytes">
            <summary>
            The number of bytes required for all the offsets in this group
            </summary>
        </member>
        <member name="P:FSUIPC.StatsGroupInfo.IPCFileSizeBytes">
            <summary>
            The number of bytes required in the IPC memory file for all the offsets in this group
            </summary>
        </member>
        <member name="T:FSUIPC.Statistics">
            <summary>
            Contains statistical information about the calls to FSUIPC
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessLast">
            <summary>
            Statistics about the last Process() call
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessMin">
            <summary>
            The Minimum values generated by all the Process() calls so far
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessMax">
            <summary>
            The Maximum values generated by all the Process() calls so far
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessAvg">
            <summary>
            The mean average values generated by all the Process() calls so far
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessTotal">
            <summary>
            The total values generated by all the Process() calls so far
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ProcessCount">
            <summary>
            The number of Process() calls made so far
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ClassInstance">
            <summary>
            The class instance for this set of Statistics
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ConnectionOpenedAt">
            <summary>
            The date/time the connection was opened
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.ConnectionOpenFor">
            <summary>
            The amount of time the connection has been open
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.GroupsRegistered">
            <summary>
            An array of the names of all groups registered with the DLL at the moment
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.GroupsRegisteredString">
            <summary>
            A single string containing a list of all groups registered with the DLL at the moment
            </summary>
        </member>
        <member name="P:FSUIPC.Statistics.GroupInfo">
            <summary>
            A dictionary of group information keyed on the group name.
            </summary>
        </member>
        <member name="T:FSUIPC.TextMenu">
            <summary>
            Helper class for reading the SimConnect Menu Text displayed by other Add-Ons (e.g. Radar Contact)
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.Duration">
            <summary>
            Indicates how long in seconds the text should be displayed for.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.IsMenu">
            <summary>
            Indicates if the display text is a menu. If false it's a single line message.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.Changed">
            <summary>
            Indicates if the text has changed since the last Refrash()
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MenuItems">
            <summary>
            An array of strings representing each menu item
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MenuItemCount">
            <summary>
            The number of lines in the menu. This is filled when IsMenu is true.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MenuTitleText">
            <summary>
            The title of the menu. This is filled when IsMenu is true.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MenuPromptText">
            <summary>
            The prompt text of the menu. This is the fist line displayed above the menu options. This is filled when IsMenu is true.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.Message">
            <summary>
            The message text. This filled when IsMenu is false.
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MessageType">
            <summary>
            The message type (static, scrolling, menu or window)
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.MessageColor">
            <summary>
            The message color (applies to static and scrolling messages only)
            </summary>
        </member>
        <member name="P:FSUIPC.TextMenu.ID">
            <summary>
            The ID of the SimConnect event
            </summary>
        </member>
        <member name="M:FSUIPC.TextMenu.#ctor">
            <summary>
            Creates a new TextMenu class.
            </summary>
        </member>
        <member name="M:FSUIPC.TextMenu.#ctor(System.Byte)">
            <summary>
            Creates a new TextMenu class for a specific WideClient class instance.
            </summary>
        </member>
        <member name="M:FSUIPC.TextMenu.RefreshData">
            <summary>
            Gets the latest text or menu displayed in the flight sim.
            </summary>
        </member>
        <member name="M:FSUIPC.TextMenu.ToString">
            <summary>
            Returns the entire screen in a single fixed-length string.<para>The order is from left to right starting at the top row and going down.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSUIPC.TextMenu.ToString(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the entire screen in a single fixed-length string.<para>The order is from left to right starting at the top row and going down.</para><para>Each row is seperated by the supplied RowDeimiter</para>
            </summary>
            <param name="RowDelimiter">A string that will be used to mark the end of each row</param>
            <param name="IncludeMenuTitle">Pass true to include the title of the menu in the string</param>
            <param name="IncludeMenuPrompt">Pass true to include the menu prompt in the string</param>
            <param name="AddNumbersToMenuItem">Pass true to automatically add numbers to the menu items</param>
            <returns></returns>
        </member>
        <member name="T:FSUIPC.UserInputType">
            <summary>
            Specifies a method of user-interaction 
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputType.key">
            <summary>
            Keyboard press
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputType.button">
            <summary>
            Joystick button
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputType.menu">
            <summary>
            Menu item
            </summary>
        </member>
        <member name="T:FSUIPC.ModifierKeys">
            <summary>
            Specifies the key that must be held down
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.None">
            <summary>
            No modifiers
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.Shift">
            <summary>
            Shift
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.Ctrl">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.Alt">
            <summary>
            Alt #Do not use#
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.ExpectAnotherKey">
            <summary>
            After the main key has been pressed, wait for a second key press.  The second key will be reported back.
            </summary>
        </member>
        <member name="F:FSUIPC.ModifierKeys.Tab">
            <summary>
            Tab
            </summary>
        </member>
        <member name="T:FSUIPC.StateChange">
            <summary>
            Specifies a change in the state of a joystick button
            </summary>
        </member>
        <member name="F:FSUIPC.StateChange.Off_On">
            <summary>
            From Off to On only
            </summary>
        </member>
        <member name="F:FSUIPC.StateChange.On_Off">
            <summary>
            From On to Off only
            </summary>
        </member>
        <member name="F:FSUIPC.StateChange.Both">
            <summary>
            From On to Off, and from Off to On
            </summary>
        </member>
        <member name="F:FSUIPC.StateChange.Off_On_WithRepeat">
            <summary>
            From Off to On repeating about 6 times per second
            </summary>
        </member>
        <member name="T:FSUIPC.UserInputKeyEventArgs">
            <summary>
            Information about the Key press made by the user
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputKeyEventArgs.ID">
            <summary>
            The ID of the key pressed
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputKeyEventArgs.SecondKeyPressed">
            <summary>
            If the application requested a second key press, this property will contain the second key press
            </summary>
        </member>
        <member name="T:FSUIPC.UserInputButtonEventArgs">
            <summary>
            Information about the Joystick press made by the user
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputButtonEventArgs.ID">
            <summary>
            The ID of the button pressed
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputButtonEventArgs.ButtonState">
            <summary>
            The state (on or off) of the button
            </summary>
        </member>
        <member name="T:FSUIPC.UserInputMenuEventArgs">
            <summary>
            Information about the menu selected by the user
            </summary>
        </member>
        <member name="F:FSUIPC.UserInputMenuEventArgs.ID">
            <summary>
            The ID of the menu selected
            </summary>
        </member>
        <member name="T:FSUIPC.UserInputServices">
            <summary>
            Class to easily manage user interaction in your FSUIPC applciation.  Key strokes and Button presses can be registered and then detected when the user presses these keys or buttons in the Flight Sim application.  Also Menu items can be added to flight sim and you can detect when the user selects them.  
            </summary>
        </member>
        <member name="M:FSUIPC.UserInputServices.AddKeyPress(System.String,FSUIPC.ModifierKeys,System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Adds a key press to be detected.  Sink the KeyPressed event to detect then the user pressed this key.
            </summary>
            <param name="ID">A string that you will use to identity and detect this key press.</param>
            <param name="Modifier">Any modifier keys that you want to be held when the main key is pressed.  These modifers can be combined with a bitwise OR.</param>
            <param name="Key">The key to be pressed.</param>
            <param name="PassThroughToFS">If true, the keypress will also be passed to Flight Sim.  If false, the keypress will not be passed on to Flight Sim.</param>
        </member>
        <member name="M:FSUIPC.UserInputServices.AddJoystickButtonPress(System.String,System.Byte,System.Byte,FSUIPC.StateChange)">
            <summary>
            Adds a joystick button press to be detected.  Sink the ButtonPressed event to detect then the user pressed this button.
            </summary>
            <param name="ID">A string that you will use to identity and detect this button press.</param>
            <param name="JoystickNumber">The number of the Joystick (0-15) to detect.</param>
            <param name="ButtonNumber">The number of the Button to detect.</param>
            <param name="StateChangeToDetect">Which states to detect.</param>
        </member>
        <member name="M:FSUIPC.UserInputServices.AddMenuItem(System.String,System.String,System.Boolean)">
            <summary>
            Adds a menu item to the Flight Sim menu.  Sink the MenuSelected event to detect then the user selects this menu item.
            </summary>
            <param name="ID">A string that you will use to identity and detect this menu item.</param>        
            <param name="MenuText">The text to display in the Flight Sim menu.  A short-cut letter can be marked by prefixing it with an ampersand (&amp;).</param>
            <param name="PauseFSOnSelection">Set to true if you want Flight Sim to pause after this menu item is selected.  You will need to unpause Flight Sim in your application when ready to continue.</param>
        </member>
        <member name="M:FSUIPC.UserInputServices.AddSubMenuItem(System.String,System.String,System.String)">
            <summary>
            Adds a sub-menu item to the Flight Sim menu. FSX/ESP/P3D and later ONLY.<para>Note that the Pause On Selection can be set on the Parent Menu only and applied to all sub menus.</para><para>Only one level of sub menus are supported.</para>
            </summary>
            <param name="ID">A string that you will use to identity and detect this menu item.</param>        
            <param name="ParentMenuID">The ID of the main menu item that this new menu will be place under.<para>This cannot be another sub menu.</para></param>        
            <param name="MenuText">The text to display in the Flight Sim menu.  A short-cut letter can be marked by prefixing it with an ampersand (&amp;).</param>
        </member>
        <member name="M:FSUIPC.UserInputServices.CheckForInput">
            <summary>
            Call this method regularly to check if the user has pressed any key or button or has selected a menu item.  FSUIPC documentation recommends every 200ms.
            </summary>
        </member>
        <member name="M:FSUIPC.UserInputServices.KeepMenuItemsAlive">
            <summary>
            Call this method to keep the menu items alive.  The FSUIPC documentation recommends every 5-10 seconds. All menu items will time-out and be removed after approx. 14 seconds if this is not called. 
            </summary>
        </member>
        <member name="M:FSUIPC.UserInputServices.RemoveKeyPress(System.String)">
            <summary>
            Cancels and removes a key press
            </summary>
            <param name="ID">The ID of the key press to cancel/remove </param>
        </member>
        <member name="M:FSUIPC.UserInputServices.RemoveJoystickButtonPress(System.String)">
            <summary>
            Cancels and removes a joystick button press
            </summary>
            <param name="ID">The ID of the button press to cancel/remove </param>
        </member>
        <member name="M:FSUIPC.UserInputServices.RemoveMenuItem(System.String)">
            <summary>
            Cancels and removes a menu item
            </summary>
            <param name="ID">The ID of the menu item to cancel/remove </param>
        </member>
        <member name="M:FSUIPC.UserInputServices.RemoveAll">
            <summary>
            Cancels and removes all key presses, button presses and menu items.  It is recommended that you call this method before your application exits. 
            </summary>
        </member>
        <member name="E:FSUIPC.UserInputServices.KeyPressed">
            <summary>
            This event is raised when one of the registered keys is pressed.
            </summary>
        </member>
        <member name="E:FSUIPC.UserInputServices.ButtonPressed">
            <summary>
            This event is raised when one of the registered joystick buttons is pressed.
            </summary>
        </member>
        <member name="E:FSUIPC.UserInputServices.MenuSelected">
            <summary>
            This event is raised when one of the menu items is selected.
            </summary>
        </member>
        <member name="T:FSUIPC.WeatherServices">
            <summary>
            A class which handles all weather reading and writing.
            </summary>
        </member>
        <member name="P:FSUIPC.WeatherServices.LocationReadTimeout">
            <summary>
            Sets the timeout in milliseconds to wait while attempting to read weather from a weather station or lon/lat location. Default is 1000ms.
            </summary>
        </member>
        <member name="P:FSUIPC.WeatherServices.LocationReadExclusiveMode">
            <summary>
            Prevents any other applications reading weather while you are.
            </summary>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetWeatherAtAircraft">
            <summary>
            Get the current weather active at the player's aircraft.
            </summary>
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetGlobalWeather">
            <summary>
            Gets the currently set Global Weather (if Global Weather mode is not being used nothing will be filled in).
            </summary>
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetWeatherAtLocation(System.String)">
            <summary>
            Gets the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="ICAO">The ICAO code of the weather station to read.</param>
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetWeatherAtLocation(FSUIPC.FsLatLonPoint)">
            <summary>
             Gets the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Location">An FsLatLonPoint object that specifies the location from which to read the weather.</param>
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetWeatherAtLocation(FSUIPC.FsLatitude,FSUIPC.FsLongitude)">
            <summary>
             Gets the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Latitude">An FsLatitude object that specifies the latitude of the point from which to read the weather.</param>
            <param name="Longitude">An FsLongitude object that specifies the longitude of the point from which to read the weather.</param> 
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetWeatherAtLocation(System.Double,System.Double)">
            <summary>
             Gets the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Latitude">The latitude of the point (in decimal degrees) from which to read the weather.</param>
            <param name="Longitude">The longitude of the point (in decimal degrees) from which to read the weather.</param> 
            <returns>An FsWeather object containing all the weather data.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.ClearWeather">
            <summary>
            Clear all types of weather from FS. (Does not reset any changes to the Dynamics setting).
            </summary>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetWeatherChangeRate(FSUIPC.FsWeatherDynamics)">
            <summary>
            Changes the weather change rate option in FS. This is the slider on the weather tab in the display settings dialog.
            <para>This change is only the for the current session and is not remembered when Flight Sim is restarted.</para>
            </summary>
            <param name="NewRate">An FsWeatherDynamics value representing the new change rate setting.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.EnableGlobalWeather">
            <summary>
            Required for FSX+ Only. Puts FS into Global Weather Mode. You should only set Global weather after enabling this feature.
            <para>Note that the DLL will call this automatically when you set any global weather for the first time.</para>
            </summary>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetGlobalWeather(FSUIPC.FsWeather)">
            <summary>
            Set the global weather to the weather described in the FsWeather object passed in.
            </summary>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetGlobalWeather(FSUIPC.FsWeather,System.Boolean,System.UInt16)">
            <summary>
            Set the global weather to the weather described in the FsWeather object passed in.
            <para>NOTE: For FSX+ you must enable the global weather mode by calling EnableGlobalWeather()</para>
            </summary>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
            <param name="IgnoreUserSettings">Set to true if you want to bypass the weather options set the user in FSUIPC.</param>
            <param name="BlendTime">FSX+ ONLY. A value in seconds to make this weather active after a delay, gradually "blending" into the existing weather.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetWeatherStation(System.String,FSUIPC.FsWeather)">
            <summary>
            Set the weather at a specific weather station to the weather described in the FsWeather object passed in.
            </summary>
            <param name="ICAO">The ICAO code of a valid weather station.</param>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetWeatherStation(System.String,FSUIPC.FsWeather,System.Boolean,System.UInt16)">
            <summary>
            Set the weather at a specific weather station to the weather described in the FsWeather object passed in.
            </summary>
            <param name="ICAO">The ICAO code of a valid weather station.</param>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
            <param name="IgnoreUserSettings">Set to true if you want to bypass the weather options set the user in FSUIPC.</param>
            <param name="BlendTime">FSX+ ONLY. A value in seconds to make this weather active after a delay, gradually "blending" into the existing weather.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetWeatherStationPending(System.String,FSUIPC.FsWeather)">
            <summary>
            Sends the weather at a specific weather station but does not active it.
            <para>Multiple weather stations can be set using this method. To make pending weather active, call the ActivatePendingWeather() method.</para>
            </summary>
            <param name="ICAO">The ICAO code of a valid weather station.</param>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetWeatherStationPending(System.String,FSUIPC.FsWeather,System.Boolean)">
            <summary>
            Sends the weather at a specific weather station but does not active it.
            <para>Multiple weather stations can be set using this method. To make pending weather active, call the ActivatePendingWeather() method.</para>
            </summary>
            <param name="ICAO">The ICAO code of a valid weather station.</param>
            <param name="NewWeather">An FsWeather object containing the weather to be set.</param>
            <param name="IgnoreUserSettings">Set to true if you want to bypass the weather options set the user in FSUIPC.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.ActivatePendingWeather">
            <summary>
            Activates all pending weather set with the SetWeatherStationPending() method.
            </summary>
        </member>
        <member name="M:FSUIPC.WeatherServices.ActivatePendingWeather(System.UInt16)">
            <summary>
            Activates all pending weather set with the SetWeatherStationPending() method.
            </summary>
            <param name="BlendTime">FSX+ ONLY. A value in seconds to make this weather active after a delay, gradually "blending" into the existing weather.</param>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetMetarAtLocation(System.String)">
            <summary>
            (FSX+ ONLY) Gets the METAR string for the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="ICAO">The ICAO code of the weather station to read.</param>
            <returns>A METAR string.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetMetarAtLocation(FSUIPC.FsLatLonPoint)">
            <summary>
            (FSX+ ONLY) Gets the METAR string for the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Location">An FsLatLonPoint object that specifies the location from which to read the weather.</param>
            <returns>A METAR string.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetMetarAtLocation(FSUIPC.FsLatitude,FSUIPC.FsLongitude)">
            <summary>
            (FSX+ ONLY) Gets the METAR string for the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Latitude">An FsLatitude object that specifies the latitude of the point from which to read the weather.</param>
            <param name="Longitude">An FsLongitude object that specifies the longitude of the point from which to read the weather.</param> 
            <returns>A METAR string.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.GetMetarAtLocation(System.Double,System.Double)">
            <summary>
            (FSX+ ONLY) Gets the METAR string for the current weather at the specified location. Note that the weather may not be avilable if it's a long way from the player.
            </summary>
            <param name="Latitude">The latitude of the point (in decimal degrees) from which to read the weather.</param>
            <param name="Longitude">The longitude of the point (in decimal degrees) from which to read the weather.</param> 
            <returns>A METAR string.</returns>
        </member>
        <member name="M:FSUIPC.WeatherServices.SetMetar(System.String)">
            <summary>
            (FSX+ ONLY) Write the supplied METAR string to flight sim and active it in the sim.
            </summary>
            <param name="Metar">The METAR string to be written.
            <para>Note the format is not standard METAR used in real life, and is NOT the same as the METAR format read by one of the GetMetar... methods.</para>
            <para>The SimConnect SDK apparently descibes the format.</para>
            </param>
        </member>
        <member name="T:FSUIPC.FsWindLayer">
            <summary>
            A class representing the settings for a wind layer
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.UpperAltitudeMetres">
            <summary>
            The upper alitiude in metres of this wind layer
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.UpperAltitudeFeet">
            <summary>
            The upper alitiude in feet of this wind layer. 
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.SpeedKnots">
            <summary>
            The wind speed in Knots
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.GustKnots">
            <summary>
            The maximum speed of wind gusts in knots
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.Direction">
            <summary>
            The direction (heading) of the wind in Degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.Turbulence">
            <summary>
            Turbulence level
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.Shear">
            <summary>
            Windshear strength
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.DirectionVariance">
            <summary>
            Directional variability (+- this value) in degrees
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.GapAboveMetres">
            <summary>
            This is the gap from the top of surface altitude to first layer's base in Metres. GapAbove is ignored in layers other than the surface layer, and needs FSUIC 4.748 or 3.998k minimum. 
            </summary>
        </member>
        <member name="P:FSUIPC.FsWindLayer.GapAboveFeet">
            <summary>
            This is the gap from the top of surface altitude to first layer's base in Feet. GapAbove is ignored in layers other than the surface layer, and needs FSUIC 4.748 or 3.998k minimum. 
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FsVisibilityLayer">
            <summary>
            A class representing the settings for a visibility layer
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.UpperAltitudeMetres">
            <summary>
            The upper alititude for this layer in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.UpperAltitudeFeet">
            <summary>
            The upper alititude for this layer in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.LowerAltitudeMetres">
            <summary>
            The lower altitiude for this later in Metres.<para>Must be Non-Zero (can be -tve) or layer will be ignored.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.LowerAltitudeFeet">
            <summary>
            The lower alititude for this layer in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.RangeStatuteMiles">
            <summary>
            The range of visibilty for this layer in Statute Miles (accurate to 1/100 of a Mile)
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.RangeNauticalMiles">
            <summary>
            The range of visibilty for this layer in Nautical Miles
            <para>Note that the actual unit used by Flight Sim is 1/100th of a Statute Mile, therefore this value will be rounded to the nearest 100th of a Statute Mile.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsVisibilityLayer.RangeKilometres">
            <summary>
            The range of visibilty for this layer in Kilometres
            <para>Note that the actual unit used by Flight Sim is 1/100th of a Statute Mile, therefore this value will be rounded to the nearest 100th of a Statute Mile.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FsCloudLayer">
            <summary>
            A class representing the settings for a cloud layer
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.UpperAltitudeMetres">
            <summary>
            The upper alititude for this layer in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.UpperAltitudeFeet">
            <summary>
            The upper alititude for this layer in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.LowerAltitudeMetres">
            <summary>
            The upper alititude for this layer in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.LowerAltitudeFeet">
            <summary>
            The lower alititude for this layer in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.DeviationMetres">
            <summary>
            The maximum allowed deviation from the specified upper and lower altitudes in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.DeviationFeet">
            <summary>
            The maximum allowed deviation from the specified upper and lower altitudes in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.CoverageOctas">
            <summary>
            The ratio of cloud coverage in Octas (1/8ths)
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.CloudType">
            <summary>
            The type of cloud for this layer. Values are 1-10. I have no information on what the values correspond to.
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.Turbulence">
            <summary>
            The amount of turbulence generated in the cloud. 
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.Icing">
            <summary>
            The amount of icing generated in the cloud. Possible values are 0 (none) to 4.
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.PrecipitationBaseMetres">
            <summary>
            The alititude below which precipitation will occur in Metres
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.PrecipitationBaseFeet">
            <summary>
            The alititude below which precipitation will occur in Feet
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.PrecipitationType">
            <summary>
            The type of precipitation 
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.PrecipitationRate">
            <summary>
            The rate of precipitation 
            </summary>
        </member>
        <member name="P:FSUIPC.FsCloudLayer.TopShape">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:FSUIPC.FsTemperatureLayer">
            <summary>
            A class representing the settings for a temperature layer
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.BaseAltitudeMetres">
            <summary>
            The base altitude in Metres. This layer takes effect above this altitude. 
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.BaseAltitudeFeet">
            <summary>
            The base altitude in Metres. This layer takes effect above this altitude. 
            <para>Note that the actual unit used by Flight Sim is Metres, therefore this value will be rounded to the nearest Metre.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.DayCelsius">
            <summary>
            The daytime temperature in Degrees Celsius (Centigrade)
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.DayFahrenheit">
            <summary>
            The daytime temperature in Degrees Fahrenheit
            <para>Note that the actual unit used by Flight Sim is Degrees Celsuis (Centigrade), therefore this value will be rounded to the nearest degree celsuis.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.NightVarianceCelsius">
            <summary>
            The nighttime variance in Degrees Celsius (Centigrade). Does not seem to work.
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.NightVarianceFahrenheit">
            <summary>
            he nighttime variance in Degrees Fahrenheit. Does not seem to work.
            <para>Note that the actual unit used by Flight Sim is Degrees Celsuis (Centigrade), therefore this value will be rounded to the nearest degree celsuis.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.DewPointCelsius">
            <summary>
            The dew point in Degrees Celsius. Not sure this actually generates fog though. Maybe just for ATIS.
            </summary>
        </member>
        <member name="P:FSUIPC.FsTemperatureLayer.DewPointFahrenheit">
            <summary>
            The dew point in Degrees Fahrenheit. Not sure this actually generates fog though. Maybe just for ATIS.
            <para>Note that the actual unit used by Flight Sim is Degrees Celsuis (Centigrade), therefore this value will be rounded to the nearest degree celsuis.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FsPressure">
            <summary>
            A class representing the settings for the air pressure
            </summary>
        </member>
        <member name="P:FSUIPC.FsPressure.PressureMillibars">
            <summary>
            Current air pressure at sea level (QNH) in Millibars
            </summary>
        </member>
        <member name="P:FSUIPC.FsPressure.PressureInchesOfMercury">
            <summary>
            Current air pressure at sea level (QNH) in Inches of Mercury (inHg or "Hg)
            <para>Note that the actual unit used by Flight Sim is 1/16 of a Millibar, therefore this value will be rounded to the nearest 1/16th of a Millibar.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsPressure.Drift">
            <summary>
            Just a guess. Unknown what this really is or if it works. Probably in Millibars.
            </summary>
        </member>
        <member name="T:FSUIPC.FsWeather">
            <summary>
            The main Weather object holding all the weather information
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Name">
            <summary>
            A name for this weather set.
            <para>Can be used by applications that store and retreive weather. Has nothing to do with the flight sim or FSUIPC.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Description">
            <summary>
            A long description of this weather.
            <para>Can be used by applications that store and retreive weather. Has nothing to do with the flight sim or FSUIPC.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.ICAO">
            <summary>
            The ICAO code of the weather station from which the data has been retreived. If global weather is requested this will be 'GLOB'.
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Latitude">
            <summary>
            The latitude of the current weather data (Will be 0 if the request was for Global weather or for an invalid ICAO code).
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Longitude">
            <summary>
            The longitude of the current weather data (Will be 0 if the request was for Global weather or for an invalid ICAO code).
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.ElevationMeters">
            <summary>
            When reading weather from a weather station this is the elevation of that station in Metres.
            <para>For weather at the aircraft location this is the elevation of the ground beneath the aircraft.</para>
            <para>For weather at a specific Lat/Lon location this is always 0.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.ElevationFeet">
            <summary>
            When reading weather from a weather station this is the elevation of that station in Feet.
            <para>For weather at the aircraft location this is the elevation of the ground beneath the aircraft.</para>
            <para>For weather at a specific Lat/Lon location this is always 0.</para>
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Timestamp">
            <summary>
            mSecs since start of the flight sim session.
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Pressure">
            <summary>
            The current pressure values
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.Visibility">
            <summary>
            The default (lowest) visibility layer 
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.TemperatureLayers">
            <summary>
            The temperature layers (24 layers allowed)
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.WindLayers">
            <summary>
            The wind layers (24 layers allowed)
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.CloudLayers">
            <summary>
            The cloud layers (16 layers allowed)
            </summary>
        </member>
        <member name="P:FSUIPC.FsWeather.VisibilityUpperLayers">
            <summary>
            Upper visibility layers (12 upper layers allowed)
            </summary>
        </member>
        <member name="M:FSUIPC.FsWeather.ToXML">
            <summary>
            Converts this FsWeather instance into an XML string.
            <para>This can be used by your application to save weather settings for future use. To create an FsWeather object from XML use FsWeather.FromXML()</para>
            <para>See also Save() and FsWeather.Load()</para>
            </summary>
            <returns>An XML string representing the setting for this weather object.</returns>
        </member>
        <member name="M:FSUIPC.FsWeather.FromXML(System.String)">
            <summary>
            Creates a new instance of FsWeather from an XML string.
            <para>To generate the XML for an instance of FsWeather, use the ToXML() method on the object instance.</para>
            <para>See also Save() and FsWeather.Load()</para>
            </summary>
        </member>
        <member name="M:FSUIPC.FsWeather.Save(System.String)">
            <summary>
            Saves the current weather settings to an XML file on the disk.
            <para>Use FsWeather.Load() to load the saved data.</para>
            <para>See also ToXML() and FsWeather.FromXML()</para>        
            </summary>
            <param name="FileName">The full name and path of the file to save to.</param>
        </member>
        <member name="M:FSUIPC.FsWeather.Load(System.String)">
            <summary>
            Loads the weather settings from an XML file on the disk and creates a new instance of FsWeather.
            <para>Use the Save() method on the FsWeather object to save the data to a file on the disk.</para>
            <para>See also ToXML() and FsWeather.FromXML()</para>        
            </summary>
            <param name="FileName">The full name and path of the file to load from.</param>
        </member>
        <member name="T:FSUIPC.FsSetWeatherCommand">
            <summary>
            The action to perform when writing the weather.
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.Set">
            <summary>
            Set weather but is filtered by user options setup in FSUIPC
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.SetExact">
            <summary>
            Set weather bypassing user filters setup in FSUIPC
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.Clear">
            <summary>
            Clear all weather. (Does not reset any changes to the Dynamics setting).
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.Dynamics">
            <summary>
            Set weather dynamics (from Dynamics property).
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.Global">
            <summary>
            (FSX+ ONLY) Put FS into Global weather mode. You should write only 'GLOB' weather after this, which will be applied everywhere.
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.SetPending">
            Metar = 128, // DON'T USE! (Internal setting when weather written via string at B000. (FSX))
             <summary>
             Set weather, filtered by the user's setting in FSUIPC, but don't activate in FS yet. Use the activate function to make pending changes live in FS.
             </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.SetExactPending">
            <summary>
            Set weather, bypassing user filters setup in FSUIPC, but don't activate in FS yet. Use the activate function to make pending changes live in FS.
            </summary>
        </member>
        <member name="F:FSUIPC.FsSetWeatherCommand.Activate">
            <summary>
            Activate any pending weather settings previously set.
            </summary>
        </member>
        <member name="T:FSUIPC.FsWeatherDynamics">
            <summary>
            The rate of change applied to the current weather by Flight Sim
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherDynamics.None">
            <summary>
            No change
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherDynamics.Low">
            <summary>
            Low change
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherDynamics.Medium">
            <summary>
            Medium change
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherDynamics.High">
            <summary>
            High change
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherDynamics.VeryHigh">
            <summary>
            Maxmimum change
            </summary>
        </member>
        <member name="T:FSUIPC.FsWeatherFlags">
            <summary>
            Flags used for FSX and above
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherFlags.None">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:FSUIPC.FsWeatherFlags.BlendToNewWeather">
            <summary>
            Set this flag if "BlendTimeInSeconds" value is to be used in setting weather in FSX
            This applies to weather set via NWI values or via the NEXT Metar string
            written to B000. It's a "one shot" flag, cleared after use. 
            <para>The Seconds value determines whether the weather change is effective
            immediately or after a delay, gradually "blending" into the existing
            weather.</para>
            </summary>
        </member>
        <member name="T:FSUIPC.FsCloudType">
            <summary>
            The type of cloud 
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_0">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Cirrus">
            <summary>
            Cirrus Cloud
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_2">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_3">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_4">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_5">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_6">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Type_7">
            <summary>
            Unknown cloud type
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Stratus">
            <summary>
            Status Cloud
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Cumulus">
            <summary>
            Cumulus Cloud
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudType.Cumulonimbus">
            <summary>
            Cumulonimbus Cloud
            </summary>
        </member>
        <member name="T:FSUIPC.FsCloudCoverage">
            <summary>
            Cloud coverage in octars
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.None_0">
            <summary>
            No cloud
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Few_1">
            <summary>
            1 Octar coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Few_2">
            <summary>
            2  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Scattered_3">
            <summary>
            3  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Scattered_4">
            <summary>
            4  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Broken_5">
            <summary>
            5  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Broken_6">
            <summary>
            6  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Broken_7">
            <summary>
            7  Octars coverage
            </summary>
        </member>
        <member name="F:FSUIPC.FsCloudCoverage.Overcast_8">
            <summary>
            8  Octars coverage
            </summary>
        </member>
        <member name="T:FSUIPC.FsIcing">
            <summary>
            Amount of Icing
            </summary>
        </member>
        <member name="F:FSUIPC.FsIcing.None">
            <summary>
            No Icing
            </summary>
        </member>
        <member name="F:FSUIPC.FsIcing.Trace">
            <summary>
            Trace amounts of icing
            </summary>
        </member>
        <member name="F:FSUIPC.FsIcing.Light">
            <summary>
            Light icing
            </summary>
        </member>
        <member name="F:FSUIPC.FsIcing.Moderate">
            <summary>
            Moderate amounts of icing
            </summary>
        </member>
        <member name="F:FSUIPC.FsIcing.Severe">
            <summary>
            Severe icing
            </summary>
        </member>
        <member name="T:FSUIPC.FsPrecipitationType">
            <summary>
            Precipitation Type
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationType.None">
            <summary>
            No preceipitation
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationType.Rain">
            <summary>
            Rain
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationType.Snow">
            <summary>
            Snow
            </summary>
        </member>
        <member name="T:FSUIPC.FsPrecipitationRate">
            <summary>
            Precipitation Rate
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.VeryLow">
            <summary>
            Very Low
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.Moderate">
            <summary>
            Moderate
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.VeryHigh">
            <summary>
             Very High
            </summary>
        </member>
        <member name="F:FSUIPC.FsPrecipitationRate.Thunderstorm">
            <summary>
             Thunderstorm (cloud type must be Cumulonimbus for this to work) 
            </summary>
        </member>
        <member name="T:FSUIPC.FsTurbulenceLevel">
            <summary>
            Level if turbulence
            </summary>
        </member>
        <member name="F:FSUIPC.FsTurbulenceLevel.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:FSUIPC.FsTurbulenceLevel.Light">
            <summary>
            Light
            </summary>
        </member>
        <member name="F:FSUIPC.FsTurbulenceLevel.Moderate">
            <summary>
            Moderate
            </summary>
        </member>
        <member name="F:FSUIPC.FsTurbulenceLevel.Heavy">
            <summary>
            Heavy
            </summary>
        </member>
        <member name="F:FSUIPC.FsTurbulenceLevel.Severe">
            <summary>
            Severe
            </summary>
        </member>
        <member name="T:FSUIPC.FsWindShearStrength">
            <summary>
            Wind shear strength
            </summary>
        </member>
        <member name="F:FSUIPC.FsWindShearStrength.Gradual">
            <summary>
            Gradual
            </summary>
        </member>
        <member name="F:FSUIPC.FsWindShearStrength.Moderate">
            <summary>
            Moderate
            </summary>
        </member>
        <member name="F:FSUIPC.FsWindShearStrength.Steep">
            <summary>
            Steep
            </summary>
        </member>
        <member name="F:FSUIPC.FsWindShearStrength.Instantaneous">
            <summary>
            Instantaneous
            </summary>
        </member>
    </members>
</doc>
